@model ContractManagementSystem.Models.CommonModel
@{
    ViewBag.Title = "DraftView";
    Layout = "~/Views/Shared/_EditorLayout.cshtml";
    string CurrentUserID()
    {
        string userName = string.Empty;

        if (HttpContext.Current.Request.IsAuthenticated)
        {
            userName = HttpContext.Current.User.Identity.Name.Split('|')[1];
        }
        return userName;

    }
    string CurrentUserName()
    {
        string userName = string.Empty;

        if (HttpContext.Current.Request.IsAuthenticated)
        {
            userName = HttpContext.Current.User.Identity.Name.Split('|')[0];
        }

        return userName;

    }
    int CurrentLoggedUserID = Convert.ToInt32(CurrentUserID());
    string CurrentLoggedUserName = CurrentUserName();
}

    @*<style>
        ins {
          background: lightgreen !important;
          text-decoration: none;
        }

        del {
          background: pink !important;
        }
    </style>*@
    <div>
        <div class="content">
            <div class="page-inner TemplateDraft_Card" style="padding-top:2px;">
                <div class="page-header" style="padding-left:40px; padding-bottom:4px; padding-right:40px;">

                    <div class="row align-items-center form-inline">
                        <div class="col-sm-5">

                            <span class="page-title" id="AppendTemplateName" style="font-size:18px;"></span>
                            @{
                                {
                                    string Id = Request.Url.AbsoluteUri.Split('/').Last();
                                    if (Model.Template.Where(x => x.TemplateID.ToString() == Id).Where(x => x.Status == "Approved").Any())
                                    {
                                        <span class='badge Legal shadow draft'>
                                            <span class="dot" style="margin-bottom:1px;"> </span>&nbsp;
                                            <span>Approved</span>
                                        </span>

                                    }
                                    if (Model.Template.Where(x => x.TemplateID.ToString() == Id).Where(x => x.Status == "In Effect").Any())
                                    {
                                        <span class='badge Legal shadow  Ineffect'>
                                            <span class="dot" style="margin-bottom:1px;"> </span>&nbsp;
                                            <span>Approved</span>
                                        </span>

                                    }
                                    if (Model.Template.Where(x => x.TemplateID.ToString() == Id).Where(x => x.Status == "Pending Approval").Any())
                                    {
                                        <span class='badge Legal shadow  Pennding_Approvals'>
                                            <span class="dot" style="margin-bottom:1px;"> </span>&nbsp;
                                            <span>Pending Approval</span>
                                        </span>

                                    }
                                    if (Model.Template.Where(x => x.TemplateID.ToString() == Id).Where(x => x.Status == "Draft").Any())
                                    {
                                        <span class='badge Legal shadow  draft'>
                                            <span class="dot" style="margin-bottom:1px;"> </span>&nbsp;
                                            <span>Draft</span>
                                        </span>

                                    }
                                    if (Model.Template.Where(x => x.TemplateID.ToString() == Id).Where(x => x.Status == "Rejected").Any())
                                    {
                                        <span class='badge Legal shadow  Rework'>
                                            <span class="dot" style="margin-bottom:1px;"> </span>&nbsp;
                                            <span>Rejected</span>
                                        </span>

                                    }

                                }
                            }
                        </div>

                        <div class="col-sm-7 text-right">
                            <button type="button" onclick="PreviousPage();" id="backicon" title="Back to Details" class="btn btn-xs btn-light"><i class="flaticon-back" aria-hidden="true"></i>&nbsp; Back</button>
                            &nbsp; <button type="button" class="btn btn-xs btn-light" id="DocumentUpload" title="Upload Word Document" data-toggle="modal" data-target="#SignedContractModal" style="display:none;"><i class="flaticon-archive"></i>&nbsp; Upload</button>
                            @if (User.IsInRole("admin") || User.IsInRole("legal")|| User.IsInRole("finance"))
                            {
                                string Id = Request.Url.AbsoluteUri.Split('/').Last();
                                string emp = CurrentUserID();
                                if ((Model.Template.Where(x => x.TemplateID.ToString() == Id).Where(x => x.Status == "Draft").Any()) || (Model.Template.Where(x => x.TemplateID.ToString() == Id).Where(x => x.NextApprover.ToString() == emp).Where(x => x.Status == "Rejected").Any()))
                                {


                                    @Html.Raw("&nbsp;")<button class="btn btn-light btn-xs" title="Edit Content" id="Edit"><i class="flaticon-pencil" aria-hidden="true"></i>&nbsp; Edit Content</button>
                                    @Html.Raw("&nbsp;")<button class="btn btn-light btn-xs" title="Initiate" id="Initiate" data-toggle="modal" onclick="initiate();" data-target="#InitiateModal"><i class="flaticon-success" aria-hidden="true"></i>&nbsp; Initiate</button>

                                    <span id="Save_2" style="display:none;">&nbsp;</span><button type="button" class="btn btn-light  btn-xs" title="Save" id="Save" onclick="SaveTemplate();" style="display:none;"><i class="flaticon-success" aria-hidden="true"></i>&nbsp; Save</button>
                                    <span id="Cancel_2" style="display:none;">&nbsp;</span><button type="button" class="btn btn-light btn-xs" title="Cancel" id="Cancel" style="display:none;"><i class="flaticon-error" aria-hidden="true"></i>&nbsp; Cancel</button>
                                    <span id="MoreVariable_id_2" style="display:none;">&nbsp;</span><button class="btn btn-light btn-xs" id="MoreVariable_id" title="Add Place Holder" data-toggle="modal" data-target="#AddMoreVariableTable" style="display:none;"><i class="flaticon-plus"></i>&nbsp; Add Place Holder</button>

                                    <span id="RemoveVariable_id_2" style="display:none;">&nbsp;</span><button class="btn btn-light btn-xs" id="RemoveVariable_id" title="Remove Place Holder" style="display:none;"><i class="flaticon-interface-5"></i>&nbsp; Remove Place Holder</button>

                                }
                            }
                            @if (User.IsInRole("Approver") || User.IsInRole("legal")|| User.IsInRole("finance"))
                            {
                                string Id = Request.Url.AbsoluteUri.Split('/').Last();
                                string emp = CurrentUserID();
                                if (Model.Template.Where(x => x.TemplateID.ToString() == Id).Where(x => x.NextApprover.ToString() == emp).Where(x => x.Status == "Pending Approval").Any())
                                {

                                    @Html.Raw("&nbsp;")<button class="btn btn-light btn-xs" id="Approve" title="Approve" data-toggle="modal" data-target="#ApproveModal"><i class="flaticon-success" aria-hidden="true"></i>&nbsp; Approve</button>
                                    @Html.Raw("&nbsp;")<button class="btn btn-light btn-xs" id="Reject" title="Reject" data-toggle="modal" data-target="#RejectAndAssignModal"><i class="flaticon-error" aria-hidden="true"></i>&nbsp; Reject </button>
                                    if (User.IsInRole("legal"))
                                    {
                                        @Html.Raw("&nbsp;")<button class="btn btn-light btn-xs" title="Edit" id="Edit"><i class="flaticon-pencil" aria-hidden="true"></i>&nbsp; Edit</button>

                                        <span id="Save_2" style="display:none;">&nbsp;</span><button type="button" class="btn btn-light  btn-xs" id="Save" title="Save" onclick="SaveTemplate();" style="display:none;"><i class="flaticon-success" aria-hidden="true"></i>&nbsp; Save</button>
                                        <span id="Cancel_2" style="display:none;">&nbsp;</span><button type="button" class="btn btn-light btn-xs" id="Cancel" title="Cancel" style="display:none;"><i class="flaticon-error" aria-hidden="true"></i>&nbsp; Cancel</button>
                                        <span id="MoreVariable_id_2" style="display:none;">&nbsp;</span><button class="btn btn-light btn-xs" title="Add Place Holder" id="MoreVariable_id" data-toggle="modal" data-target="#AddMoreVariableTable" style="display:none;"><i class="flaticon-plus"></i>&nbsp; Add Place Holder</button>
                                        <span id="RemoveVariable_id_2" style="display:none;">&nbsp;</span><button class="btn btn-light btn-xs" title="Remove Place Holder" id="RemoveVariable_id" style="display:none;"><i class="flaticon-interface-5"></i>&nbsp; Remove Place Holder</button>

                                    }
                                }


                            }
                            <span id="Download_Button">&nbsp;</span><button class="btn btn-xs btn-light" title="Download" data-toggle="modal" id="DownloadButton" onclick="DownloadAcceptChanges();" data-target="#TemplateDownloadOptionModal"><i class="flaticon-inbox"></i>&nbsp; Download</button>
                            <span id="Version_Button">&nbsp;</span><button data-toggle="modal" id="VersionButton" title="Version" data-target="#AddVersionModal" class="btn btn-xs btn-light DummyClass"><i class="flaticon-interface-2" aria-hidden="true"></i>&nbsp; Version</button>
                            &nbsp;<button class="btn btn-xs btn-light" title="History" data-toggle="modal" data-target="#LogModel"><i class="flaticon-clock-1" aria-hidden="true"></i>&nbsp;&nbsp;History</button>
                        </div>
                    </div>
                </div>


                <div class="row" style="padding-left:20px; padding-right:40px;">
                    <div class="col-md-8 card_Editor">
                        <div class="card" style="margin-bottom:-5px;">
                            <div class="card-body" style="flex: 0 0;padding: 0px;" id="DragTest">
                                <textarea name="editor1" id="IDofEditor"></textarea>
                            </div>
                        </div>
                    </div>

                    <div class="col-md-4 card_Editor">


                        <div class="card tblVariable_font" style="margin-bottom:-5px;">

                            <div class="card-body tblVariableCard" style="height:575px;">
                                <div class="row">
                                    <div class="col-sm-12">
                                        <div style="height:550px; overflow-y:auto;">
                                            <table id="tblVendorVariable" class="table table-bordered">
                                                <thead>
                                                    <tr style="background-color: #f1f1f1;">
                                                        <th></th>
                                                        <th><center>Place Holder</center></th>
                                                        @*<th><center>Default Value</center></th>*@
                                                        <th><center>Action</center></th>
                                                    </tr>
                                                </thead>
                                                <tbody id="Add_MoreVariable">


                                                    <tr>
                                                        <td></td>
                                                        <td class="Variable_Name">Duration from</></td>

                                                        <td>
                                                            <center>
                                                                <button class="btn btn-xs btn-light btn_link" onclick="InsertVendorVariable('Variable_DurationFrom','Duration From');" disabled><i class="flaticon-plus"></i>&nbsp; Add</button>
                                                            </center>
                                                        </td>
                                                    </tr>
                                                    <tr>
                                                        <td></td>
                                                        <td class="Variable_Name">Duration to</td>

                                                        <td>
                                                            <center>
                                                                <button class="btn btn-xs btn-light btn_link" onclick="InsertVendorVariable('Variable_DurationTo','Duration to');" disabled><i class="flaticon-plus"></i>&nbsp; Add</button>
                                                            </center>
                                                        </td>
                                                    </tr>
                                                    <tr>
                                                        <td></td>
                                                        <td class="Variable_Name">Vendor Name</td>

                                                        <td>
                                                            <center>
                                                                <button class="btn btn-xs btn-light btn_link" onclick="InsertVendorVariable('Variable_VendorName', 'Vendor Name');" disabled><i class="flaticon-plus"></i>&nbsp; Add</button>
                                                            </center>
                                                        </td>
                                                    </tr>
                                                    <tr>
                                                        <td></td>
                                                        <td class="Variable_Name">Vendor GSTN</td>

                                                        <td>
                                                            <center>
                                                                <button class="btn btn-xs btn-light btn_link" onclick="InsertVendorVariable('Variable_VendorGSTN','Vendor GSTN');" disabled><i class="flaticon-plus"></i>&nbsp; Add</button>
                                                            </center>
                                                        </td>
                                                    </tr>
                                                    <tr>
                                                        <td></td>
                                                        <td class="Variable_Name">Authorised Signatory</td>

                                                        <td>
                                                            <center><button class="btn btn-xs btn-light btn_link" onclick="InsertVendorVariable('Variable_Signatory','Authorised Signatory');" disabled><i class="flaticon-plus"></i>&nbsp; Add</button></center>
                                                        </td>
                                                    </tr>
                                                    <tr>
                                                        <td></td>
                                                        <td class="Variable_Name">Registered Address</td>

                                                        <td><center><button class="btn btn-xs btn-light btn_link" onclick="InsertVendorVariable('Variable_Address','Registered Address');" disabled><i class="flaticon-plus"></i>&nbsp; Add</button></center></td>
                                                    </tr>
                                                    <tr>
                                                        <td></td>
                                                        <td class="Variable_Name">Branch1 Address</td>

                                                        <td><center><button class="btn btn-xs btn-light btn_link" onclick="InsertVendorVariable('Branch1_Address','Branch1 Address');" disabled><i class="flaticon-plus"></i>&nbsp; Add</button></center></td>
                                                    </tr>
                                                    <tr>
                                                        <td></td>
                                                        <td class="Variable_Name">Branch2 Address</td>

                                                        <td><center><button class="btn btn-xs btn-light btn_link" onclick="InsertVendorVariable('Branch2_Address','Branch2 Address');" disabled><i class="flaticon-plus"></i>&nbsp; Add</button></center></td>
                                                    </tr>
                                                    <tr>
                                                        <td></td>
                                                        <td class="Variable_Name">Branch3 Address</td>

                                                        <td><center><button class="btn btn-xs btn-light btn_link" onclick="InsertVendorVariable('Branch3_Address','Branch3 Address');" disabled><i class="flaticon-plus"></i>&nbsp; Add</button></center></td>
                                                    </tr>
                                                    <tr>
                                                        <td></td>
                                                        <td class="Variable_Name">Branch4 Address</td>

                                                        <td><center><button class="btn btn-xs btn-light btn_link" onclick="InsertVendorVariable('Branch4_Address','Branch4 Address');" disabled><i class="flaticon-plus"></i>&nbsp; Add</button></center></td>
                                                    </tr>
                                                    <tr>
                                                        <td></td>
                                                        <td class="Variable_Name">Branch5 Address</td>

                                                        <td><center><button class="btn btn-xs btn-light btn_link" onclick="InsertVendorVariable('Branch5_Address','Branch5 Address');" disabled><i class="flaticon-plus"></i>&nbsp; Add</button></center></td>
                                                    </tr>
                                                </tbody>
                                            </table>
                                        </div>
                                    </div>
                                </div>


                                @{
                                    string id = Request.Url.AbsoluteUri.Split('/').Last();
                                    var VariableList = Model.VariableDatas.Where(x => x.TypeID.ToString() == id).Where(x => x.Type == "Template").Where(x => x.Version == "Template"); ;
                                    foreach (var eachVariabe in VariableList)
                                    {


                                        if (eachVariabe.Variable == "Duration from")
                                        {

                                        }
                                        else if (eachVariabe.Variable == "Duration to")
                                        {
                                        }
                                        else if (eachVariabe.Variable == "Vendor Name")
                                        {

                                        }
                                        else if (eachVariabe.Variable == "Vendor GSTN")
                                        {

                                        }
                                        else if (eachVariabe.Variable == "Authorised Signatory")
                                        {

                                        }
                                        else if (eachVariabe.Variable == "Registered Address")
                                        {

                                        }
                                        else if (eachVariabe.Variable == "Branch1 Address")
                                        {

                                        }
                                        else if (eachVariabe.Variable == "Branch2 Address")
                                        {

                                        }
                                        else if (eachVariabe.Variable == "Branch3 Address")
                                        {

                                        }
                                        else if (eachVariabe.Variable == "Branch4 Address")
                                        {

                                        }
                                        else if (eachVariabe.Variable == "Branch5 Address")
                                        {

                                        }

                                        else
                                        {

                                            <script>
                                                    var NewVariable_append = '@{ string txtclass = @eachVariabe.Variable.Replace(" ", "_");<td><input type="checkbox" name="record" class="larger" disabled/></td><td class="\'@txtclass\' Variable_Name">@eachVariabe.Variable</td>}<td><center><button id="\' + @eachVariabe.Variable.Replace(" ", "_") + \'" class="btn btn-xs btn-light btn_link" onclick="InsertVariable(\'@eachVariabe.Variable.Replace(" ", "_")\');" disabled><i class="flaticon-plus"></i>&nbsp; Add</button></center></td>';

                                    var tableRef = document.getElementById('tblVendorVariable');
                                    var newRow = tableRef.insertRow(tableRef.rows.length);
                                    newRow.innerHTML = NewVariable_append;
                                            </script>

                                        }



                                    }
                                }


                            </div>
                        </div>
                        @*</div>
                        </div>*@
                    </div>
                </div>

                
                <br />
                <br />
                @{
                    string TemId = Request.Url.AbsoluteUri.Split('/').Last();
                    <div class="row" style="padding-left:40px; padding-right:40px;">
                        <div class="col-sm-12">
                            <div class="card">
                                <div class="card-header">
                                    <h3><b>Comments</b></h3>
                                </div>
                                <div class="card-body">
                                    <div class="row">

                                        <div class="col-sm-12">
                                            <div class="table-responsive">
                                                <table id="ApproversTable" class="display table table-bordered appoverTabel">
                                                    <thead>
                                                        <tr>
                                                            <th width="10%"><center>Role</center></th>
                                                            <th width="15%"><center>Employee ID</center></th>
                                                            <th width="25%"><center>Employee Name</center></th>
                                                            <th width="50%"><center>Comments</center></th>
                                                        </tr>
                                                    </thead>
                                                    <tbody>
                                                        @if (Model.Template.Where(x => x.TemplateID.ToString() == TemId).Where(x => x.InitiatorStatus != null).Any())
                                                        {
                                                            <tr>
                                                                <td>Initiator</td>
                                                                <td>@Model.Template.Where(x => x.TemplateID.ToString() == TemId).First().Initiator</td>
                                                                <td id="Initiator_name"></td>
                                                                <td>@Model.Template.Where(x => x.TemplateID.ToString() == TemId).First().InitiatorComments</td>
                                                            </tr>
                                                        }
                                                        @if (Model.Template.Where(x => x.TemplateID.ToString() == TemId).Where(x => x.Approver1Status != null).Any())
                                                        {
                                                            <tr>
                                                                <td>Approver 1</td>
                                                                <td>@Model.Template.Where(x => x.TemplateID.ToString() == TemId).First().Approver1ID</td>
                                                                <td id="Approver1_name"></td>
                                                                <td>@Model.Template.Where(x => x.TemplateID.ToString() == TemId).First().Approver1Comments</td>
                                                            </tr>
                                                        }
                                                        @if (Model.Template.Where(x => x.TemplateID.ToString() == TemId).Where(x => x.Approver2Status != null).Any())
                                                        {
                                                            <tr>
                                                                <td>Approver 2</td>
                                                                <td>@Model.Template.Where(x => x.TemplateID.ToString() == TemId).First().Approver2ID</td>
                                                                <td id="Approver2_name"></td>
                                                                <td>@Model.Template.Where(x => x.TemplateID.ToString() == TemId).First().Approver2Comments</td>
                                                            </tr>
                                                        }
                                                        @if (Model.Template.Where(x => x.TemplateID.ToString() == TemId).Where(x => x.Approver3Status != null).Any())
                                                        {
                                                            <tr>
                                                                <td>Approver 3</td>
                                                                <td>@Model.Template.Where(x => x.TemplateID.ToString() == TemId).First().Approver3ID</td>
                                                                <td id="Approver3_name"></td>
                                                                <td>@Model.Template.Where(x => x.TemplateID.ToString() == TemId).First().Approver3Comments</td>
                                                            </tr>
                                                        }
                                                        @if (Model.Template.Where(x => x.TemplateID.ToString() == TemId).Where(x => x.Approver4Status != null).Any())
                                                        {
                                                            <tr>
                                                                <td>Approver 4</td>
                                                                <td>@Model.Template.Where(x => x.TemplateID.ToString() == TemId).First().Approver4ID</td>
                                                                <td id="Approver4_name"></td>
                                                                <td>@Model.Template.Where(x => x.TemplateID.ToString() == TemId).First().Approver4Comments</td>
                                                            </tr>
                                                        }
                                                        @if (Model.Template.Where(x => x.TemplateID.ToString() == TemId).Where(x => x.Approver5Status != null).Any())
                                                        {
                                                            <tr>
                                                                <td>Approver 5</td>
                                                                <td>@Model.Template.Where(x => x.TemplateID.ToString() == TemId).First().Approver5ID</td>
                                                                <td id="Approver5_name"></td>
                                                                <td>@Model.Template.Where(x => x.TemplateID.ToString() == TemId).First().Approver5Comments</td>
                                                            </tr>
                                                        }
                                                        @if (Model.Template.Where(x => x.TemplateID.ToString() == TemId).Where(x => x.Approver6Status != null).Any())
                                                        {
                                                            <tr>
                                                                <td>Approver 6</td>
                                                                <td>@Model.Template.Where(x => x.TemplateID.ToString() == TemId).First().Approver6ID</td>
                                                                <td id="Approver6_name"></td>
                                                                <td>@Model.Template.Where(x => x.TemplateID.ToString() == TemId).First().Approver6Comments</td>
                                                            </tr>
                                                        }

                                                        @if (Model.Template.Where(x => x.TemplateID.ToString() == TemId).Where(x => x.Approver7Status != null).Any())
                                                        {
                                                            <tr>
                                                                <td>Approver 7</td>
                                                                <td>@Model.Template.Where(x => x.TemplateID.ToString() == TemId).First().Approver7ID</td>
                                                                <td id="Approver7_name"></td>
                                                                <td>@Model.Template.Where(x => x.TemplateID.ToString() == TemId).First().Approver7Comments</td>
                                                            </tr>
                                                        }
                                                        @if (Model.Template.Where(x => x.TemplateID.ToString() == TemId).Where(x => x.Approver8Status != null).Any())
                                                        {
                                                            <tr>
                                                                <td>Approver 8</td>
                                                                <td>@Model.Template.Where(x => x.TemplateID.ToString() == TemId).First().Approver8ID</td>
                                                                <td id="Approver8_name"></td>
                                                                <td>@Model.Template.Where(x => x.TemplateID.ToString() == TemId).First().Approver8Comments</td>
                                                            </tr>
                                                        }
                                                        @if (Model.Template.Where(x => x.TemplateID.ToString() == TemId).Where(x => x.Approver9Status != null).Any())
                                                        {
                                                            <tr>
                                                                <td>Approver 9</td>
                                                                <td>@Model.Template.Where(x => x.TemplateID.ToString() == TemId).First().Approver9ID</td>
                                                                <td id="Approver9_name"></td>
                                                                <td>@Model.Template.Where(x => x.TemplateID.ToString() == TemId).First().Approver9Comments</td>
                                                            </tr>
                                                        }
                                                        @if (Model.Template.Where(x => x.TemplateID.ToString() == TemId).Where(x => x.Approver10Status != null).Any())
                                                        {
                                                            <tr>
                                                                <td>Approver 10</td>
                                                                <td>@Model.Template.Where(x => x.TemplateID.ToString() == TemId).First().Approver10ID</td>
                                                                <td id="Approver10_name"></td>
                                                                <td>@Model.Template.Where(x => x.TemplateID.ToString() == TemId).First().Approver10Comments</td>
                                                            </tr>
                                                        }
                                                    </tbody>
                                                </table>

                                            </div>
                                        </div>

                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                }

            </div>
        </div>

        <div class="modal fade" id="LogModel" role="dialog" tabindex="-1">
            <div class="text-right model_body_position">

            </div>

            <div class="modal-dialog" style="max-width:80%;">

                <div class="modal-content">

                    <div class="modal-header modalheadercolor websitecolour">
                        <label style="font-size: 20px !important;"><b>Template Modified History</b></label>
                        <button data-dismiss="modal" class="modaldismissarrow text-right btn btn-sm btn-light btn_close" title="Close">Close</button>

                    </div>
                    <div class="modal-body" style="height:450px; overflow: auto;">
                        <div class="row">
                            <div class="col-lg-12">
                                <div class="tableFixHead_LogHistory">
                                    <table class="table table-bordered">

                                        <thead>

                                            <tr>
                                                <th><center>Date and Time</center></th>
                                                <th><center>Modified By</center></th>
                                                <th><center>Activity</center></th>
                                                <th><center>Changed From</center></th>
                                                <th><center>Changed To</center></th>

                                            </tr>

                                        </thead>

                                        <tbody id="tblTemplateLogList">
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>

                        @*<hr />

                        <div class="card-action text-right card_footer_button">
                            <input type="submit" class="btn btn-success" value="Select" id="CaptureHodList">
                            <input type="button" class="btn btn-danger" data-dismiss="modal" value="Cancel" />

                        </div>*@
                    </div>
                </div>

            </div>
        </div>


        @*<div class="modal fade" id="AddClauseModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
            <div class="modal-dialog" style="max-width: 60%; margin-top:50px;" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <label style="font-size: 20px !important;">
                            <b>Clause Library</b>
                        </label>
                        <button type="button" class="Close" data-dismiss="modal" aria-label="Close" style="color:white;">
                            <span aria-hidden="true">&times;</span>
                        </button>
                        <button data-dismiss="modal" class="modaldismissarrow btn btn-sm btn-danger text-right" style="color:white; font-size:13px;"> <i class="flaticon-error"></i> &nbsp;Close</button>
                    </div>
                    <div class="modal-body" style="height:450px; overflow: auto;">

                        <div class="table-responsive">
                            <button class="btn btn-primary" onclick="AddClause()">Add Clause</button>
                            <div class="table-responsive">

                                <table id="multi-filter-select" class="display table table-striped table-hover table-bordered">

                                    <thead>

                                        <tr>
                                            <th><center>Preview</center></th>
                                            <th><center>Select Clause</center></th>
                                            <th><center>Clause Title</center></th>
                                            <th>Type</th>
                                            <th><center>Description</center></th>

                                        </tr>

                                    </thead>

                                    <tbody>
                                        @foreach (var item in Model.Clause)
                                        {

                                        <tr>

                                            @{
                                                <td>
                                                    <center>
                                                        <a href="" id="@item.ClauseClauseID" onclick="ClausePreview(this.id);" data-toggle="modal" data-target="#TemplatePreview"><i class="
        -eye fa-1x" aria-hidden="true"></i></a>
                                                    </center>
                                                </td>
                                                string ClauseTitle = "ClauseTitle" + item.ClauseClauseID;
                                                string ClauseText = "ClauseText" + item.ClauseClauseID;

                                                <td>
                                                    <center>
                                                        <button class="btn btn-sm btn-success" data-dismiss="modal" onclick="AddClause('@item.ClauseClauseID');">Add Clause</button>
                                                    </center>
                                                </td>

                                                <td id="@ClauseTitle">@item.ClauseClauseTitle</td>

                                                <td>
                                                    @item.ClauseClauseDescription
                                                    <lable id="@ClauseText" style="visibility:hidden; border:none;">@Html.Raw(@item.ClauseClauseText)</lable>

                                                </td>

                                            }
                                        </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>*@

        @*<div class="modal" id="TemplatePreview" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered" style="max-width: 75%; padding-left:80px; padding-right:80px;" role="document">
                <div class="modal-content VersionCompare_Modal" style="height:600px;">
                    <div class="modal-header">
                        <div class="col-sm-7 form-inline">
                            <span style="font-size:20px; color:white;"><b>Clause Preview : <span id="previewclausename" style="font-size:20px;"></span></b></span>

                        </div>
                        <div class="text-right model_body_position">
                            <button type="button" class="btn btn-sm btn-success template_preview" style="font-size:13px;" onclick="AddClause(this.id);" data-dismiss="modal"><i class="flaticon-success" aria-hidden="true"></i>&nbsp; Select this Clause</button>
                            &nbsp; &nbsp; &nbsp;<button href="" data-dismiss="modal" class="modaldismissarrow btn btn-sm btn-danger" style="font-size:13px;"><i class="flaticon-error" aria-hidden="true"></i> &nbsp; Close</button>
                        </div>
                    </div>
                    <div class="modal-body" style="height:450px; overflow: auto;">
                        <textarea name="editor7" id="IDofEditor7"></textarea>
                    </div>

                </div>
            </div>
        </div>*@

        <div class="modal fade" id="TemplateDownloadOptionModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <label style="font-size: 20px !important;">
                            <b>Download</b>
                        </label>
                        <button data-dismiss="modal" class="modaldismissarrow text-right btn btn-sm btn-light btn_close" title="Close">Close</button>
                    </div>

                    <div class="modal-body">
                        <div class="row form-inline justify-content-center">

                            <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#TemplateDownload" data-dismiss="modal"> Download as PDF</button>
                            @*@{
                                string CID = Request.Url.AbsoluteUri.Split('/').Last();
                                if (Model.Template.Where(x => x.TemplateID.ToString() == CID).Where(x => x.Status != "In Effect").Any())
                                {
                                    @Html.Raw("&nbsp;")@Html.Raw("&nbsp;")@Html.Raw("&nbsp;")@Html.Raw("&nbsp;")@Html.Raw("&nbsp;")@Html.Raw("&nbsp;")
                                    <button type="button" class="btn btn-primary" data-dismiss="modal" onclick="ExportAsWord();"> Download as Word</button>
                                }
                            }*@
                            @Html.Raw("&nbsp;")@Html.Raw("&nbsp;")@Html.Raw("&nbsp;")@Html.Raw("&nbsp;")@Html.Raw("&nbsp;")@Html.Raw("&nbsp;")
                            <button type="button" class="btn btn-primary" data-dismiss="modal" onclick="ExportAsWord();"> Download as Word</button>

                        </div>
                    </div>

                </div>
            </div>
        </div>


        <div class="modal fade" id="TemplateDownload" role="dialog" tabindex="-1">
            <div class="text-right model_body_position">
                @*<a href="" data-dismiss="modal" class="modaldismissarrow"><i class="flaticon-error fa-3x " aria-hidden="true"></i></a>*@
            </div>

            <div class="modal-dialog modal-dialog-centered" style="max-width: 960px; margin-top:-20px;">

                <div class="modal-content">


                    @using (Html.BeginForm("DownloadPDF", "Template", FormMethod.Post))
                    {

                        <div class="modal-header modalheadercolor websitecolour">
                            <div class="row" style="width:100%;">
                                <div class="col-sm-6 form-inline">
                                    <label style="font-size: 20px !important;"><b>Page Setup</b></label>
                                    <input type="hidden" id="AppendTemplateName2" name="FileName" />
                                    <input type="hidden" id="AppendID" name="ID" />
                                </div>
                                <div class="col-sm-6 text-right">
                                    @*<button type="button" class="Close" style="float:right;" data-dismiss="modal" aria-label="Close">
                                        <span aria-hidden="true">&times;</span>
                                    </button>*@
                                    <button data-dismiss="modal" class="modaldismissarrow text-right btn btn-sm btn-light btn_close" title="Close">Close</button>
                                </div>
                            </div>
                        </div>

                        <div class="modal-body">
                            <div class="row">
                                <div class="col-sm-2 ">
                                    <div class="form-group">
                                        <label for="PaperType">Paper Type</label>
                                    </div>
                                </div>
                                <div class="col-sm-10">
                                    <select class="form-control" onchange="PaperType1Onchange();" id="PaperType1" style="padding-bottom:3px;padding-top:3px;">
                                        @*<option selected disabled>--Select--</option>*@
                                        <option>A4 Digital Stamp</option>
                                        <option>Legal</option>
                                        <option>Rubber Stamped Legal</option>
                                    </select>
                                </div>
                            </div>
                            <hr />
                            <div class="row">
                                <div class="col-sm-2">
                                    <div class="form-group">
                                        <label for="PaperType">Standard Paper Size</label>
                                    </div>
                                </div>
                                <div class="col-sm-10">
                                    <select class="form-control" id="PaperSize1" onchange="PaperType1Onchange();" name="Pagesize" required style="padding-bottom:3px;padding-top:3px;">
                                        <option>A4</option>
                                        <option>Legal</option>
                                        <option>Executive</option>
                                    </select>
                                    <div class="row" style="display:none;"><textarea name="editor4" id="IDofEditor4"></textarea></div>
                                </div>
                            </div>

                            <div class="form-group">
                                <label for="Margin">Margin in Inches</label>
                            </div>

                            <div class="row">
                                <div class="col-lg-3">
                                    <div class="row">
                                        <div class="col-sm-5 text-right">
                                            <div class="form-group">
                                                <p>Top</p>
                                            </div>
                                        </div>
                                        <div class="col-sm-7 text-center">
                                            <input type="number" step="0.1" min="0" id="MarginTop1" maxlength="4" oninput="javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);" onkeyup="this.value = this.value.replace(/[^0-9.]/g, '');" name="Margintop" class="form-control" />

                                        </div>

                                    </div>
                                </div>


                                <div class="col-lg-3">
                                    <div class="row">
                                        <div class="col-sm-5 text-right">
                                            <div class="form-group">
                                                <p>Left</p>
                                            </div>
                                        </div>
                                        <div class="col-sm-7 text-center">
                                            <input type="number" step="0.1" min="0" id="MarginLeft1" maxlength="4" oninput="javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);" onkeyup="this.value = this.value.replace(/[^0-9.]/g, '');" name="Marginleft" class="form-control" />

                                        </div>

                                    </div>
                                </div>

                                <div class="col-lg-3">
                                    <div class="row">
                                        <div class="col-sm-5 text-right">
                                            <div class="form-group">
                                                <p>Bottom</p>
                                            </div>
                                        </div>
                                        <div class="col-sm-7 text-center">
                                            <input type="number" step="0.1" min="0" id="MarginBottom1" maxlength="4" oninput="javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);" onkeyup="this.value = this.value.replace(/[^0-9.]/g, '');" name="Marginbottom" class="form-control" />

                                        </div>

                                    </div>
                                </div>


                                <div class="col-lg-3">
                                    <div class="row">
                                        <div class="col-sm-5 text-right">
                                            <div class="form-group">
                                                <p>Right</p>
                                            </div>
                                        </div>
                                        <div class="col-sm-7 text-center">
                                            <input type="number" step="0.1" min="0" id="MarginRight1" maxlength="4" oninput="javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);" onkeyup="this.value = this.value.replace(/[^0-9.]/g, '');" name="Marginright" class="form-control" />

                                        </div>

                                    </div>
                                </div>
                            </div>
                            @*<hr />
                            <div class="row">
                                <div class="col-sm-2 form-group">
                                    &nbsp;&nbsp;<label>Water mark</label>
                                </div>
                                <div class="col-sm-5">
                                    <select class="form-control" name="radio" id="WaterMarker" required style="padding-bottom:3px;padding-top:3px;">

                                        <option>No Watermark</option>
                                        <option>Draft</option>
                                        <option value="Custom">Custom</option>

                                    </select>
                                </div>
                                <div class="col-sm-5" id="watermark"></div>
                            </div>*@
                            @*<div class="form-group form-inline">
                                <label>Water mark</label>
                            </div>
                            <div class="form-group form-inline">
                                <input type="radio" id="draftradiobutton" name="radio" value="draft" checked>&nbsp;
                                <label for="draft">Draft</label>

                            </div>
                            <div class="form-group form-inline">
                                <input type="radio" id="vendorradiobutton" name="radio" value="vendor">&nbsp;
                                <label for="Vendor">Vendor copy</label>

                            </div>
                            <div class="row">
                                <div class="col-sm-2">
                                    <div class="form-group form-inline">
                                        <input type="radio" id="customradiobutton" name="radio" value="custom">&nbsp;
                                        <label for="Custom">Custom</label>
                                    </div>
                                </div>
                                <div class="col-sm-10">
                                    <input type="text" id="CustomTextfield" maxlength="25" oninvalid="InvalidCustomWaterMark(this);" oninput="InvalidCustomWaterMark(this);" name="watermark" class="form-control" disabled="disabled" required/>
                                </div>
                            </div>*@
                            <hr />
                            <div class="card-action text-right card_footer_button">
                                <button type="submit" class="btn btn-primary btn_SaveClearDiscard">
                                    <b>Download</b>
                                </button>
                                &nbsp;
                                <button type="reset" class="btn btn-success btn_SaveClearDiscard"><b>Reset</b></button>&nbsp;
                                <button type="button" class="btn btn-danger btn_SaveClearDiscard" data-dismiss="modal">Cancel</button>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>

        <div class="modal fade" id="AddVersionModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered" style="max-width: 100%; max-height: 90%; padding-left:20px;" role="document">
                <div class="modal-content VersionCompare_Modal">
                    <div class="modal-header">
                        <div class="row" style="width:100%;">


                            <div class="col-sm-6 justify-content-center form-inline">
                                <select id="TemplateApproversCompare" class="form-control" style="width:130px;padding:0;text-align-last:center;">
                                    <option value="" selected disabled>--select--</option>
                                </select>@*&nbsp; &nbsp;
                                <button class="btn btn-sm btn-success" data-toggle="modal" data-target="#VersionDownloadOptionModal" onclick="VersionAcceptChanges1();" id="Version1Btn" style="font-size:13px; display:none; width:120px;"><i class="flaticon-inbox" aria-hidden="true"></i>&nbsp; Download</button>*@

                                @if (User.IsInRole("initiator") || User.IsInRole("legal") || User.IsInRole("admin") || User.IsInRole("finance"))
                                {
                                    string cid = Request.Url.AbsoluteUri.Split('/').Last();
                                    string emp = CurrentUserID();
                                    if ((Model.Template.Where(x => x.TemplateID.ToString() == cid).Where(x => x.Status == "Draft").Any()) || (Model.Template.Where(x => x.TemplateID.ToString() == cid).Where(x => x.NextApprover.ToString() == emp).Where(x => x.Status == "Pending Approval").Any()) || (Model.Template.Where(x => x.TemplateID.ToString() == cid).Where(x => x.NextApprover.ToString() == emp).Where(x => x.Status == "Rejected").Any()))
                                    {
                                        @Html.Raw("&nbsp; &nbsp;")<button class="btn btn-sm btn-primary" disabled id="TemplateVersionRestore1" style="font-size:13px; display:none; width:120px;"><i class="flaticon-repeat" aria-hidden="true"></i>&nbsp; Restore</button>
                                    }
                                }
                            </div>

                            <div class="col-sm-6 justify-content-center form-inline">

                                <select id="TemplateApproversBetween" class="form-control" style="width:130px;padding:0;text-align-last:center;">
                                    <option value="" selected disabled>--select--</option>
                                </select>@*&nbsp; &nbsp;
                                <button class="btn btn-sm btn-success" data-toggle="modal" data-target="#VersionDownloadOptionModal2" onclick="VersionAcceptChanges2();" id="Version2Btn" style="font-size:13px; display:none; width:120px;"><i class="flaticon-inbox" aria-hidden="true"></i>&nbsp; Download</button>*@
                                @if (User.IsInRole("initiator") || User.IsInRole("legal") || User.IsInRole("admin")|| User.IsInRole("finance"))
                                {
                                    string cid = Request.Url.AbsoluteUri.Split('/').Last();
                                    string emp = CurrentUserID();
                                    if ((Model.Template.Where(x => x.TemplateID.ToString() == cid).Where(x => x.Status == "Draft").Any()) || (Model.Template.Where(x => x.TemplateID.ToString() == cid).Where(x => x.NextApprover.ToString() == emp).Where(x => x.Status == "Pending Approval").Any()) || (Model.Template.Where(x => x.TemplateID.ToString() == cid).Where(x => x.NextApprover.ToString() == emp).Where(x => x.Status == "Rejected").Any()))
                                    {
                                        @Html.Raw("&nbsp; &nbsp;")<button class="btn btn-sm btn-primary" disabled id="TemplateVersionRestore2" style="font-size:13px; display:none; width:120px;"> <i class="flaticon-repeat" aria-hidden="true"></i>&nbsp; Restore</button>
                                    }
                                }
                                &nbsp; &nbsp; <button type="button" id="Compare_Button" onclick="CompareVersion();" class="btn btn-sm btn-primary" style="font-size:13px; display:none; width:120px;">Compare</button>

                                &nbsp; &nbsp;&nbsp;
                                <div>
                                    <button data-dismiss="modal" class="modaldismissarrow text-right btn btn-sm btn-light btn_close" title="Close">Close</button>
                                </div>
                            </div>
                            @*<div class="col-sm-1">
                                <button type="button" class="Close" data-dismiss="modal" aria-label="Close">
                                    <span aria-hidden="true">&times;</span>
                                </button>
                            </div>*@
                        </div>
                    </div>
                    <div class="modal-body" style="height:550px;">
                        <div class="row">
                            <div class="col-sm-12 text-center">
                                <center><h5><b id="CompareCode"></b></h5></center>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-sm-6">
                                @*<div class="card" id="card1" style="height:500px; overflow:auto; margin-bottom:0px; padding:0px;">*@
                                <div class="card" style="margin:0px;">
                                    <div class="card-body" id="TemplateCompareDivision" style="flex: 0 0;padding: 0px;">
                                        <div style="overflow:auto; height:510px;" id="divv1">
                                            <textarea name="editor2" id="IDofEditor2"></textarea>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-6">
                                @*<div class="card" id="card2" style="height:500px; overflow:auto; margin-bottom:0px; padding:0px;">*@
                                <div class="card" style="margin:0px;">
                                    <div class="card-body" id="TemplateBetweenDivision" style="flex: 0 0;padding: 0px;">
                                        <div style="overflow:auto; height:510px;" id="divv2">
                                            <textarea name="editor3" id="IDofEditor3"></textarea>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="modal fade" id="VersionDownloadOptionModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <label style="font-size: 20px !important;">
                            <b>Download</b>
                        </label>
                        <button data-dismiss="modal" class="modaldismissarrow text-right btn btn-sm btn-light btn_close" title="Close">Close</button>
                    </div>

                    <div class="modal-body">
                        <div class="row form-inline justify-content-center">
                            <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#VersionDownloadModal" data-dismiss="modal"> Download as PDF</button>
                            &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
                            <button type="button" class="btn btn-primary" data-dismiss="modal" onclick="ExportAsWordCompareversion();"> Download as Word</button>

                        </div>
                    </div>

                </div>
            </div>
        </div>

        <div class="modal fade" id="VersionDownloadModal" role="dialog" tabindex="-1">
            <div class="text-right model_body_position">
                @*<a href="" data-dismiss="modal" class="modaldismissarrow"><i class="flaticon-error fa-3x " aria-hidden="true"></i></a>*@
            </div>

            <div class="modal-dialog modal-dialog-centered" style="max-width: 960px; margin-top:-20px;">

                <div class="modal-content">


                    @using (Html.BeginForm("DownloadPDF2", "Template", FormMethod.Post))
                    {

                        <div class="modal-header modalheadercolor websitecolour">
                            <div class="row" style="width:100%;">
                                <div class="col-sm-6 form-inline">
                                    <label style="font-size: 20px !important;"><b>Page Setup</b></label>
                                    <input type="hidden" id="AppendVersionTemplateName1" name="FileName" />
                                    <input type="hidden" id="AppendVersionID1" name="ID" />
                                </div>
                                <div class="col-sm-6 text-right">
                                    @*<button type="button" class="Close" style="float:right;" data-dismiss="modal" aria-label="Close">
                                        <span aria-hidden="true">&times;</span>
                                    </button>*@
                                    <button data-dismiss="modal" class="modaldismissarrow text-right btn btn-sm btn-light btn_close" title="Close">Close</button>
                                </div>
                            </div>


                        </div>

                        <div class="modal-body">
                            <div class="row">
                                <div class="col-sm-2 ">
                                    <div class="form-group">
                                        <label for="PaperType">Paper Type</label>
                                    </div>
                                </div>
                                <div class="col-sm-10">
                                    <select style="padding-bottom:3px;padding-top:3px;" class="form-control" onchange="PaperType2Onchange();" id="PaperType2">
                                        @*<option>--Select--</option>*@
                                        <option>A4 Digital Stamp</option>
                                        <option>Legal</option>
                                        <option>Rubber Stamped Legal</option>
                                    </select>
                                </div>
                            </div>
                            <hr />
                            <div class="row">
                                <div class="col-sm-2">
                                    <div class="form-group">
                                        <label for="PaperType">Standard Paper Size</label>
                                    </div>
                                </div>
                                <div class="col-sm-10">
                                    <select style="padding-bottom:3px;padding-top:3px;" class="form-control" id="PaperSize2" onchange="PaperType2Onchange();" name="Pagesize" required>
                                        <option>A4</option>
                                        <option>Legal</option>
                                        <option>Executive</option>
                                    </select>
                                    <div class="row" style="display:none"><textarea name="editor5" id="IDofEditor5"></textarea></div>
                                </div>
                            </div>

                            <div class="form-group">
                                <label for="Margin">Margin in Inches</label>
                            </div>

                            <div class="row">
                                <div class="col-lg-3">
                                    <div class="row">
                                        <div class="col-sm-5 text-right">
                                            <div class="form-group">
                                                <p>Top</p>
                                            </div>
                                        </div>
                                        <div class="col-sm-7 text-center">
                                            <input type="number" step="0.1" min="1" id="MarginTop2" maxlength="4" oninput="javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);" onkeyup="this.value = this.value.replace(/[^0-9.]/g, '');" name="Margintop" class="form-control" required />

                                        </div>

                                    </div>
                                </div>


                                <div class="col-lg-3">
                                    <div class="row">
                                        <div class="col-sm-5 text-right">
                                            <div class="form-group">
                                                <p>Left</p>
                                            </div>
                                        </div>
                                        <div class="col-sm-7 text-center">
                                            <input type="number" step="0.1" min="1" id="MarginLeft2" maxlength="4" oninput="javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);" onkeyup="this.value = this.value.replace(/[^0-9.]/g, '');" name="Marginleft" class="form-control" required />

                                        </div>

                                    </div>
                                </div>

                                <div class="col-lg-3">
                                    <div class="row">
                                        <div class="col-sm-5 text-right">
                                            <div class="form-group">
                                                <p>Bottom</p>
                                            </div>
                                        </div>
                                        <div class="col-sm-7 text-center">
                                            <input type="number" step="0.1" min="1" id="MarginBottom2" maxlength="4" oninput="javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);" onkeyup="this.value = this.value.replace(/[^0-9.]/g, '');" name="Marginbottom" class="form-control" required />

                                        </div>

                                    </div>
                                </div>


                                <div class="col-lg-3">
                                    <div class="row">
                                        <div class="col-sm-5 text-right">
                                            <div class="form-group">
                                                <p>Right</p>
                                            </div>
                                        </div>
                                        <div class="col-sm-7 text-center">
                                            <input type="number" step="0.1" min="1" id="MarginRight2" maxlength="4" oninput="javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);" onkeyup="this.value = this.value.replace(/[^0-9.]/g, '');" name="Marginright" class="form-control" required />

                                        </div>

                                    </div>
                                </div>
                            </div>
                            @*<hr />
                            <div class="row">
                                <div class="col-sm-2 form-group">
                                    &nbsp;&nbsp;<label>Water mark</label>
                                </div>
                                <div class="col-sm-5">
                                    <select style="padding-bottom:3px;padding-top:3px;"class="form-control" id="versionWaterMarker" name="radio1" oninvalid="Invalidversion1watermark(this);" oninput="Invalidversion1watermark(this);" required="required">
                                        <option value="No Watermark">No Watermark</option>
                                        <option value="Draft">Draft</option>
                                        <option value="Custom">Custom</option>

                                    </select>
                                </div>
                                <div class="col-sm-5" id="versionwatermark"></div>
                            </div>*@
                            @*<div class="form-group form-inline">
                                <label>Water mark</label>
                            </div>
                            <div class="form-group form-inline">
                                <input type="radio" id="draftradiobutton" name="radio1" value="draft" checked>&nbsp;
                                <label for="draft">Draft</label>

                            </div>
                            <div class="form-group form-inline">
                                <input type="radio" id="vendorradiobutton" name="radio1" value="vendor">&nbsp;
                                <label for="Vendor">Vendor copy</label>

                            </div>
                            <div class="row">
                                <div class="col-sm-2">
                                    <div class="form-group form-inline">
                                        <input type="radio" id="customradiobutton1" name="radio1" value="custom">&nbsp;
                                        <label for="Custom">Custom</label>
                                    </div>
                                </div>
                                <div class="col-sm-10">
                                    <input type="text" id="CustomTextfield1" oninvalid="InvalidCustomWaterMark(this);" oninput="InvalidCustomWaterMark(this);" maxlength="25" name="watermark" class="form-control" disabled="disabled" required/>
                                </div>
                            </div>*@
                            <hr />
                            <div class="card-action text-right card_footer_button">
                                <button type="submit" class="btn btn-primary btn_SaveClearDiscard">
                                    <b>Download</b>
                                </button>
                                &nbsp;
                                <button type="reset" class="btn btn-success btn_SaveClearDiscard"><b>Reset</b></button>&nbsp;
                                <button type="button" class="btn btn-danger btn_SaveClearDiscard" data-dismiss="modal">Cancel</button>
                            </div>
                        </div>
                    }

                </div>

            </div>

        </div>

        <div class="modal fade" id="VersionDownloadOptionModal2" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <label style="font-size: 20px !important;">
                            <b>Download</b>
                        </label>
                        <button data-dismiss="modal" class="modaldismissarrow text-right btn btn-sm btn-light btn_close" title="Close">Close</button>
                    </div>

                    <div class="modal-body">
                        <div class="row form-inline justify-content-center">

                            <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#VersionDownloadModal2" data-dismiss="modal"> Download as PDF</button>
                            &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
                            <button type="button" class="btn btn-primary" data-dismiss="modal" onclick="ExportAsWordComparelatestversion();"> Download as Word</button>

                        </div>
                    </div>

                </div>
            </div>
        </div>

        <div class="modal fade" id="VersionDownloadModal2" role="dialog" tabindex="-1">
            <div class="text-right model_body_position">
                @*<a href="" data-dismiss="modal" class="modaldismissarrow"><i class="flaticon-error fa-3x " aria-hidden="true"></i></a>*@
            </div>

            <div class="modal-dialog modal-dialog-centered" style="max-width: 960px; margin-top:-20px;">

                <div class="modal-content">


                    @using (Html.BeginForm("DownloadPDF3", "Template", FormMethod.Post))
                    {

                        <div class="modal-header modalheadercolor websitecolour">
                            <div class="row" style="width:100%;">
                                <div class="col-sm-6 form-inline">
                                    <label style="font-size: 20px !important;"><b>Page Setup</b></label>
                                    <input type="hidden" id="AppendVersionTemplateName2" name="FileName" />
                                    <input type="hidden" id="AppendVersionID2" name="ID" />
                                </div>
                                <div class="col-sm-6 text-right">
                                    @*<button type="button" class="Close" style="float:right;" data-dismiss="modal" aria-label="Close">
                                        <span aria-hidden="true">&times;</span>
                                    </button>*@
                                    <button data-dismiss="modal" class="modaldismissarrow text-right btn btn-sm btn-light btn_close" title="Close">Close</button>
                                </div>
                            </div>


                        </div>

                        <div class="modal-body">
                            <div class="row">
                                <div class="col-sm-2 ">
                                    <div class="form-group">
                                        <label for="PaperType">Paper Type</label>
                                    </div>
                                </div>
                                <div class="col-sm-10">
                                    <select class="form-control" onchange="PaperType3Onchange();" id="PaperType3" style="padding-bottom:3px;padding-top:3px;">

                                        <option>A4 Digital Stamp</option>
                                        <option>Legal</option>
                                        <option>Rubber Stamped Legal</option>
                                    </select>
                                </div>
                            </div>
                            <hr />
                            <div class="row">
                                <div class="col-sm-2">
                                    <div class="form-group">
                                        <label for="PaperType">Standard Paper Size</label>
                                    </div>
                                </div>
                                <div class="col-sm-10">
                                    <select class="form-control" id="PaperSize3" onchange="PaperType3Onchange();" name="Pagesize" required style="padding-bottom:3px;padding-top:3px;">
                                        <option>A4</option>
                                        <option>Legal</option>
                                        <option>Executive</option>

                                    </select>
                                    <div class="row" style="display:none;"><textarea name="editor6" id="IDofEditor6"></textarea></div>
                                </div>
                            </div>

                            <div class="form-group">
                                <label for="Margin">Margin in Inches</label>
                            </div>

                            <div class="row">
                                <div class="col-lg-3">
                                    <div class="row">
                                        <div class="col-sm-5 text-right">
                                            <div class="form-group">
                                                <p>Top</p>
                                            </div>
                                        </div>
                                        <div class="col-sm-7 text-center">
                                            <input type="number" step="0.1" min="1" id="MarginTop3" maxlength="4" oninput="javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);" onkeyup="this.value = this.value.replace(/[^0-9.]/g, '');" name="Margintop" class="form-control" required />

                                        </div>

                                    </div>
                                </div>


                                <div class="col-lg-3">
                                    <div class="row">
                                        <div class="col-sm-5 text-right">
                                            <div class="form-group">
                                                <p>Left</p>
                                            </div>
                                        </div>
                                        <div class="col-sm-7 text-center">
                                            <input type="number" step="0.1" min="1" id="MarginLeft3" maxlength="4" oninput="javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);" onkeyup="this.value = this.value.replace(/[^0-9.]/g, '');" name="Marginleft" class="form-control" required />

                                        </div>

                                    </div>
                                </div>

                                <div class="col-lg-3">
                                    <div class="row">
                                        <div class="col-sm-5 text-right">
                                            <div class="form-group">
                                                <p>Bottom</p>
                                            </div>
                                        </div>
                                        <div class="col-sm-7 text-center">
                                            <input type="number" step="0.1" min="1" id="MarginBottom3" maxlength="4" oninput="javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);" onkeyup="this.value = this.value.replace(/[^0-9.]/g, '');" name="Marginbottom" class="form-control" required />

                                        </div>

                                    </div>
                                </div>


                                <div class="col-lg-3">
                                    <div class="row">
                                        <div class="col-sm-5 text-right">
                                            <div class="form-group">
                                                <p>Right</p>
                                            </div>
                                        </div>
                                        <div class="col-sm-7 text-center">
                                            <input type="number" step="0.1" min="1" id="MarginRight3" maxlength="4" oninput="javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);" onkeyup="this.value = this.value.replace(/[^0-9.]/g, '');" name="Marginright" class="form-control" required />

                                        </div>

                                    </div>
                                </div>
                            </div>
                            @*<hr />
                            <div class="row">
                                <div class="col-sm-2 form-group">
                                    &nbsp;&nbsp;<label>Water mark</label>
                                </div>
                                <div class="col-sm-5">
                                    <select class="form-control" id="version2WaterMarker" name="radio2" oninvalid="Invalidversion2watermark(this);" oninput="Invalidversion2watermark(this);" required="required" style="padding-bottom:3px;padding-top:3px;">
                                        <option value="No Watermark">No Watermark</option>
                                        <option value="Draft">Draft</option>
                                        <option value="Custom">Custom</option>

                                    </select>
                                </div>
                                <div class="col-sm-5" id="version2watermark"></div>
                            </div>*@
                            @*<div class="form-group form-inline">
                                <label>Water mark</label>
                            </div>
                            <div class="form-group form-inline">
                                <input type="radio" id="draftradiobutton" name="radio2" value="draft" checked>&nbsp;
                                <label for="draft">Draft</label>

                            </div>
                            <div class="form-group form-inline">
                                <input type="radio" id="vendorradiobutton" name="radio2" value="vendor">&nbsp;
                                <label for="Vendor">Vendor copy</label>

                            </div>
                            <div class="row">
                                <div class="col-sm-2">
                                    <div class="form-group form-inline">
                                        <input type="radio" id="customradiobutton2" name="radio2" value="custom">&nbsp;
                                        <label for="Custom">Custom</label>
                                    </div>
                                </div>
                                <div class="col-sm-10">
                                    <input type="text" id="CustomTextfield2" oninvalid="InvalidCustomWaterMark(this);" oninput="InvalidCustomWaterMark(this);" maxlength="25" name="watermark" class="form-control" disabled="disabled" required/>
                                </div>
                            </div>*@
                            <hr />
                            <div class="card-action text-right card_footer_button">
                                <button type="submit" class="btn btn-primary btn_SaveClearDiscard">
                                    <b>Download</b>
                                </button>
                                &nbsp;
                                <button type="reset" class="btn btn-success btn_SaveClearDiscard"><b>Reset</b></button>&nbsp;
                                <button type="button" class="btn btn-danger btn_SaveClearDiscard" data-dismiss="modal">Cancel</button>

                            </div>
                        </div>
                    }

                </div>

            </div>

        </div>

        <div class="modal fade" id="AddMoreVariableTable" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle">
            <div class="modal-dialog modal-dialog-centered" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <b>New Placeholder</b>
                    </div>

                    <div class="modal-body">
                        <div class="row justify-content-center">

                            <div class="col-sm-12">
                                <div class="form-group">
                                    <label>Enter Placeholder</label>
                                    <input type="text" class="form-control Modal_Placeholder" maxlength="25" onkeyup="this.value = this.value.replace(/[^a-zA-Z0-9_-\s]/g, '');" id="placeholder_value" required />

                                </div>
                            </div>

                        </div>

                    </div>
                    <div class="modal-footer">
                        <button class="btn  btn-success" data-dismiss="modal" style="width:100px" onclick="AddPlaceholderToTable();"><i class="flaticon-plus" aria-hidden="true"></i>&nbsp;&nbsp;Add</button>
                        <button class="btn  btn-danger" onclick="RemoveModal();"><i class="flaticon-error" aria-hidden="true"></i>&nbsp;&nbsp;Cancel</button>
                    </div>

                </div>
            </div>
        </div>





        <div class="modal fade" id="ApproveModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <label style="font-size: 20px !important;"><b> Comments<span class="asteriskicon" style="color:red;"> *</span></b></label>
                    </div>

                    <div class="modal-body">
                        <div class="row">
                            <div class="col-sm-12">
                                <div class="form-group">
                                    @*<h6><i>Approver</i><span class="asteriskicon" style="color:red;"> *</span></h6>*@
                                    <textarea id="ApproveComment" maxlength="1800" class="text_area form-control" placeholder="Enter the Comments here"></textarea>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button class="btn  btn-danger" type="button" id="Approve_Cancel"><i class="flaticon-error" aria-hidden="true"></i>&nbsp;&nbsp;Cancel</button>
                        <button class="btn  btn-success" data-dismiss="modal" id="ApproveButton" onclick="Approve();" disabled><i class="flaticon-success" aria-hidden="true"></i>&nbsp;&nbsp;Approve</button>
                    </div>

                </div>
            </div>
        </div>

        <div class="modal fade" id="InitiateModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <label style="font-size: 20px !important;"><b>Comments<span class="asteriskicon" style="color:red;"> *</span></b></label>
                    </div>

                    <div class="modal-body">
                        <div class="row">
                            <div class="col-sm-12">
                                <div class="form-group">
                                    @*<h6><i>Approver</i><span class="asteriskicon" style="color:red;"> *</span></h6>*@
                                    <textarea id="InitiateComment" maxlength="1800" class="text_area form-control" placeholder="Enter the Comments here"></textarea>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button class="btn  btn-danger" type="button" id="Initiate_Cancel"><i class="flaticon-error" aria-hidden="true"></i>&nbsp;&nbsp;Cancel</button>
                        <button class="btn  btn-success" data-dismiss="modal" id="InitiateButton" onclick="Initiate();" disabled><i class="flaticon-success" aria-hidden="true"></i>&nbsp;&nbsp;Initiate</button>
                    </div>

                </div>
            </div>
        </div>



        <div class="modal fade" id="RejectAndAssignModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <label style="font-size: 20px !important;"><b>Template Reject and Assign to Initiator</b></label>
                    </div>

                    <div class="modal-body">

                        <div class="row">
                            <div class="col-sm-12">
                                <div class="form-group">
                                    @*<h6><i>Approver</i><span class="asteriskicon" style="color:red;"> *</span></h6>*@
                                    <h3><b>Comments<span class="asteriskicon" style="color:red;"> *</span></b></h3>
                                    <textarea id="RejectComment" maxlength="1800" class="text_area form-control" placeholder="Enter the Comments here"></textarea>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button class="btn  btn-danger" type="button" id="Reject_Cancel"><i class="flaticon-error" aria-hidden="true"></i>&nbsp;&nbsp;Cancel</button>
                        <button class="btn  btn-success" data-dismiss="modal" id="RejectButton" onclick="Reject();" disabled><i class="flaticon-success" aria-hidden="true"></i>&nbsp;&nbsp;Reject</button>
                    </div>

                </div>
            </div>
        </div>


        <div class="modal fade" id="SignedContractModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">

            <div class="modal-dialog modal-dialog-centered" style="max-width:50%;">
                <div class="modal-content">
                    <div class="modal-header">
                        <label style="font-size: 20px !important;">
                            <b>Upload Word document(.DOCX only)</b>
                        </label>
                        <div class="text-right model_body_position">
                            <button data-dismiss="modal" class="modaldismissarrow text-right btn btn-sm btn-light btn_close" title="Close">Close</button>
                        </div>
                    </div>

                    <div class="modal-body">
                        <div class="row">
                            <div class="col-sm-12">
                                <div class="row">
                                    <div class="col-sm-9">
                                        <div class="form-group">
                                            <input type="file" name="UploadSignOffContractFile" id="UploadSignOffContractFile" class="file" accept=".doc,.docx,.txt,.pdf,.xlx,.xlsx,.zip">
                                            <div class="input-group col-xs-10">
                                                <span class="input-group-addon "><i class="glyphicon glyphicon-picture"></i></span>
                                                <input type="text" class="form-control input-lg browse" id="UploadSignOffContractFile2" name="UploadSignOffContractFile" placeholder="Choose File">
                                                <span class="input-group-btn ">
                                                    <button class="browse btn btn-primary uploadbtnsizing" type="button"><i class="glyphicon glyphicon-search"></i><i class="flaticon-search-2" aria-hidden="true"></i>&nbsp;&nbsp;Browse </button>&nbsp;
                                                </span>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-2">
                                        <div class="form-group">
                                            <button type="button" id="UploadButton" style="display:none;" class="btn btn-primary uploadbtnsizing" data-dismiss="modal" data-toggle="modal" onclick="UploadSignOff();"><i class="flaticon-archive" aria-hidden="true"></i>&nbsp;&nbsp;Upload</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>


    </div>

<div class="modalload"><!-- Place at bottom of page --></div>

<script src="../../Content/assets/js/core/jquery.3.2.1.min.js"></script>


<script>

    function Export2Doc(element, filename) {
        var TemplateDocName = $("#AppendTemplateName").html();
        //var Contractvariable = "";
        var element = CKEDITOR.instances.IDofEditor4.document.getBody().getHtml();

        var topsheet = "";
        var filename = "";
        //alert(contractID);

        var preHtml = "<html xmlns:o='urn:schemas-microsoft-com:office:office' xmlns:w='urn:schemas-microsoft-com:office:word' xmlns='http://www.w3.org/TR/REC-html40'><head><meta charset='utf-8'><title>Export HTML To Doc</title><style>table,td{border:1px solid black;},table>td{width:50%;} table{border-collapse:collapse;} .page_break{page-break-before: always; page-break-after: always;}</style></head><body>";
        var postHtml = "</body></html>";
        var topsheet = '<div class="page_break"><div class="row"><div class="col-sm-12"><h2><b>Top Sheet</b></h2></div></div><table style="width:100%;" cellpadding="20"><tr><td><b>Template ID</b></td><td>' + TemplateID + '</td></tr><tr><td><b>Template Name</b></td><td>' + TemplateName + '</td></tr><tr><td><b>Initiated By :</b> ' + Initiator + '</td><td><b>Initiated On : </b>' + InitiatedOn + '</td></tr>' + Approver1 + '' + Approver2 + '' + Approver3 + '' + Approver4 + '' + Approver5 + '' + Approver6 + '' + Approver7 + '' + Approver8 + '' + Approver9 + '' + Approver10 + '</table ><br/></div>';
        //alert(topsheet);
        var html = preHtml + topsheet + element + postHtml;


        var blob = new Blob(['\ufeff', html], {
            type: 'application/msword'
        });
        //var url = URL.createObjectURL(blob);
        var url = 'data:application/vnd.ms-word;charset=utf-8,' + encodeURIComponent(html);

        // Specify file name
        filename = filename ? filename + '.docx' : TemplateDocName + '.doc';

        // Create download link element
        var downloadLink = document.createElement("a");

        document.body.appendChild(downloadLink);

        if (navigator.msSaveOrOpenBlob) {
            navigator.msSaveOrOpenBlob(blob, filename); // IE10-11
        } else {
            // Create a link to the file
            downloadLink.href = url;

            // Setting the file name
            downloadLink.download = filename;

            //triggering the function
            downloadLink.click();
        }

        document.body.removeChild(downloadLink);
    }

    var TemplateID = "";
    var TemplateName = "";
    var Approver1 = "";
    var Approver2 = "";
    var Approver3 = "";
    var Approver4 = "";
    var Approver5 = "";
    var Approver6 = "";
    var Approver7 = "";
    var Approver8 = "";
    var Approver9 = "";
    var Approver10 = "";
    var Initiator = "";
    var InitiatedOn = "";

    $(function () {
        var url = window.location.href;
        var page = url.split('/');
        var templateID = page[page.length - 1];
        //  alert(templateID);
        $.ajax({
            url: '/Template/Templatetabledetails',
            type: 'POST',
            data: { templateID: templateID },

            dataType: 'json',
            success: function (response) {
                if (response[0] == "success") {
                    //  alert(response[0] == "success");
                    TemplateID = templateID;
                    TemplateName = response[1];
                    Initiator = response[12];
                    InitiatedOn = response[13];
                    if (response[2].length > 4) {
                        Approver1 = "<tr><td><b>Approver 1 : </b>" + response[2] + "</td><td><b>Approved On : </b>" + response[14] + "</td></tr>";
                    }
                    if (response[3].length > 4) {
                        Approver2 = "<tr><td><b>Approver 2 : </b>" + response[3] + "</td><td><b>Approved On : </b>" + response[15] + "</td></tr>";
                    }
                    if (response[4].length > 4) {
                        Approver3 = "<tr><td><b>Approver 3 : </b>" + response[4] + "</td><td><b>Approved On : </b>" + response[16] + "</td></tr>";
                    }
                    if (response[5].length > 4) {
                        Approver4 = "<tr><td><b>Approver 4 : </b>" + response[5] + "</td><td><b>Approved On : </b>" + response[17] + "</td></tr>";
                    }
                    if (response[6].length > 4) {
                        Approver5 = "<tr><td><b>Approver 5 : </b>" + response[6] + "</td><td><b>Approved On : </b>" + response[18] + "</td></tr>";
                    }
                    if (response[7].length > 4) {
                        Approver6 = "<tr><td><b>Approver 6 : </b>" + response[7] + "</td><td><b>Approved On : </b>" + response[19] + "</td></tr>";
                    }
                    if (response[8].length > 4) {
                        Approver7 = "<tr><td><b>Approver 7 : </b>" + response[8] + "</td><td><b>Approved On : </b>" + response[20] + "</td></tr>";
                    }
                    if (response[9].length > 4) {
                        Approver8 = "<tr><td><b>Approver 8 : </b>" + response[9] + "</td><td><b>Approved On : </b>" + response[21] + "</td></tr>";
                    }
                    if (response[10].length > 4) {
                        Approver9 = "<tr><td><b>Approver 9 : </b>" + response[10] + "</td><td><b>Approved On : </b>" + response[22] + "</td></tr>";
                    }
                    if (response[11].length > 4) {
                        Approver10 = "<tr><td><b>Approver 10 : </b>" + response[11] + "</td><td><b>Approved On : </b>" + response[23] + "</td></tr>";
                    }
                }
            }
        });
    });


</script>
<script>

    function expandTextarea(Class) {
        var x = document.getElementsByClassName(Class);
        for (i = 0; i < x.length; i++) {
            x[i].addEventListener('keyup', function () {
                this.style.overflow = 'hidden';
                this.style.height = 0;
                this.style.height = this.scrollHeight + 'px';
            }, false);
        }
    }
    expandTextarea("text_area");
</script>
<script>
    $(document).ready(function () {
        $("#myInput").on("keyup", function () {
            var value = $(this).val().toLowerCase();
            $("#myTable tr").filter(function () {
                $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)
            });
        });
    });

    $(".DummyClass").click(function () {
        document.getElementById('cke_2_top').style.display = "none";
        document.getElementById('cke_3_top').style.display = "none";

    });

</script>

<script>
    $(document).ready(function () {
        var table = $('#multi-filter-select').DataTable({
            "bSortCellsTop": true,
            responsive: true,
            "iDisplayLength": 10,
            "order": [
                [0, "desc"]]
        });

        $('input.search.clause').on('keyup change', function () {
            var rel = $(this).attr("rel");
            table.columns(rel).search(this.value).draw();
        });
    });
</script>


<script>
    //$("#card1").scroll(function () {
    //    $("#card2").scrollTop($("#card1").scrollTop());
    //    $("#card2").scrollLeft($("#card1").scrollLeft());
    //});
    //$("#card2").scroll(function () {
    //    $("#card1").scrollTop($("#card2").scrollTop());
    //    $("#card1").scrollLeft($("#card2").scrollLeft());
    //});

    $("#divv1").scroll(function () {
        $("#divv2").scrollTop($("#divv1").scrollTop());
        $("#divv2").scrollLeft($("#divv1").scrollLeft());
    });
    $("#divv2").scroll(function () {
        $("#divv1").scrollTop($("#divv2").scrollTop());
        $("#divv1").scrollLeft($("#divv2").scrollLeft());
    });
</script>

<script>
    $(document).on('click', '.browse', function () {
        var file = $(this).parent().parent().parent().find('.file');
        file.trigger('click');
    });
    $(document).on('change', '.file', function () {
        $(this).parent().find('.form-control').val($(this).val().replace(/C:\\fakepath\\/i, ''));
        var data = $(this).parent().find('.form-control').val();
        var extension = data.substr(data.lastIndexOf('.') + 1).toLowerCase();

        var allowedExtensions = ['doc', 'docx', 'txt', 'pdf', 'xlx', 'xlsx', 'zip'];
        if (data.length > 0) {
            if (allowedExtensions.indexOf(extension) === -1) {
                //alert('Invalid file Format. Only ' + allowedExtensions.join(', ') + ' are allowed.');
                $.notify(
                    {
                        // options
                        title: 'Uploading Files',
                        message: 'Invalid file Format. Only ' + allowedExtensions.join(', ') + ' are allowed.',
                        target: '_blank',
                        icon: 'fa fa-exclamation-triangle'
                    },
                    {
                        // settings
                        element: 'body',
                        position: null,
                        type: "danger",
                        allow_dismiss: true,
                        newest_on_top: false,
                        showProgressbar: false,
                        placement: {
                            from: "top",
                            align: "right"
                        },
                        offset: 20,
                        spacing: 10,
                        z_index: 1031,
                        delay: 5000,
                        timer: 1000,
                        url_target: '_blank',
                        mouse_over: null,
                        animate: {
                            enter: 'animated fadeInDown',
                            exit: 'animated fadeOutUp'
                        },
                        onShow: null,
                        onShown: null,
                        onClose: null,
                        onClosed: null,
                        icon_type: 'class',
                        template: '<div data-notify="container" class="col-xs-11 col-sm-3 alert alert-{0}" role="alert">' +
                            '<button type="button" aria-hidden="true" class="close" data-notify="dismiss">×</button>' +
                            '<span data-notify="icon"></span> ' +
                            '<span data-notify="title">{1}</span> ' +
                            '<span data-notify="message">{2}</span>' +
                            '<div class="progress" data-notify="progressbar">' +
                            '<div class="progress-bar progress-bar-{0}" role="progressbar" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100" style="width: 0%;"></div>' +
                            '</div>' +
                            '<a href="{3}" target="{4}" data-notify="url"></a>' +
                            '</div>'
                    });
                $(this).parent().find('.form-control').val('');
                $("#UploadButton").hide();
            }
        }
        else {
            $(this).parent().find('.form-control').val('');

        }
    });

</script>

<script>
    $(".file").change(function () {
        var file = $(".file").val();
        if (file != "") {
            $("#UploadButton").show();
        }
        else {
            $("#UploadButton").hide();
        }
    });
</script>

@*<script src="..ckeditor6/ckeditor.js"></script>*@
<script src="~/Content/ckeditor/ckeditor.js"></script>
<script type="text/javascript">
        var ckEditor = CKEDITOR.replace('editor1', {
        bodyClass: 'document-editor',
        contentsCss: ['../../Content/ckeditor/contents.css','../../Content/ckeditor/mystyles.css'],
         height: 500,
        extraAllowedContent: 'span',
				//on :
				//   {
				//      instanceReady : function ( evt )
				//      {
				//         // Hide the editor top bar.
				//         document.getElementById( 'cke_1_top').style.display = 'none';
				//      }
				//   }

        // blockedKeystrokes: [13]
     });
    ckEditor.on('configLoaded', extendConfig);
    ckEditor.config.removePlugins = 'lite,autogrow,elementspath,resize';

    function extendConfig() {
        var conf = CKEDITOR.config;
        var lt = conf.lite = conf.lite || {};
        lt.isTracking = true;
        lt.userName = "@CurrentUserName()";
        lt.userId = "@CurrentUserID()";
    }

    CKEDITOR.disableAutoInLine = true;
    CKEDITOR.config.allowedContent = true;
    CKEDITOR.config.enterMode = CKEDITOR.ENTER_BR;
    CKEDITOR.config.readOnly = true;
    CKEDITOR.scriptLoader.load('../../Content/assets/js/plugin/webfont/webfont.min.js');
    // CKEDITOR.config.fullPage = true;
    // CKEDITOR.config.blockedKeystrokes( CKEDITOR.CTRL + 120, false );
    CKEDITOR.config.keystrokes = [[CKEDITOR.CTRL + 90 /*Shift-Enter*/, 'null ']];

    CKEDITOR.replace('editor2', {
        bodyClass: 'document-editor',
       contentsCss: ['../../Content/ckeditor/contents.css','../../Content/ckeditor/mystyles.css'],
        // blockedKeystrokes: [13]
        width: '150%',
         height:'510',
    });
    CKEDITOR.disableAutoInLine = true;
    CKEDITOR.config.allowedContent = true;
    CKEDITOR.scriptLoader.load('../../Content/assets/js/plugin/webfont/webfont.min.js');
    // CKEDITOR.config.fullPage = true;
    // CKEDITOR.config.blockedKeystrokes( CKEDITOR.CTRL + 120, false );
    CKEDITOR.config.keystrokes = [[CKEDITOR.CTRL + 90 /*Shift-Enter*/, 'null ']];
    CKEDITOR.config.removePlugins = 'elementspath,resize';

      CKEDITOR.replace('editor3', {
        bodyClass: 'document-editor',
        contentsCss: ['../../Content/ckeditor/contents.css','../../Content/ckeditor/mystyles.css'],
        // blockedKeystrokes: [13]
        width: '150%',
         height:'510',
    });
    CKEDITOR.disableAutoInLine = true;
    CKEDITOR.config.allowedContent = true;
    CKEDITOR.scriptLoader.load('../../Content/assets/js/plugin/webfont/webfont.min.js');
    // CKEDITOR.config.fullPage = true;
    // CKEDITOR.config.blockedKeystrokes( CKEDITOR.CTRL + 120, false );
    CKEDITOR.config.keystrokes = [[CKEDITOR.CTRL + 90 /*Shift-Enter*/, 'null ']];
    CKEDITOR.config.removePlugins = 'elementspath,resize';


    CKEDITOR.replace('editor4', {
        bodyClass: 'document-editor',
        contentsCss: ['../../Content/ckeditor/mystyles.css'],
        // blockedKeystrokes: [13]
    });
    CKEDITOR.disableAutoInLine = true;
    CKEDITOR.config.allowedContent = true;
    CKEDITOR.scriptLoader.load('../../Content/assets/js/plugin/webfont/webfont.min.js');
    // CKEDITOR.config.fullPage = true;
    // CKEDITOR.config.blockedKeystrokes( CKEDITOR.CTRL + 120, false );
    CKEDITOR.config.keystrokes = [[CKEDITOR.CTRL + 90 /*Shift-Enter*/, 'null ']];
    CKEDITOR.config.removePlugins = 'elementspath,resize';

     CKEDITOR.replace('editor5', {
        bodyClass: 'document-editor',
        contentsCss: ['../../Content/ckeditor/mystyles.css'],
        // blockedKeystrokes: [13]
    });
    CKEDITOR.disableAutoInLine = true;
    CKEDITOR.config.allowedContent = true;
    CKEDITOR.scriptLoader.load('../../Content/assets/js/plugin/webfont/webfont.min.js');
    // CKEDITOR.config.fullPage = true;
    // CKEDITOR.config.blockedKeystrokes( CKEDITOR.CTRL + 120, false );
    CKEDITOR.config.keystrokes = [[CKEDITOR.CTRL + 90 /*Shift-Enter*/, 'null ']];
    CKEDITOR.config.removePlugins = 'elementspath,resize';

    CKEDITOR.replace('editor6', {
        bodyClass: 'document-editor',
        contentsCss: ['../../Content/ckeditor/mystyles.css'],
        // blockedKeystrokes: [13]
    });
    CKEDITOR.disableAutoInLine = true;
    CKEDITOR.config.allowedContent = true;
    CKEDITOR.scriptLoader.load('../../Content/assets/js/plugin/webfont/webfont.min.js');
    // CKEDITOR.config.fullPage = true;
    // CKEDITOR.config.blockedKeystrokes( CKEDITOR.CTRL + 120, false );
    CKEDITOR.config.keystrokes = [[CKEDITOR.CTRL + 90 /*Shift-Enter*/, 'null ']];
    CKEDITOR.config.removePlugins = 'elementspath,resize';


    //CKEDITOR.config.keystrokes =
    // [
    //     [ CKEDITOR.CTRL + 90 /*Z*/, 'undo' ],
    // ];
    // CKEDITOR.inline('editor1', {
    //     blockedKeystrokes: [120, CKEDITOR.CTRL + 120]
    // });
    //CKEDITOR.config.readOnly = true;
    // Add code to display your toolbar here (example)
    CKEDITOR.on('paste', function (evt) {
        // Create a standalone filter passing 'p' and 'b' elements.
        var filter = new CKEDITOR.filter('p b'),
            // Parse the HTML string to a pseudo-DOM structure.
            fragment = CKEDITOR.htmlParser.fragment.fromHtml(evt.data.dataValue),
            writer = new CKEDITOR.htmlParser.basicWriter();
        filter.applyTo(fragment);
        fragment.writeHtml(writer);
        evt.data.dataValue = writer.getHtml();
    });


    CKEDITOR.instances.IDofEditor.on("contentDom", function () {
        CKEDITOR.instances.IDofEditor.editable().on("contextmenu", function (ev) {
            var sel = CKEDITOR.instances.IDofEditor.getSelection();
            if (!(sel && !sel.isLocked)) { retrun; }
            var el = sel.getStartElement();
            if ((el && el.is && el.is("del"))) {
                ev.cancel();
                CKEDITOR.instances.IDofEditor.on("contentDom", function () {
                    CKEDITOR.instances.IDofEditor.editable().on("contextmenu", function (ev) {
                        var sel = CKEDITOR.instances.IDofEditor.getSelection();
                        if (!(sel && !sel.isLocked)) { retrun; }
                        var el = sel.getStartElement();
                        if ((el && el.is && el.is("del"))) {
                            ev.cancel();
                            ev.stop();
                        }
                    }, null, null, 1);
                });
            }
            if ((el && el.is && el.is("ins"))) {
                ev.cancel();
                CKEDITOR.instances.IDofEditor.on("contentDom", function () {
                    CKEDITOR.instances.IDofEditor.editable().on("contextmenu", function (ev) {
                        var sel = CKEDITOR.instances.IDofEditor.getSelection();
                        if (!(sel && !sel.isLocked)) { retrun; }
                        var el = sel.getStartElement();
                        if ((el && el.is && el.is("ins"))) {
                            ev.cancel();
                            ev.stop();
                        }
                    }, null, null, 1);
                });
            }
            if ((el && el.is && el.is("h4"))) {
                ev.cancel();
                CKEDITOR.instances.IDofEditor.on("contentDom", function () {
                    CKEDITOR.instances.IDofEditor.editable().on("contextmenu", function (ev) {
                        var sel = CKEDITOR.instances.IDofEditor.getSelection();
                        if (!(sel && !sel.isLocked)) { retrun; }
                        var el = sel.getStartElement();
                        if ((el && el.is && el.is("h4"))) {
                            ev.cancel();
                            ev.stop();
                        }
                    }, null, null, 1);
                });
            }
            if ((el && el.is && el.is("p"))) {
                ev.cancel();
                CKEDITOR.instances.IDofEditor.on("contentDom", function () {
                    CKEDITOR.instances.IDofEditor.editable().on("contextmenu", function (ev) {
                        var sel = CKEDITOR.instances.IDofEditor.getSelection();
                        if (!(sel && !sel.isLocked)) { retrun; }
                        var el = sel.getStartElement();
                        if ((el && el.is && el.is("p"))) {
                            ev.cancel();
                            ev.stop();
                        }
                    }, null, null, 1);
                });
            }
            if ((el && el.is && el.is("span"))) {
                ev.cancel();
                CKEDITOR.instances.IDofEditor.on("contentDom", function () {
                    CKEDITOR.instances.IDofEditor.editable().on("contextmenu", function (ev) {
                        var sel = CKEDITOR.instances.IDofEditor.getSelection();
                        if (!(sel && !sel.isLocked)) { retrun; }
                        var el = sel.getStartElement();
                        if ((el && el.is && el.is("span"))) {
                            ev.cancel();
                            ev.stop();
                        }
                    }, null, null, 1);
                });
            }
        });
    });

    function Deletecard() {
        var element = CKEDITOR.instances.IDofEditor.document.getById('TestEdit');
        element.remove(false);
    }


    function InsertVariable(Class) {
        try {
            var value = $("#txt" + Class.replace(/ /g, "_")).val();
            // alert("id" + id + "Value" + value);
            if ($.trim(value).length < 1) {
                value = Class;
            }
            CKEDITOR.instances.IDofEditor.insertHtml(' <span class="CustomPlaceholder ' + Class.replace(/ /g, "_") + '">' + value + '</span>  ');
        } catch (error) {
             swal("Please select the Editor", {
                        icon: "warning",
                    });
        }
    }

     function InsertVendorVariable(id, Lable) {
        try {
            var value = $("#" + id).val();
            // alert("id" + id + "Value" + value);
            if ($.trim(value).length < 1) {
                value = Lable;
            }
            //CKEDITOR.instances.IDofEditor.insertHtml('<span style="color:red;" contentEditable="false" unselectable="on"> ** <span id = "testVar" class="CustomPlaceholder ' + Lable.replace(" ","_") + '">[[' + value + ']]</span> ** </span>');
            CKEDITOR.instances.IDofEditor.insertHtml(' <span class="CustomPlaceholder ' + Lable.replace(/ /g, "_") + '">' + value + '</span>  ');
        } catch (error) {
             swal("Please select the Editor", {
                        icon: "warning",
                    });
        }
    }

  $("#Variable_").keyup(function () {
        this.value = this.value.replace(/[^a-zA-Z\s]/g, '');
    });
    $("#Variable_VendorName").keyup(function () {
        this.value = this.value.replace(/[^a-zA-Z\s]/g, '');
    });
     $("#Variable_DurationFrom").keyup(function () {
        this.value = this.value.replace(/[^0-9]/g, '');
     });
      $("#Variable_DurationTo").keyup(function () {
        this.value = this.value.replace(/[^0-9]/g, '');
      });
     $("#Variable_VendorGSTN").keyup(function () {
        this.value = this.value.replace(/[^A-Za-z0-9\s]/g, '');
    });
     $("#Variable_Signatory").keyup(function () {
         this.value = this.value.replace(/[^a-zA-Z\s]/g, '');
    });
     $("#Variable_Address").keyup(function () {
         this.value = this.value.replace(/[^a-zA-Z0-9\s.,#]/g, '');
     });
     $("#Branch1_Address").keyup(function () {
         this.value = this.value.replace(/[^a-zA-Z0-9\s.,#]/g, '');
     });
     $("#Branch2_Address").keyup(function () {
         this.value = this.value.replace(/[^a-zA-Z0-9\s.,#]/g, '');
     });
     $("#Branch3_Address").keyup(function () {
         this.value = this.value.replace(/[^a-zA-Z0-9\s.,#]/g, '');
     });
     $("#Branch4_Address").keyup(function () {
         this.value = this.value.replace(/[^a-zA-Z0-9\s.,#]/g, '');
     });
     $("#Branch5_Address").keyup(function () {
         this.value = this.value.replace(/[^a-zA-Z0-9\s.,#]/g, '');
    });


    function EditCard() {
        CKEDITOR.instances.IDofEditor.document.getById('CardBody').setAttribute('contentEditable', 'true');
    }


    //function ExportAsWord() {
    //    // alert(CKEDITOR.instances.IDofEditor.document.getBody().getHtml());
    //     CKEDITOR.instances.IDofEditor.execCommand('lite-acceptall');
    //    Export2Doc(CKEDITOR.instances.IDofEditor.document.getBody().getHtml());
    //}
    ////function AddClause(ClauseTitle, ClauseText) {

    ////    CKEDITOR.instances.IDofEditor.insertHtml('<div class="card" id="TestEdit" contentEditable="false"  unselectable="on"><div class="card-header" ><div class="row"><div class="col-8 justify-content-left"  contentEditable="false" unselectable="on"><h6>' + ClauseTitle + '</h6></div><div class="col-4" style="text-align: right;"><button class="btn btn-sm btn-primary" id="Edit"><i class="flaticon-pencil editicon" aria-hidden="true"></i></button>&ensp;<button class="btn btn-danger btn-sm" onclick="parent.Deletecard()"><i class="flaticon-interface-5" aria-hidden="true"></i></button></div></div></div><div class="card-body noselect" id="CardBody" contentEditable="false"><div class="row"><div class="col-12"><span><p style="text-align: justify;">' + ClauseText + '</p></span></div></div></div></div><br/>');
    ////    CKEDITOR.instances.IDofEditor.document.getById('Edit').setAttribute('onclick', 'parent.EditCard()');
    ////}

    // function ExportAsWordCompareversion() {
    //     CKEDITOR.instances.IDofEditor2.execCommand('lite-acceptall');
    //    Export3Doc(CKEDITOR.instances.IDofEditor2.document.getBody().getHtml());
    //}
    //function ExportAsWordComparelatestversion() {
    //     CKEDITOR.instances.IDofEditor3.execCommand('lite-acceptall');
    //    Export4Doc(CKEDITOR.instances.IDofEditor3.document.getBody().getHtml());
    //}

    function ExportAsWord() {
        // alert(CKEDITOR.instances.IDofEditor.document.getBody().getHtml());
        CKEDITOR.instances.IDofEditor4.execCommand('lite-acceptall');
        Export2Doc(CKEDITOR.instances.IDofEditor4.document.getBody().getHtml());
    }

    function ExportAsWordCompareversion() {
        CKEDITOR.instances.IDofEditor5.execCommand('lite-acceptall');
        Export3Doc(CKEDITOR.instances.IDofEditor5.document.getBody().getHtml());
    }
    function ExportAsWordComparelatestversion() {
        CKEDITOR.instances.IDofEditor6.execCommand('lite-acceptall');
        Export4Doc(CKEDITOR.instances.IDofEditor6.document.getBody().getHtml());
    }

     function Export3Doc(element, filename) {

        var TemplateDocName = $("#AppendTemplateName").html();
        var filename = "";
        var preHtml = "<html xmlns: o='urn:schemas-microsoft-com:office:office' xmlns:w='urn:schemas-microsoft-com:office:word' xmlns='http://www.w3.org/TR/REC-html40'><head><meta charset='utf-8'><title>Export HTML To Doc</title></head><body>";
        var postHtml = "</body></html>";
        var html = preHtml + element + postHtml;

        var blob = new Blob(['\ufeff', html], {
            type: 'application/msword'
    });
    //var url = URL.createObjectURL(blob);
    var url = 'data:application/vnd.ms-word;charset=utf-8,' + encodeURIComponent(html);

    // Specify file name
    filename = filename ? filename + '.docx' : TemplateDocName + '.doc';

    // Create download link element
    var downloadLink = document.createElement("a");

    document.body.appendChild(downloadLink);

        if (navigator.msSaveOrOpenBlob) {
            navigator.msSaveOrOpenBlob(blob, filename); // IE10-11
        } else {
            // Create a link to the file
            downloadLink.href = url;

        // Setting the file name
        downloadLink.download = filename;

        //triggering the function
        downloadLink.click();
    }

    document.body.removeChild(downloadLink);
}

        function Export4Doc(element, filename) {

            var TemplateDocName = $("#AppendTemplateName").html();
            //var html, link, blob, url, css;
            var filename = "";
            /*css = (
              '<style>' +
              'page WordSection1{size: 841.95pt 595.35pt;mso-page-orientation: landscape;}' +
              'div.WordSection1 {page: WordSection1;}' +
              '</style>'
          );*/
            var preHtml = "<html xmlns: o='urn:schemas-microsoft-com:office:office' xmlns:w='urn:schemas-microsoft-com:office:word' xmlns='http://www.w3.org/TR/REC-html40'><head><meta charset='utf-8'><title>Export HTML To Doc</title></head><body>";
            var postHtml = "</body></html>";
            var html = preHtml + element + postHtml;

            var blob = new Blob(['\ufeff', html], {
                type: 'application/msword'
        });
        //var url = URL.createObjectURL(blob);
        var url = 'data:application/vnd.ms-word;charset=utf-8,' + encodeURIComponent(html);

        // Specify file name
        filename = filename ? filename + '.docx' : TemplateDocName + '.doc';

        // Create download link element
        var downloadLink = document.createElement("a");

        document.body.appendChild(downloadLink);

            if (navigator.msSaveOrOpenBlob) {
                navigator.msSaveOrOpenBlob(blob, filename); // IE10-11
            } else {
                // Create a link to the file

                downloadLink.href = url;

            // Setting the file name
            downloadLink.download = filename;

            //triggering the function
            downloadLink.click();
        }

        document.body.removeChild(downloadLink);
}

    function Edit() {
        // $('#Edit').click(function () {
        $('#Save').show();
        $('#Cancel').show();
        $('input').removeAttr('readonly');
        $('button').removeAttr('disabled');
        document.getElementById("Initiate").disabled = true;
        document.getElementById("Edit").disabled = true;
        CKEDITOR.instances.IDofEditor.setReadOnly(false);

        //});
    }

    $('#Edit').click(function () {
         swal(" Are you sure you want to Edit !", {
            icon: "warning",
          buttons: {
                cancel: {
                    visible: true,
                    text: 'No, Cancel it !',
                    className: 'btn btn-danger'
                },
                confirm: {
                    text: 'Yes, Edit it !',
                    className: 'btn btn-success'
                    //className: 'btn btn-success'
                }
            }
        }).then(function (value) {
            if (value == true) {
                CKEDITOR.instances.IDofEditor.setReadOnly(false);
                $('#Save').show();
                $('#Save_2').show();

                $('#Cancel').show();
                $('#Cancel_2').show();

                try {
                    $("#TemplateVersionRestore1").removeAttr('disabled');
                    $("#TemplateVersionRestore2").removeAttr('disabled');
                } catch (error) {}
                try {
                    //document.getElementById("Initiate").disabled = true;
                     $("#Initiate").hide();
                } catch(error){ }
                try {
                    //document.getElementById("Approve").disabled = true;
                    $("#Approve").hide();
                } catch (error){ }
                try {
                     //document.getElementById("Reject").disabled = true;
                    $("#Reject").hide();
                } catch (error){ }
                $("#backicon").hide();
                //$('button').removeAttr('disabled');


                $("#DownloadButton").hide();
                $("#Download_Button").hide();
                //$("#VersionButton").hide();
                $(".btn_link").removeAttr('disabled');
                try {
                    $("#MoreVariable_id").show();
                    $("#MoreVariable_id_2").show();
                } catch (error) { }
                try {
                    $("#RemoveVariable_id").show();
                    $("#RemoveVariable_id_2").show();
                } catch (error) { }
                try {
                    $('input[type=checkbox]').removeAttr('disabled');
                } catch (error) { }
                $("#Edit").hide();
                $("#DocumentUpload").show();
                //$('.badge').hide();
                CKEDITOR.instances.IDofEditor.setReadOnly(false);
                document.getElementById('cke_1_top').style.display = '';
                $("#SupportingDocs1").removeAttr('readonly');

                @*var url = window.location.href;
                var page = url.split('/');
                var ID = page[page.length - 1];
                var UserID = "@CurrentLoggedUserID - @CurrentLoggedUserName";

                var initialvalue = "From old content";
                var details = "User modified the content";
            $.ajax({
                type: "POST",
                url: "/Template/SaveLog",
                data: { initialvalue: initialvalue, details: details, ID: ID, UserID: UserID },
                success: function (response) {

                        //alert(response.LogUserID);
                        // alert(called);
                    }
                });*@
            } else {
                //swal("Cancelled", " ", "error");
            }
        });


    });

    //function DraftEdit(Edit) {

    //    $('input').removeAttr('readonly');
    //    $('button').removeAttr('disabled');
    //    $("#addClauseDisplay").show();
    //    $('#' + Edit).hide();
    //    $('#Save').show();
    //    $('#Cancel').show();
    //    CKEDITOR.instances.IDofEditor.setReadOnly(false);
    //    document.getElementById('cke_1_top').style.display = '';
    //}

    $('#Cancel').click(function () {
         var url = window.location.href;
        var page = url.split('/');
        var ID = page[page.length - 1];
      swal({
            title: 'Are you sure?',
            text: "You won't be able to revert this !",
            type: 'warning',
            buttons: {
                cancel: {
                    visible: true,
                    text: 'No',
                    className: 'btn btn-success'
                },
                confirm: {
                    text: 'Yes',
                    className: 'btn btn-danger'
                }
            }
        }).then(function (value) {
            if (value == true) {
                window.location = '/Template/DraftView/' + ID;
            } else {

            }
        });
    });

    $('#Save').click(function () {
        $('#Save').hide();
        $('#Save_2').hide();
        $('#Cancel').hide();
        $('#Cancel_2').hide();
        document.getElementById('cke_1_top').style.display = 'none';
        CKEDITOR.instances.IDofEditor.setReadOnly(true);
    });

</script>
<script>
    function DownloadAcceptChanges() {
        CKEDITOR.instances.IDofEditor4.execCommand('lite-acceptall');
        $("#TemplateDownloadOptionModal").modal('show');
    }

    function VersionAcceptChanges1() {
        CKEDITOR.instances.IDofEditor5.execCommand('lite-acceptall');
        $("#VersionDownloadOptionModal").modal('show');
    }

    function VersionAcceptChanges2() {

        CKEDITOR.instances.IDofEditor6.execCommand('lite-acceptall');
        $("#VersionDownloadOptionModal2").modal('show');
    }
</script>
@*<script>

        function AddClause(id) {
            //alert(id);
            var clausetext = "";
            $.ajax({
                type: "POST",
                url: "/Template/GetClauseText",

                data: { id: id },


                success: function (response) {
                    //clausetext = response;
                    var ClauseText = response;
                   // alert(ClauseText);
                    var ClauseTitle = document.getElementById("ClauseTitle" + id).innerHTML;
                    try {
                        CKEDITOR.instances.IDofEditor.insertHtml('<br/><p><b><h4 class="justify-content-center" style="font-size:16px;">' + ClauseTitle + '</h4></b></p><p style="text-align: justify; font-size:13px;">' + ClauseText + '</p><br/>');
                        //CKEDITOR.instances.IDofEditor.document.getById('Edit').setAttribute('onclick', 'parent.EditCard()');
                        $("#AddClauseModal").modal('hide');
                    }
                    catch(err){
                        swal("Please select the Editor", {
                            icon: "warning",
                        });
                    }
                }
            });

        }
    </script>*@

<script>

    function Initiate() {

        //CKEDITOR.instances.IDofEditor.execCommand('lite-acceptall');
        var content = CKEDITOR.instances.IDofEditor.getData();
        var url = window.location.href;
        var page = url.split('/');
        var ID = page[page.length - 1];
        var CurrentUserID = @CurrentUserID();
        var VariableName = document.getElementsByClassName("Variable_Name");
        var arrVariableNames = [];
        for (i = 0; i < VariableName.length; i++) {
            arrVariableNames.push(VariableName[i].innerHTML);
        }


        var Comments = document.getElementById("InitiateComment").value;
        swal({
            text: "Sure you want to initiate?",
            type: 'warning',
            buttons: {
                cancel: {
                    visible: true,
                    text: 'No, Cancel',
                    className: 'btn btn-danger'
                },
                confirm: {
                    text: 'Yes, Initiate',
                    className: 'btn btn-success'
                }
            }
        }).then(function (value) {
            if (value == true) {
                $.ajax({
            type: "POST",
            url: "/Template/InitiateTemplate",
            traditional: true,

             data: { content: content, ID: ID, arrVariableNames: arrVariableNames, CurrentUserID: CurrentUserID, Comments: Comments },


            success: function (response) {
                if (response[0] == "success") {
                     if (response[1] == "In Effect") {
                            CKEDITOR.instances.IDofEditor.execCommand('lite-acceptall');
                            var finalcontent = CKEDITOR.instances.IDofEditor.getData();
                            $.ajax({
                                type: "POST",
                                url: "/Template/AcceptChangesLastInitiator",
                                data: { ID: ID, finalcontent: finalcontent },

                                success: function (response) {

                                }
                            });
                    }
                    swal("Initiated", {
                        icon: "success",
                    })   .then(function (result) {
                        if (result) {
                            window.location = '/Template/DraftView/' + ID;

                        }
                    });
                }
                else {
                    swal("Cancelled", {
                        icon: "error",
                        text: response,
                        //}).then((error) => {
                        //    if (error) {

                        //    }
                    });
                }
            },

            error: function (response) {
                alert(response.responseText);
            }
        });
            } else {

            }
        });

    }


    function Approve() {

        //CKEDITOR.instances.IDofEditor.execCommand('lite-acceptall');
        var content = CKEDITOR.instances.IDofEditor.getData();
        var url = window.location.href;
        var page = url.split('/');
        var ID = page[page.length - 1];
        var VariableName = document.getElementsByClassName("Variable_Name");
        var arrVariableNames = [];
        for (i = 0; i < VariableName.length; i++) {
            arrVariableNames.push(VariableName[i].innerHTML);
        }

        var Comments = document.getElementById("ApproveComment").value;
        swal({
            text: "Sure you want to Approve?",
            type: 'warning',
            buttons: {
                cancel: {
                    visible: true,
                    text: 'No, Cancel',
                    className: 'btn btn-danger'
                },
                confirm: {
                    text: 'Yes, Approve',
                    className: 'btn btn-success'
                }
            }
        }).then(function (value) {
            if (value == true) {


        $.ajax({
            type: "POST",
            url: "/Template/ApproveTemplate",
            traditional: true,

            data: { content: content, ID: ID, arrVariableNames: arrVariableNames, Comments: Comments },

            success: function (response) {
                if (response[0] == "success") {
                    if (response[1] == "In Effect") {
                        CKEDITOR.instances.IDofEditor.execCommand('lite-acceptall');
                        var finalcontent = CKEDITOR.instances.IDofEditor.getData();
                        $.ajax({
                            type: "POST",
                            url: "/Template/AcceptChangesLastAprrover",
                            data: { ID: ID, finalcontent: finalcontent },

                            success: function (response) {

                            }
                        });
                    }
                    swal("Approved", {
                        icon: "success",
                    })   .then(function (result) {
                        if (result) {
                            window.location = '/Template/DraftView/' + ID;
                        }
                    });
                }
                else {
                    swal("Cancelled", {
                        icon: "error",
                        text: response,
                    });
                }
            },

            error: function (response) {
                alert(response.responseText);
            }
        });
                 } else {

            }
        });
    }
</script>

<script>

    function GetTemplateID() {
        var url = window.location.href;
        var page = url.split('/');
        var ID = page[page.length - 1];
        return ID;
    }

    function SaveTemplate() {

        //alert(CKEDITOR.instances.IDofEditor.document.getBody().getHtml());
        //var content = CKEDITOR.instances.IDofEditor.document.getBody().getHtml();

       // CKEDITOR.instances.IDofEditor.execCommand('lite-acceptall');
          CKEDITOR.config.enterMode = CKEDITOR.ENTER_BR;
        var content = CKEDITOR.instances.IDofEditor.getData();
        var url = window.location.href;
        var page = url.split('/');
        var ID = page[page.length - 1];
        var CurrentUser = @CurrentUserID();
        //var VariableValue = document.getElementsByClassName("Variable_Value");
        var VariableName = document.getElementsByClassName("Variable_Name");
        var arrVariableNames = [];
        for (i = 0; i < VariableName.length; i++) {
            arrVariableNames.push(VariableName[i].innerHTML);
        }
        //var arrVariableValues = [];
        //for (i = 0; i < VariableValue.length; i++) {
        //  //  alert(VariableValue[i].value);
        //    arrVariableValues.push(VariableValue[i].value);
        //}
        var my_array =  ["234", "23423"];
       // json = Object.assign({}, my_array);
        //alert(VariableName);
        //alert(VariableValue.length);
      //  alert(VariableName.length);
        //var i;
        //var j;
        //for (i = 0; i < VariableValue.length; i++) {
        //      alert("Value" + VariableValue[i].value);
        //}

       // alert(json);
       // alert(VariableValues);
        // alert(VariableName);
        //alert(id);

        $.ajax({
            type: "POST",
            url: "/Template/SaveTemplate",
            traditional: true,

            data: { content: content, ID: ID, arrVariableNames: arrVariableNames, CurrentUser: CurrentUser },

            //,VariableValue, VariableName },
            //data: JSON.stringify(my_array),//content, ID ,VariableValue, VariableName },

            success: function (response) {
                if (response == "success") {
                    swal("Template drafted", {
                        icon: "success",
                    })   .then(function (result) {
                        if (result) {
                            window.location = '/Template/DraftView/' + ID;
                        }
                    });
                }
                else {
                    swal("Unable to Save Data",{
                        icon: "error",
                        text: "Unable to Save Data. Please try again",
                        }).then(function (error) {
                           if (error) {
                               window.location = '/Template/DraftView/' + ID;
                           }
                    });
                }
            },

            error: function (response) {
                alert(response.responseText);
            }
        });
    }
</script>

<script>
    CKEDITOR.instances.IDofEditor.on('instanceReady', function () {
        var url = window.location.href;
        var page = url.split('/');
        var id = page[page.length - 1];
        var TemplateName = "";
        var TemplateContent = "";
        var HiddenTemplateContent = "";
        TemplateNameID = "";
        //alert(id);
        $.ajax({
            type: "POST",
            url: "/Template/GetTemplateNameOnID",
            data: { id: id },


            success: function (response) {
                //  alert(response);
                //$("#AppendTemplateName").html(response);
                $.each(response, function (index, value) {
                    // alert(value.Template);
                    if (value.Template === null) {
                        Template = '';
                        CKEDITOR.instances.IDofEditor.setReadOnly(false);
                        $('#Save').show();
                        $('#Save_2').show();
                        $('#Cancel').show();
                        $('#Cancel_2').show();
                        try {
                            $("#TemplateVersionRestore1").removeAttr('disabled');
                            $("#TemplateVersionRestore2").removeAttr('disabled');
                        } catch (error) { }
                        try {
                            //document.getElementById("Initiate").disabled = true;
                            $("#Initiate").hide();
                        } catch (error) { }
                        try {
                            //document.getElementById("Approve").disabled = true;
                            $("#Approve").hide();
                        } catch (error) { }
                        try {
                            //document.getElementById("Reject").disabled = true;
                            $("#Reject").hide();
                        } catch (error) { }
                        $("#backicon").hide();
                        //$('button').removeAttr('disabled');


                        $("#DownloadButton").hide();
                        $("#Download_Button").hide();
                        //$("#VersionButton").hide();
                        $(".btn_link").removeAttr('disabled');
                        try {
                            $("#MoreVariable_id").show();
                            $("#MoreVariable_id_2").show();
                        } catch (error) { }
                        try {
                            $("#RemoveVariable_id").show();
                            $("#RemoveVariable_id_2").show();
                        } catch (error) { }
                        try {
                            $('input[type=checkbox]').removeAttr('disabled');
                        } catch (error) { }
                        $("#Edit").hide();
                        $("#DocumentUpload").show();
                        //$('.badge').hide();
                        CKEDITOR.instances.IDofEditor.setReadOnly(false);
                        document.getElementById('cke_1_top').style.display = '';
                        $("#SupportingDocs1").removeAttr('readonly');
                    }
                    else {
                        Template = value.Template;
                    }

                    Template = Template.replace(/\?/g, "");

                    TemplateName = value.Name;
                    TemplateContent = TemplateContent + Template;
                    HiddenTemplateContent = '<div>' + HiddenTemplateContent + Template + '</div>';
                    TemplateNameID = value.TemplateID + " - " + value.Name;
                    //alert(TemplateContent);
                });
                //alert(TemplateContent);
                CKEDITOR.instances.IDofEditor.setData(TemplateContent);
                CKEDITOR.instances.IDofEditor4.setData(HiddenTemplateContent);
                $("#AppendTemplateName").html(TemplateNameID);
                $("#AppendTemplateName2").val(TemplateName);
                $("#AppendID").val(id);


            },
            failure: function (response) {
                // alert(response);
            },
            error: function (response) {
                //alert(response.responseText);

            }
        });
    });
</script>

<script>
    $(document).ready(function () {
        var url = window.location.href;
        var page = url.split('/');
        var id = page[page.length - 1];
        $.ajax({
            type: "POST",
            url: "/Template/GetApproversForTemplate",
            data: { id: id },


            success: function (response) {
                // alert(response);
                //alert("Hello: " + response);
                var x = document.getElementById("TemplateApproversCompare");
                x.innerHTML = "<option selected disabled>--select--</option>";

                $.each(response, function (index, value) {
                    var option = document.createElement("option");
                    option.text = value;
                    x.add(option);
                });

                var y = document.getElementById("TemplateApproversBetween");
                y.innerHTML = "<option selected disabled>--select--</option>";


                $.each(response, function (index, value) {
                    var option = document.createElement("option");
                    option.text = value;
                    y.add(option);
                });

            },
            failure: function (response) {
                alert(response);
            },
            error: function (response) {
                alert(response.responseText);

            }
        });
    });
</script>

<script>
    $("#TemplateApproversCompare").change(function () {

        var selectvalue = this.value;
        //alert(selectvalue)
        var url = window.location.href;
        var page = url.split('/');
        var TemplateID = page[page.length - 1];
        var TemplateContent = "";
        var HiddenTemplateContent = "";

        var TemplateDocName = $("#AppendTemplateName").html();
        $.ajax({
            type: "POST",
            url: "/Template/GetVersionCompare",
            data: { selectvalue: selectvalue, TemplateID: TemplateID },


            success: function (response) {

                TemplateContent = TemplateContent + response;
                HiddenTemplateContent = '<div>' + HiddenTemplateContent + response + '</div>';

                CKEDITOR.instances.IDofEditor2.setData(TemplateContent);
                CKEDITOR.instances.IDofEditor5.setData(HiddenTemplateContent);
                CKEDITOR.instances.IDofEditor2.setReadOnly(true);
                $("#AppendVersionTemplateName1").val(TemplateDocName);
                $("#AppendVersionID1").val(TemplateID);
                if (TemplateContent != null) {
                    
                    try {
                        //$("#Version1Btn").show();
                        $("#TemplateVersionRestore1").show();

                    } catch (error) { }
                }
                var Card1 = CKEDITOR.instances.IDofEditor2.getData();
                var Card2 = CKEDITOR.instances.IDofEditor3.getData();

                if ((Card1 != '') && (Card2 != '')) {

                    try {
                        $("#Compare_Button").show();
                    } catch{ }
                }
                else {

                    try {
                        $("#Compare_Button").hide();
                    } catch{ }
                }
                //CKEDITOR.instances['editor2'].setData(response);
            },
            failure: function (response) {
                alert(response);
            },
            error: function (response) {
                alert(response.responseText);

            }
        });
    });

    $("#TemplateApproversBetween").change(function () {

        var selectvalue = this.value;
        //alert(selectvalue)
        var url = window.location.href;
        var page = url.split('/');
        var TemplateID = page[page.length - 1];
        var TemplateContent = "";
        HiddenTemplateContent = "";
        var TemplateDocName = $("#AppendTemplateName").html();
        $.ajax({
            type: "POST",
            url: "/Template/GetVersionCompare",
            data: { selectvalue: selectvalue, TemplateID: TemplateID },


            success: function (response) {
                //alert(response);
                TemplateContent = TemplateContent + response;
                HiddenTemplateContent = '<div>' + HiddenTemplateContent + response + '</div>';

                CKEDITOR.instances.IDofEditor3.setData(TemplateContent);
                CKEDITOR.instances.IDofEditor6.setData(HiddenTemplateContent);
                CKEDITOR.instances.IDofEditor3.setReadOnly(true);
                $("#AppendVersionTemplateName2").val(TemplateDocName);
                $("#AppendVersionID2").val(TemplateID);
                if (TemplateContent != null) {
                   
                    try {
                         //$("#Version2Btn").show();
                        $("#TemplateVersionRestore2").show();
                    } catch (error) { }
                }
                var Card1 = CKEDITOR.instances.IDofEditor2.getData();
                var Card2 = CKEDITOR.instances.IDofEditor3.getData();

                if ((Card1 != '') && (Card2 != '')) {

                    try {
                        $("#Compare_Button").show();
                    } catch{ }
                }
                else {

                    try {
                        $("#Compare_Button").hide();
                    } catch{ }
                }
            },
            failure: function (response) {
                alert(response);
            },
            error: function (response) {
                alert(response.responseText);

            }
        });
    });


</script>

<script>
    $("#TemplateVersionRestore1").click(function () {
        swal({
            title: 'Are you sure?',
            text: "If you proceed,current version of this template will be lost and cannot be recovered.",
            type: 'warning',
            buttons: {
                cancel: {
                    visible: true,
                    text: 'No, Cancel !',
                    className: 'btn btn-danger'
                },
                confirm: {
                    text: 'Yes, Restore !',
                    className: 'btn btn-success'
                }
            }
        }).then(function (value) {
            if (value == true) {
                var url = window.location.href;
                var page = url.split('/');
                var TemplateID = page[page.length - 1];
                var selectvalue = $("#TemplateApproversCompare").val();
                // alert(selectvalue);
                var content = "";
                $("#AddVersionModal").modal('hide');
                $.ajax({
                    type: "POST",
                    url: "/Template/GetVersionCompareForRestore",
                    data: { selectvalue: selectvalue, TemplateID: TemplateID },


                    success: function (response) {
                        // alert(response);
                        content = content + response;
                        CKEDITOR.instances.IDofEditor.setData(content);
                        swal("Template Restored.", {
                            icon: "success",
                        }).then(function (result) {
                            if (result) {
                                window.location = '/Template/DraftView/' + TemplateID;
                            }
                        });
                    }
                });
            }
        });
    });

    $("#TemplateVersionRestore2").click(function () {
        swal({
            title: 'Are you sure?',
            text: "If you proceed,current version of this template will be lost and cannot be recovered.",
            type: 'warning',
            buttons: {
                cancel: {
                    visible: true,
                    text: 'No, Cancel !',
                    className: 'btn btn-danger'
                },
                confirm: {
                    text: 'Yes, Restore !',
                    className: 'btn btn-success'
                }
            }
        }).then(function (value) {
            if (value == true) {

                //CKEDITOR.instances.IDofEditor.setData(restore);
                var url = window.location.href;
                var page = url.split('/');
                var TemplateID = page[page.length - 1];
                var selectvalue = $("#TemplateApproversBetween").val();
                //  alert(selectvalue);
                var content = "";
                $("#AddVersionModal").modal('hide');
                $.ajax({
                    type: "POST",
                    url: "/Template/GetVersionCompareForRestore",
                    data: { selectvalue: selectvalue, TemplateID: TemplateID },


                    success: function (response) {
                        //alert(response);
                        content = content + response;
                        CKEDITOR.instances.IDofEditor.setData(content);
                        swal("Template Restored.", {
                            icon: "success",
                        }).then(function (result) {
                            if (result) {
                                window.location = '/Template/DraftView/' + TemplateID;
                            }
                        });
                    }
                });
            }
        });
    });

</script>

<script>
    $(document).ready(function () {
        var url = window.location.href;
        var page = url.split('/');
        var TemplateID = page[page.length - 1];
        $.ajax({
            type: "POST",
            url: "/Template/GetApproverComments",
            data: { TemplateID: TemplateID },

            success: function (response) {
                if (response[0] == "success") {
                    //  alert(response[1])
                    $("#Initiator_name").html(response[1]);
                    $("#Approver1_name").html(response[2]);
                    $("#Approver2_name").html(response[3]);
                    $("#Approver3_name").html(response[4]);
                    $("#Approver4_name").html(response[5]);
                    $("#Approver5_name").html(response[6]);
                    $("#Approver6_name").html(response[7]);
                    $("#Approver7_name").html(response[8]);
                    $("#Approver8_name").html(response[9]);
                    $("#Approver9_name").html(response[10]);
                    $("#Approver10_name").html(response[11]);
                }
            },

        });
    });
</script>
<script>
    function PreviousPage() {
        var url = window.location.href;
        // alert(url);
        url = url.replace("DraftView", "Details");

        //  alert(url);
        window.location.href = url;
    }
</script>

<script>
    function AddPlaceholderToTable() {
        if ($(".Modal_Placeholder").val().length <= 0) {

            swal({
                title: 'Enter place holder to add.',
                icon: "warning",
            })

        }
        else {


            //var ClassName = document.getElementsByClassName("Variable_Name");
            //for (i = 0; i < ClassName.length; i++) {
            // // arrVariableNames.push(VariableName[i].innerHTML);
            //}

            var all = $(".Variable_Name").map(function () {
                var VariableName = $(".Modal_Placeholder").val();
                VariableName = VariableName.trim();
                var VariableName2 = VariableName.replace(/ /g, "_");

                var BeginnewVal = this.innerHTML;
                BeginnewVal = BeginnewVal.trim();
                var newVal = BeginnewVal.replace(/ /g, "_");

                if (VariableName2 == newVal) { return this.innerHTML }
            }).get();

            // console.log(all.join());
            //console.log(all.length);
            if (all.length < 1) {

                var VariableName = $(".Modal_Placeholder").val();
                var VariableName2 = VariableName.replace(/ /g, "_");
                var FuncTag = "test2('" + VariableName.replace(/ /g, "_") + "')";
                $("#Add_MoreVariable").append('<tr><td><input type="checkbox" name="record" class="larger"/></td><td class="' + VariableName2 + ' Variable_Name">' + VariableName + '</td><td><center><button class="btn btn-xs btn-light btn_link" id="' + VariableName2 + '" onclick="InsertVariable(this.id)"><i class="flaticon-plus"></i>&nbsp; Add</button></td></tr>');
                $("#placeholder_value").val('');
                expandTextarea("text_area");
            }
            else {
                // alert("duplicate");

                swal({
                    title: 'Duplicate value, Cannot be added.',
                    text: 'Note: Place holder with SPACE & Underscore treated as same.    Eg: Vendor Name & Vendor_Name treated as same.',
                    icon: "warning",
                })
            }

        }
    }
    function RemoveModal() {
        $('#AddMoreVariableTable').modal('hide');
    }
    $("#RemoveVariable_id").click(function () {
        var numberOfChecked = $('.larger:input:checkbox:checked').length;
        if (numberOfChecked > 0) {
            //alert(numberOfChecked);
            swal({
                title: 'Are you sure ?',
                text: "If you remove the place holder (s), all the values for this place holders in the template will set to empty.",
                icon: 'warning',
                buttons: {
                    cancel: {
                        visible: true,
                        text: "No, Don't Remove",
                        className: 'btn btn-success'
                    },
                    confirm: {
                        text: 'Yes, Remove',
                        className: 'btn btn-danger'
                    }
                }
            }).then(function (value) {
                if (value == true) {

                    try {
                        $("#Add_MoreVariable").find('input[name="record"]').each(function () {
                            if ($(this).is(":checked")) {
                                var data = $(this).parents("tr").children().first().next().html();

                                //var ClassName1 = "Vendor Name";
                                ///alert("asdf");
                                var ifr = document.getElementsByTagName("iframe")[0];
                                var ifrDoc = ifr.contentDocument || ifr.contentWindow.document;

                                var x = ifrDoc.getElementsByClassName(data.replace(" ", "_"));
                                var i;
                                for (i = 0; i < x.length; i++) {
                                    x[i].innerHTML = "";
                                }


                                $(this).parents("tr").remove();
                            }
                            //CheckLimit();
                        });
                        swal("Selected Place holder (s) removed", {
                            icon: "success",
                        })
                    } catch (error) { }


                }
                else {
                    swal("Your Data is safe", {
                        buttons: {
                            confirm: {
                                className: 'btn btn-success'
                            }
                        }
                    });
                }
            });
        }
        else {
            swal({
                text: "Please select Place holder (s) to remove.",
                icon: "warning",
            })
        }

    });



</script>
<script type="text/javascript">
    $(function () {
        $('#datetimepicker7').datetimepicker({
            format: 'L',
            format: 'DD/MM/YYYY'
        });
    });

    $(function () {
        $('#datetimepicker8').datetimepicker({
            format: 'L',
            format: 'DD/MM/YYYY'
        });
    });
</script>


@*************************Reject And Assign***********************************@
<script>
    //$(document).ready(function () {
    //    var url = window.location.href;
    //    var page = url.split('/');
    //    var id = page[page.length - 1];
    //    $.ajax({
    //        type: "POST",
    //        url: "/Template/GetPreviousUsers",
    //        data: { id: id },


    //        success: function (response) {
    //            // alert(response);
    //            //alert("Hello: " + response);
    //            var x = document.getElementById("GetPreviousUsersList");
    //            x.innerHTML = "";

    //            $.each(response, function (index, value) {
    //                var option = document.createElement("option");
    //                option.text = value;
    //                x.add(option);
    //            });

    //        }
    //    });
    //});

    $("#RejectComment").keyup(function () {
        if ($(this).val() == '') {

            $('#RejectButton').prop('disabled', true);
        }
        else {
            $('#RejectButton').prop('disabled', false);
        }

    });

    $("#ApproveComment").keyup(function () {
        if ($(this).val() == '') {

            $('#ApproveButton').prop('disabled', true);
        }
        else {
            $('#ApproveButton').prop('disabled', false);
        }

    });

    $("#InitiateComment").keyup(function () {
        if ($(this).val() == '') {

            $('#InitiateButton').prop('disabled', true);
        }
        else {
            $('#InitiateButton').prop('disabled', false);
        }

    });

    function Reject() {
        var url = window.location.href;
        var page = url.split('/');
        var TemplateID = page[page.length - 1];
        // var selectvalue = $("#GetPreviousUsersList").val();
        var Comments = document.getElementById("RejectComment").value;

        swal({
            text: "Sure you want to Reject?",
            type: 'warning',
            buttons: {
                cancel: {
                    visible: true,
                    text: 'No, Cancel',
                    className: 'btn btn-success'
                },
                confirm: {
                    text: 'Yes, Reject',
                    className: 'btn btn-danger'
                }
            }
        }).then(function (value) {
            if (value == true) {
                $.ajax({
                    type: "POST",
                    url: "/Template/AssignToPreviousUser",
                    data: { TemplateID: TemplateID, Comments: Comments },


                    success: function (response) {
                        if (response == "success") {
                            swal("Rejected", {
                                icon: "success",
                            }).then(function (result) {
                                if (result) {
                                    window.location = '/Template/DraftView/' + TemplateID;
                                }
                            });
                        }
                        else {
                            swal("Cancelled", {
                                icon: "error",
                                text: response,
                                //}).then((error) => {
                                //    if (error) {

                                //    }
                            });
                        }
                    }
                });
            } else {

            }
        });
    }
</script>

@**********************************************************@


<script>

    function UploadSignOff() {
        var url = window.location.href;
        var page = url.split('/');
        var ID = page[page.length - 1];
        $.ajax({
            url: "/Template/UploadForSignOff",
            type: "POST",
            data: function () {
                var data = new FormData();
                data.append("UploadSignOffContractFile", jQuery("#UploadSignOffContractFile").get(0).files[0]);
                return data;
            }(),
            contentType: false,
            processData: false,
            success: function (response) {
                if (response.length > 0) {
                    
                    CKEDITOR.instances.IDofEditor.setData(response);
                    $("#UploadSignOffContractFile2").val("");
                    $("#UploadButton").hide();
                    swal("Uploaded Successfully", {
                        icon: "success",
                    });
                }

                //else
                //    swal("Error", {
                //        icon: "error",
                //    });
            },
            error: function (jqXHR, textStatus, errorMessage) {
                console.log(errorMessage);
            }
        });
    }
</script>

<script>


    function Export3Doc(element, filename) {

        var TemplateDocName = $("#AppendTemplateName").html();
        //var html, link, blob, url, css;
        var filename = "";
        /*css = (
          '<style>' +
          'page WordSection1{size: 841.95pt 595.35pt;mso-page-orientation: landscape;}' +
          'div.WordSection1 {page: WordSection1;}' +
          '</style>'
        );*/
        var preHtml = "<html xmlns:o='urn:schemas-microsoft-com:office:office' xmlns:w='urn:schemas-microsoft-com:office:word' xmlns='http://www.w3.org/TR/REC-html40'><head><meta charset='utf-8'><title>Export HTML To Doc</title></head><body>";
        var postHtml = "</body></html>";
        var html = preHtml + element + postHtml;

        var blob = new Blob(['\ufeff', html], {
            type: 'application/msword'
        });
        //var url = URL.createObjectURL(blob);
        var url = 'data:application/vnd.ms-word;charset=utf-8,' + encodeURIComponent(html);

        // Specify file name
        filename = filename ? filename + '.docx' : TemplateDocName + '.doc';

        // Create download link element
        var downloadLink = document.createElement("a");

        document.body.appendChild(downloadLink);

        if (navigator.msSaveOrOpenBlob) {
            navigator.msSaveOrOpenBlob(blob, filename); // IE10-11
        } else {
            // Create a link to the file
            downloadLink.href = url;

            // Setting the file name
            downloadLink.download = filename;

            //triggering the function
            downloadLink.click();
        }

        document.body.removeChild(downloadLink);
    }

    function Export4Doc(element, filename) {

        var TemplateDocName = $("#AppendTemplateName").html();
        //var html, link, blob, url, css;
        var filename = "";
        /*css = (
          '<style>' +
          'page WordSection1{size: 841.95pt 595.35pt;mso-page-orientation: landscape;}' +
          'div.WordSection1 {page: WordSection1;}' +
          '</style>'
        );*/
        var preHtml = "<html xmlns:o='urn:schemas-microsoft-com:office:office' xmlns:w='urn:schemas-microsoft-com:office:word' xmlns='http://www.w3.org/TR/REC-html40'><head><meta charset='utf-8'><title>Export HTML To Doc</title></head><body>";
        var postHtml = "</body></html>";
        var html = preHtml + element + postHtml;

        var blob = new Blob(['\ufeff', html], {
            type: 'application/msword'
        });
        //var url = URL.createObjectURL(blob);
        var url = 'data:application/vnd.ms-word;charset=utf-8,' + encodeURIComponent(html);

        // Specify file name
        filename = filename ? filename + '.docx' : TemplateDocName + '.doc';

        // Create download link element
        var downloadLink = document.createElement("a");

        document.body.appendChild(downloadLink);

        if (navigator.msSaveOrOpenBlob) {
            navigator.msSaveOrOpenBlob(blob, filename); // IE10-11
        } else {
            // Create a link to the file
            downloadLink.href = url;

            // Setting the file name
            downloadLink.download = filename;

            //triggering the function
            downloadLink.click();
        }

        document.body.removeChild(downloadLink);
    }
</script>

<script>
    $(function () {
        $("input[name='radio']").click(function () {
            if ($("#customradiobutton").is(":checked")) {
                $("#CustomTextfield").removeAttr("disabled");
                //$("#txtPassportNumber").focus();
            }
            else {
                $("#CustomTextfield").attr("disabled", "disabled");
            }

        });
    });
</script>
<script>
    $(function () {
        $("input[name='radio1']").click(function () {
            if ($("#customradiobutton1").is(":checked")) {
                $("#CustomTextfield1").removeAttr("disabled");
                //$("#txtPassportNumber").focus();
            }
            else {
                $("#CustomTextfield1").attr("disabled", "disabled");
            }

        });
    });
</script>
<script>
    $(function () {
        $("input[name='radio2']").click(function () {
            if ($("#customradiobutton2").is(":checked")) {
                $("#CustomTextfield2").removeAttr("disabled");
                //$("#txtPassportNumber").focus();
            }
            else {
                $("#CustomTextfield2").attr("disabled", "disabled");
            }

        });
    });
</script>

<script>
    $(function () {
        // alert("hello");

        var tblLog = "";
        var url = window.location.href;
        var page = url.split('/');
        var ID = page[page.length - 1];

        //alert(ID);
        $.ajax({
            type: "POST",
            url: "/Template/getLogDetail",
            data: { ID: ID },

            dataType: 'json',
            success: function (response) {

                //alert(response.LogUserID);
                $.each($(response), function (index, value) {
                    tblLog = tblLog + '<tr><td><center>' + value.DateandTime + '</center></td><td><center>' + value.ModifiedBy + '</center></td><td style="text-align: left;">' + value.LogActivity + '</td><td style="text-align: left;">' + value.ChangedFrom + '</td><td style="text-align: left;">' + value.ChangedTo + '</td></tr>';
                });
                $("#tblTemplateLogList").html(tblLog);
            }
        });
    });
</script>

<script>

    function InvalidCustomWaterMark(textbox) {
        if (textbox.value === '') {
            textbox.setCustomValidity('Enter Custom Watermark');
            //document.getElementById("myDiv").style.borderColor = "red";
            textbox.style.borderColor = "red";
            //} else if (textbox.validity.typeMismatch) {
            //    textbox.setCustomValidity
            //        ('Please enter an email address which is valid!');
        }

        else {
            textbox.setCustomValidity('');
            textbox.style.borderColor = "#31ce36";
        }


        return true;
    }
</script>

<script>
    $("#RejectComment").focusout(function () {
        document.getElementById("RejectButton").disabled = false;
    });
</script>

<script>
    function initiate() {
        var content = CKEDITOR.instances.IDofEditor.getData();
        if (content != '') {
            $("InitiateModal").show();
        }
        else {
            //alert(" The word is Empty Cant be Initiated");
            swal({
                text: " Template is Empty Can not be Initiated",
                type: 'warning',
            })
            document.getElementById("Initiate").disabled = true;
        }
    }

</script>



@*<script>

        $(function () {
            $("#WaterMarker").change(function () {
                var selectedText = $(this).find("option:selected").text();
                // var TemplateType = $(this).val();
                //alert(selectedText);
                if (selectedText == "No Watermark") {
                    var x = '';
                    $('#watermark').html(x);
                }

                if (selectedText == "Draft") {
                    var x = '';
                    $('#watermark').html(x);
                }

                else if (selectedText == "Vendor copy") {
                    var x = '';
                    $("#watermark").html(x);
                }

                else if (selectedText == "Custom") {
                    var x = '<input type="text" id="watermarkPagesize" maxlength="20" name="watermark" class="form-control"   required/>';
                    $("#watermark").html(x);
                }

            });



            $("#versionWaterMarker").change(function () {
                var selectedText = $(this).find("option:selected").text();
                // var TemplateTypeversionWaterMarker = $(this).val();
                //alert(selectedText);
                if (selectedText == "No Watermark") {
                    var x = '';
                    $('#versionwatermark').html(x);
                }

                if (selectedText == "Draft") {
                    var x = '';
                    $('#versionwatermark').html(x);
                }

                else if (selectedText == "Vendor copy") {
                    var x = '';
                    $("#versionwatermark").html(x);
                }

                else if (selectedText == "Custom") {
                    var x = '<input type="text" id="watermarkPagesize" maxlength="20" name="watermark" class="form-control" required="required"> ';
                    $("#versionwatermark").html(x);
                }

            });

            $("#version2WaterMarker").change(function () {
                var selectedText = $(this).find("option:selected").text();
                // var TemplateTypeversionWaterMarker = $(this).val();
                //alert(selectedText);
                if (selectedText == "No Watermark") {
                    var x = '';
                    $('#version2watermark').html(x);
                }

                if (selectedText == "Draft") {
                    var x = '';
                    $('#version2watermark').html(x);
                }

                else if (selectedText == "Vendor copy") {
                    var x = '';
                    $("#version2watermark").html(x);
                }

                else if (selectedText == "Custom") {
                    var x = '<input type="text" id="watermarkPagesize" maxlength="20" name="watermark" class="form-control" required="required"> ';
                    $("#version2watermark").html(x);
                }

            });
        });

    </script>*@

<script>
    function Invalidversion1watermark(textbox) {
        if (textbox.value === '') {
            textbox.setCustomValidity
                ('Select an Water Mark');
            //document.getElementById("myDiv").style.borderColor = "red";
            textbox.style.borderColor = "red";
        }
        //else if (textbox.validity.patternMismatch) {
        //    textbox.setCustomValidity('Numbers and Special Characters are not allowed');
        //}
        else {
            textbox.setCustomValidity('');
            textbox.style.borderColor = "#31ce36";
        }

        return true;
    }

    function Invalidversion2watermark(textbox) {
        if (textbox.value === '') {
            textbox.setCustomValidity
                ('Select an Water Mark');
            //document.getElementById("myDiv").style.borderColor = "red";
            textbox.style.borderColor = "red";
        }
        //else if (textbox.validity.patternMismatch) {
        //    textbox.setCustomValidity('Numbers and Special Characters are not allowed');
        //}
        else {
            textbox.setCustomValidity('');
            textbox.style.borderColor = "#31ce36";
        }

        return true;
    }
</script>

<script>
    $("#Initiate_Cancel").click(function () {
        $("#InitiateComment").val("");
        $('#InitiateButton').prop('disabled', true);
        $("#InitiateModal").modal('hide');
    });

    $("#Approve_Cancel").click(function () {
        $("#ApproveComment").val("");
        $('#ApproveButton').prop('disabled', true);
        $("#ApproveModal").modal('hide');
    });

    $("#Reject_Cancel").click(function () {
        $("#RejectComment").val("");
        $('#RejectButton').prop('disabled', true);
        $("#RejectAndAssignModal").modal('hide');
    });
</script>

<script>
    $(function () {
        PaperType1Onchange();
        PaperType2Onchange();
        PaperType3Onchange();
    });
    function PaperType1Onchange() {

        var PaperType = $("#PaperType1").val();
        var PaperSize = $("#PaperSize1").val();
        $.ajax({
            type: "POST",
            url: "/Template/GetPaperTypeDetails",
            data: { PaperType: PaperType, PaperSize: PaperSize },

            dataType: 'json',
            success: function (response) {
                 if (response[6] == "success") {
                    $("#MarginTop1").val(response[2]);
                    $("#MarginLeft1").val(response[3]);
                    $("#MarginBottom1").val(response[4]);
                    $("#MarginRight1").val(response[5]);
                }
                else {
                    $("#MarginTop1").val("1");
                    $("#MarginLeft1").val("1");
                    $("#MarginBottom1").val("1");
                    $("#MarginRight1").val("1");
                }
            }
        });
    }
    function PaperType2Onchange() {
        var PaperType = $("#PaperType2").val();
        var PaperSize = $("#PaperSize2").val();
        $.ajax({
            type: "POST",
            url: "/Template/GetPaperTypeDetails",
            data: { PaperType: PaperType, PaperSize: PaperSize },

            dataType: 'json',
            success: function (response) {
                if (response.length > 1) {
                    $("#MarginTop2").val(response[2]);
                    $("#MarginLeft2").val(response[3]);
                    $("#MarginBottom2").val(response[4]);
                    $("#MarginRight2").val(response[5]);
                }
            }
        });
    }
    function PaperType3Onchange() {
        var PaperType = $("#PaperType3").val();
        var PaperSize = $("#PaperSize3").val();
        $.ajax({
            type: "POST",
            url: "/Template/GetPaperTypeDetails",
            data: { PaperType: PaperType, PaperSize: PaperSize },

            dataType: 'json',
            success: function (response) {
                if (response.length > 1) {
                    $("#MarginTop3").val(response[2]);
                    $("#MarginLeft3").val(response[3]);
                    $("#MarginBottom3").val(response[4]);
                    $("#MarginRight3").val(response[5]);
                }
            }
        });
    }

</script>

<script>
    function Version() {
         var Match, calculate_operations, consecutive_where, create_index, diff, find_match, find_matching_blocks, html_to_tokens, is_end_of_tag, is_start_of_tag, is_tag, is_whitespace, isnt_tag, op_map, recursively_find_matching_blocks, render_operations, wrap;
            is_end_of_tag = function (char) {
                return char === '>';
            };
            is_start_of_tag = function (char) {
                return char === '<';
            };
            is_whitespace = function (char) {
                return /^\s+$/.test(char);
            };
            is_tag = function (token) {
                return /^\s*<[^>]+>\s*$/.test(token);
            };
            isnt_tag = function (token) {
                return !is_tag(token);
            };
            Match = class Match {

                constructor(start_in_before1, start_in_after1, length1) {
                    this.start_in_before = start_in_before1;
                    this.start_in_after = start_in_after1;
                    this.length = length1;
                    this.end_in_before = (this.start_in_before + this.length) - 1;
                    this.end_in_after = (this.start_in_after + this.length) - 1;
                }
            };
            html_to_tokens = function (html) {
                var char, current_word, i, len, mode, words;
                mode = 'char';
                current_word = '';
                words = [];
                for (i = 0, len = html.length; i < len; i++) {
                    char = html[i];
                    switch (mode) {
                        case 'tag':
                            if (is_end_of_tag(char)) {
                                current_word += '>';
                                words.push(current_word);
                                current_word = '';
                                if (is_whitespace(char)) {
                                    mode = 'whitespace';
                                } else {
                                    mode = 'char';
                                }
                            } else {
                                current_word += char;
                            }
                            break;
                        case 'char':
                            if (is_start_of_tag(char)) {
                                if (current_word) {
                                    words.push(current_word);
                                }
                                current_word = '<';
                                mode = 'tag';
                            } else if (/\s/.test(char)) {
                                if (current_word) {
                                    words.push(current_word);
                                }
                                current_word = char;
                                mode = 'whitespace';
                            } else if (/[\w\#]+/i.test(char)) {
                                current_word += char;
                            } else {
                                if (current_word) {
                                    words.push(current_word);
                                }
                                current_word = char;
                            }
                            break;
                        case 'whitespace':
                            if (is_start_of_tag(char)) {
                                if (current_word) {
                                    words.push(current_word);
                                }
                                current_word = '<';
                                mode = 'tag';
                            } else if (is_whitespace(char)) {
                                current_word += char;
                            } else {
                                if (current_word) {
                                    words.push(current_word);
                                }
                                current_word = char;
                                mode = 'char';
                            }
                            break;
                        default:
                            throw new Error(`Unknown mode ${mode}`);
                    }
                }
                if (current_word) {
                    words.push(current_word);
                }
                return words;
            };
            find_match = function (before_tokens, after_tokens, index_of_before_locations_in_after_tokens, start_in_before, end_in_before, start_in_after, end_in_after) {
                var best_match_in_after, best_match_in_before, best_match_length, i, index_in_after, index_in_before, j, len, locations_in_after, looking_for, match, match_length_at, new_match_length, new_match_length_at, ref, ref1;
                best_match_in_before = start_in_before;
                best_match_in_after = start_in_after;
                best_match_length = 0;
                match_length_at = {};
                for (index_in_before = i = ref = start_in_before, ref1 = end_in_before;
                    (ref <= ref1 ? i < ref1 : i > ref1); index_in_before = ref <= ref1 ? ++i : --i) {
                    new_match_length_at = {};
                    looking_for = before_tokens[index_in_before];
                    locations_in_after = index_of_before_locations_in_after_tokens[looking_for];
                    for (j = 0, len = locations_in_after.length; j < len; j++) {
                        index_in_after = locations_in_after[j];
                        if (index_in_after < start_in_after) {
                            continue;
                        }
                        if (index_in_after >= end_in_after) {
                            break;
                        }
                        if (match_length_at[index_in_after - 1] == null) {
                            match_length_at[index_in_after - 1] = 0;
                        }
                        new_match_length = match_length_at[index_in_after - 1] + 1;
                        new_match_length_at[index_in_after] = new_match_length;
                        if (new_match_length > best_match_length) {
                            best_match_in_before = index_in_before - new_match_length + 1;
                            best_match_in_after = index_in_after - new_match_length + 1;
                            best_match_length = new_match_length;
                        }
                    }
                    match_length_at = new_match_length_at;
                }
                if (best_match_length !== 0) {
                    match = new Match(best_match_in_before, best_match_in_after, best_match_length);
                }
                return match;
            };
            recursively_find_matching_blocks = function (before_tokens, after_tokens, index_of_before_locations_in_after_tokens, start_in_before, end_in_before, start_in_after, end_in_after, matching_blocks) {
                var match;
                match = find_match(before_tokens, after_tokens, index_of_before_locations_in_after_tokens, start_in_before, end_in_before, start_in_after, end_in_after);
                if (match != null) {
                    if (start_in_before < match.start_in_before && start_in_after < match.start_in_after) {
                        recursively_find_matching_blocks(before_tokens, after_tokens, index_of_before_locations_in_after_tokens, start_in_before, match.start_in_before, start_in_after, match.start_in_after, matching_blocks);
                    }
                    matching_blocks.push(match);
                    if (match.end_in_before <= end_in_before && match.end_in_after <= end_in_after) {
                        recursively_find_matching_blocks(before_tokens, after_tokens, index_of_before_locations_in_after_tokens, match.end_in_before + 1, end_in_before, match.end_in_after + 1, end_in_after, matching_blocks);
                    }
                }
                return matching_blocks;
            };
            create_index = function (p) {
                var i, idx, index, len, ref, token;
                if (p.find_these == null) {
                    throw new Error('params must have find_these key');
                }
                if (p.in_these == null) {
                    throw new Error('params must have in_these key');
                }
                index = {};
                ref = p.find_these;
                for (i = 0, len = ref.length; i < len; i++) {
                    token = ref[i];
                    index[token] = [];
                    idx = p.in_these.indexOf(token);
                    while (idx !== -1) {
                        index[token].push(idx);
                        idx = p.in_these.indexOf(token, idx + 1);
                    }
                }
                return index;
            };
            find_matching_blocks = function (before_tokens, after_tokens) {
                var index_of_before_locations_in_after_tokens, matching_blocks;
                matching_blocks = [];
                index_of_before_locations_in_after_tokens = create_index({
                    find_these: before_tokens,
                    in_these: after_tokens
                });
                return recursively_find_matching_blocks(before_tokens, after_tokens, index_of_before_locations_in_after_tokens, 0, before_tokens.length, 0, after_tokens.length, matching_blocks);
            };
            calculate_operations = function (before_tokens, after_tokens) {
                var action_map, action_up_to_match_positions, i, index, is_single_whitespace, j, last_op, len, len1, match, match_starts_at_current_position_in_after, match_starts_at_current_position_in_before, matches, op, operations, position_in_after, position_in_before, post_processed;
                if (before_tokens == null) {
                    throw new Error('before_tokens?');
                }
                if (after_tokens == null) {
                    throw new Error('after_tokens?');
                }
                position_in_before = position_in_after = 0;
                operations = [];
                action_map = {
                    'false,false': 'replace',
                    'true,false': 'insert',
                    'false,true': 'delete',
                    'true,true': 'none'
                };
                matches = find_matching_blocks(before_tokens, after_tokens);
                matches.push(new Match(before_tokens.length, after_tokens.length, 0));
                for (index = i = 0, len = matches.length; i < len; index = ++i) {
                    match = matches[index];
                    match_starts_at_current_position_in_before = position_in_before === match.start_in_before;
                    match_starts_at_current_position_in_after = position_in_after === match.start_in_after;
                    action_up_to_match_positions = action_map[[match_starts_at_current_position_in_before, match_starts_at_current_position_in_after].toString()];
                    if (action_up_to_match_positions !== 'none') {
                        operations.push({
                            action: action_up_to_match_positions,
                            start_in_before: position_in_before,
                            end_in_before: (action_up_to_match_positions !== 'insert' ? match.start_in_before - 1 : void 0),
                            start_in_after: position_in_after,
                            end_in_after: (action_up_to_match_positions !== 'delete' ? match.start_in_after - 1 : void 0)
                        });
                    }
                    if (match.length !== 0) {
                        operations.push({
                            action: 'equal',
                            start_in_before: match.start_in_before,
                            end_in_before: match.end_in_before,
                            start_in_after: match.start_in_after,
                            end_in_after: match.end_in_after
                        });
                    }
                    position_in_before = match.end_in_before + 1;
                    position_in_after = match.end_in_after + 1;
                }
                post_processed = [];
                last_op = {
                    action: 'none'
                };
                is_single_whitespace = function (op) {
                    if (op.action !== 'equal') {
                        return false;
                    }
                    if (op.end_in_before - op.start_in_before !== 0) {
                        return false;
                    }
                    return /^\s$/.test(before_tokens.slice(op.start_in_before, +op.end_in_before + 1 || 9e9));
                };
                for (j = 0, len1 = operations.length; j < len1; j++) {
                    op = operations[j];
                    if (((is_single_whitespace(op)) && last_op.action === 'replace') || (op.action === 'replace' && last_op.action === 'replace')) {
                        last_op.end_in_before = op.end_in_before;
                        last_op.end_in_after = op.end_in_after;
                    } else {
                        post_processed.push(op);
                        last_op = op;
                    }
                }
                return post_processed;
            };
            consecutive_where = function (start, content, predicate) {
                var answer, i, index, last_matching_index, len, token;
                content = content.slice(start, +content.length + 1 || 9e9);
                last_matching_index = void 0;
                for (index = i = 0, len = content.length; i < len; index = ++i) {
                    token = content[index];
                    answer = predicate(token);
                    if (answer === true) {
                        last_matching_index = index;
                    }
                    if (answer === false) {
                        break;
                    }
                }
                if (last_matching_index != null) {
                    return content.slice(0, +last_matching_index + 1 || 9e9);
                }
                return [];
            };
            wrap = function (tag, content) {
                var length, non_tags, position, rendering, tags;
                rendering = '';
                position = 0;
                length = content.length;
                while (true) {
                    if (position >= length) {
                        break;
                    }
                    non_tags = consecutive_where(position, content, isnt_tag);
                    position += non_tags.length;
                    if (non_tags.length !== 0) {
                        rendering += `<${tag}>${non_tags.join('')}</${tag}>`;
                    }
                    if (position >= length) {
                        break;
                    }
                    tags = consecutive_where(position, content, is_tag);
                    position += tags.length;
                    rendering += tags.join('');
                }
                return rendering;
            };
            op_map = {
                equal: function (op, before_tokens, after_tokens) {
                    return before_tokens.slice(op.start_in_before, +op.end_in_before + 1 || 9e9).join('');
                },
                insert: function (op, before_tokens, after_tokens) {
                    var val;
                    val = after_tokens.slice(op.start_in_after, +op.end_in_after + 1 || 9e9);
                    return wrap('ins', val);
                },
                delete: function (op, before_tokens, after_tokens) {
                    var val;
                    val = before_tokens.slice(op.start_in_before, +op.end_in_before + 1 || 9e9);
                    return wrap('del', val);
                }
            };
            op_map.replace = function (op, before_tokens, after_tokens) {
                return (op_map.delete(op, before_tokens, after_tokens)) + (op_map.insert(op, before_tokens, after_tokens));
            };
            render_operations = function (before_tokens, after_tokens, operations) {
                var i, len, op, rendering;
                rendering = '';
                for (i = 0, len = operations.length; i < len; i++) {
                    op = operations[i];
                    rendering += op_map[op.action](op, before_tokens, after_tokens);
                }
                return rendering;
            };
            diff = function (before, after) {
                var ops;
                if (before === after) {
                    return before;
                }
                before = html_to_tokens(before);
                after = html_to_tokens(after);
                ops = calculate_operations(before, after);
                return render_operations(before, after, ops);
            };
            diff.html_to_tokens = html_to_tokens;
            diff.find_matching_blocks = find_matching_blocks;
            find_matching_blocks.find_match = find_match;
            find_matching_blocks.create_index = create_index;
            diff.calculate_operations = calculate_operations;
            diff.render_operations = render_operations;
            if (typeof define === 'function') {
                define([], function () {
                    return diff;
                });
            } else if (typeof module !== "undefined" && module !== null) {
                module.exports = diff;
            } else {

                this.htmldiff = diff;
            }




        CKEDITOR.instances.IDofEditor3.execCommand('lite-acceptall');
        CKEDITOR.instances.IDofEditor2.execCommand('lite-acceptall');
            let originalHTML = CKEDITOR.instances.IDofEditor2.getData();
            let newHTML = CKEDITOR.instances.IDofEditor3.getData();
            // Diff HTML strings
            let output = htmldiff(originalHTML, newHTML);

            // Show HTML diff output as HTML (crazy right?)!
            //document.getElementById("outputNew").innerHTML = output;

            //CKEDITOR.instances.IDofEditor3.setData("");
            CKEDITOR.instances.IDofEditor3.setData(output);

            $("#CompareCode").html("");
         try {
            $("#TemplateApproversCompare").removeAttr('disabled');
            $("#TemplateApproversBetween").removeAttr('disabled');
        } catch (error) { }
            //document.getElementById("IDofEditor3").innerHTML = output;
            //document.getElementById("outputNew").innerHTML = newHTML;
    }

    function SetText() {
        $("#CompareCode").html("Please wait while its loading.");
        $("#CompareCode").css({ "color": "green" });
             
             try {
                //$("#Version1Btn").hide();
                //$("#Version2Btn").hide();
                 $("#TemplateVersionRestore1").show();
                 $("#TemplateVersionRestore2").hide();
        } catch (error) { }
        try {
            $("#TemplateApproversCompare").attr('disabled', 'disabled');
            $("#TemplateApproversBetween").attr('disabled', 'disabled');
        } catch (error) { }
    }
</script>


<script>
    function CompareVersion() {
        SetText();
        setTimeout(function () {
            Version();
        }, 2000);
        
    }
</script>