@model ContractManagementSystem.Models.CommonModel

@{
    ViewBag.Title = "ExistingContractView";
    Layout = "~/Views/Shared/_HomeLayout.cshtml";

    string CurrentUserID()
    {
        string userName = string.Empty;

        if (HttpContext.Current.Request.IsAuthenticated)
        {
            userName = HttpContext.Current.User.Identity.Name.Split('|')[1];
        }
        return userName;

    }
    string CurrentUserLoggedID = CurrentUserID();

    string CurrentUserName()
    {
        string userName = string.Empty;

        if (HttpContext.Current.Request.IsAuthenticated)
        {
            userName = HttpContext.Current.User.Identity.Name.Split('|')[0];
        }

        return userName;

    }
    int CurrentLoggedUserID = Convert.ToInt32(CurrentUserID());
    string CurrentLoggedUserName = CurrentUserName();
}
}

<div class="main-panel">
    <div class="content">
        <div class="page-inner">
            <div class="row justify-content-center">
                @*<form enctype="multipart/form-data">*@
                <div class="col-sm-12">
                    @{
                        string contractid = Request.Url.AbsoluteUri.Split('/').Last();
                        if (Model.Contract.Where(x => x.ContractID.ToString() == contractid).Where(x => x.Status == "Draft").Any())
                        {
                            <div class="row align-items-center">
                                <div class="col-sm-3">
                                    <div class="form-group">
                                        <h2><b>Existing Contract</b></h2>

                                    </div>
                                </div>
                                <div class="col-sm-6">
                                    <div class="form-group">
                                        @*<input type="file" name="UploadExistingFiles" id="UploadExistingFiles" class="file" accept=".doc,.docx,.txt,.pdf,.xlx,.xlsx,.zip">*@
                                        <input type="file" name="UploadExistingFiles" id="UploadExistingFiles" class="file" accept=".pdf">
                                        <div class="input-group col-xs-10">
                                            @*<span class="input-group-addon "><i class="flaticon-search" aria-hidden="true"></i>&nbsp; Browse</span>*@
                                            <input type="text" class="form-control input-lg browse" id="UploadedFileName" name="UploadExistingFiles" disabled placeholder="Choose File">
                                            <span class="input-group-btn ">
                                                <button class="browse btn btn-primary uploadbtnsizing" type="button" style="border-radius:0;" id="Browse"><i class="flaticon-search-1" aria-hidden="true"></i>&nbsp; Browse</button>&nbsp;

                                            </span>
                                        </div>
                                    </div>
                                </div>

                                <div class="col-sm-2 form-inline">
                                    <div class="form-group">

                                        <button onclick="uploadFile()" id="uploadFile" class="btn  btn-success" style="display:none; font-size:13px; padding-bottom:8px; padding-top:8px;"><i class="flaticon-archive" aria-hidden="true"></i>&nbsp; Upload</button>
                                        @if (Model.Contract.Where(x => x.ContractID.ToString() == contractid).Where(x => x.UploadExistingContractFileName != null).Any())
                                        {
                                            using (Html.BeginForm("DownloadExistingFiles", "Contract", FormMethod.Post))
                                            {
                                                <input type="hidden" name="ContractId" id="hiddenContractID" />
                                                @Html.Raw("&nbsp;")<button type="submit" id="DownloadFiles" style="font-size:13px; padding-bottom:8px; padding-top:8px;" class="btn  btn-success">
                                                    <i class="flaticon-inbox" aria-hidden="true"></i>&nbsp; Download
                                                </button>
                                            }
                                        }
                                    </div>
                                </div>

                            </div>
                        }
                        else
                        {
                            using (Html.BeginForm("DownloadExistingFiles", "Contract", FormMethod.Post))
                            {
                                <div class="row align-items-center">
                                    <div class="col-sm-3">
                                        <h3><b>Existing Contract</b></h3>

                                    </div>
                                    <div class="col-sm-6">
                                        <input type="text" id="UploadedFileName" class="form-control" disabled>
                                    </div>
                                    <div class="col-sm-2">
                                        <input type="hidden" name="ContractId" id="hiddenContractID" />
                                        @Html.Raw("&nbsp;")<button type="submit" class="btn btn-sm btn-success">
                                            <i class="flaticon-inbox" aria-hidden="true"></i>&nbsp; Download

                                        </button>
                                    </div>
                                </div>
                                <br />
                            }

                        }
                    }
                </div>
            </div>
            <div class="row justify-content-center">
                <div class="col-sm-12">
                    <div class="card">
                        <div class="card-header" style="padding-bottom:8px; padding-top:8px;">
                            <div class="row align-items-center form-inline">
                                <div class="col-lg-6">
                                    <span class="page-title" id="AppendContractName" style="font-size:20px;"></span>
                                    @{ if (User.IsInRole("Initiator") || User.IsInRole("Admin") || User.IsInRole("Approver"))
                                        {
                                            string Id = Request.Url.AbsoluteUri.Split('/').Last();
                                            if (Model.Contract.Where(x => x.ContractID.ToString() == Id).Where(x => x.Status == "Approved").Any())
                                            {
                                                <span class='badge Legal shadow draft'>
                                                    <span class="dot" style="margin-bottom:1px;"> </span>&nbsp;
                                                    <span>Approved</span>
                                                </span>

                                            }
                                            if (Model.Contract.Where(x => x.ContractID.ToString() == Id).Where(x => x.Status == "In Effect").Any())
                                            {
                                                <span class='badge Legal shadow  Ineffect'>
                                                    <span class="dot" style="margin-bottom:1px;"> </span>&nbsp;
                                                    <span>In Effect</span>
                                                </span>

                                            }
                                            if (Model.Contract.Where(x => x.ContractID.ToString() == Id).Where(x => x.Status == "Pending Approval").Any())
                                            {
                                                <span class='badge Legal shadow  Pennding_Approvals'>
                                                    <span class="dot" style="margin-bottom:1px;"> </span>&nbsp;
                                                    <span>Pending Approval</span>
                                                </span>

                                            }
                                            if (Model.Contract.Where(x => x.ContractID.ToString() == Id).Where(x => x.Status == "Draft").Any())
                                            {
                                                <span class='badge Legal shadow  draft'>
                                                    <span class="dot" style="margin-bottom:1px;"> </span>&nbsp;
                                                    <span>Draft</span>
                                                </span>

                                            }
                                            if (Model.Contract.Where(x => x.ContractID.ToString() == Id).Where(x => x.Status == "Rejected").Any())
                                            {
                                                <span class='badge Legal shadow  Rework'>
                                                    <span class="dot" style="margin-bottom:1px;"> </span>&nbsp;
                                                    <span>Rejected</span>
                                                </span>

                                            }
                                            if (Model.Contract.Where(x => x.ContractID.ToString() == Id).Where(x => x.Status == "Expired").Any())
                                            {
                                                <span class='badge Legal shadow  Expired'>
                                                    <span class="dot" style="margin-bottom:1px;"> </span>&nbsp;
                                                    <span>Expired</span>
                                                </span>

                                            }



                                        }
                                    }
                                </div>
                                <div class="col-lg-6 text-right">
                                    <button type="button" onclick="PreviousPage();" id="backicon" title="Back to Details" class="btn btn-xs btn-light"><i class="flaticon-back" aria-hidden="true"></i>&nbsp; Back</button>
                                    &nbsp;<button class="btn btn-xs btn-light" data-toggle="modal" title="Attachments" id="AttachmentButton" data-target="#AttachmentModal"><i class="flaticon-tool" aria-hidden="true"></i>&nbsp; Attachments</button>
                                    @{
                                        string Ids = Request.Url.AbsoluteUri.Split('/').Last();
                                        if (Model.Contract.Where(x => x.ContractID.ToString() == Ids).Where(x => x.ContractModificationType == "Amendments").Any())
                                        {
                                            @Html.Raw("&nbsp;")<button type="button" class="btn btn-xs btn-light" title="Amendments" onclick="ExtensionPage();"><i class="flaticon-arrow"></i>&nbsp; Amendments</button>
                                        }
                                        if (Model.Contract.Where(x => x.ContractID.ToString() == Ids).Where(x => x.ContractModificationType == "Extension").Any())
                                        {
                                            @Html.Raw("&nbsp;")<button type="button" class="btn btn-xs btn-light" title="Extension" onclick="ExtensionPage();"><i class="flaticon-arrow"></i>&nbsp; Extension</button>

                                        }
                                        if (Model.Contract.Where(x => x.ContractID.ToString() == Ids).Where(x => x.ContractModificationType == "Termination").Any())
                                        {
                                            @Html.Raw("&nbsp;")<button type="button" class="btn btn-xs btn-light" title="Termination" onclick="ExtensionPage();"><i class="flaticon-arrow"></i>&nbsp; Termination</button>
                                        }
                                    }

                                    @if (User.IsInRole("Initiator") || User.IsInRole("admin") || User.IsInRole("legal"))
                                    {
                                        string Id = Request.Url.AbsoluteUri.Split('/').Last();
                                        string emp = CurrentUserLoggedID;
                                        if ((Model.Contract.Where(x => x.ContractID.ToString() == Id).Where(x => x.Status == "Draft").Any()) || (Model.Contract.Where(x => x.ContractID.ToString() == Id).Where(x => x.NextApprover.ToString() == emp).Where(x => x.Status == "Rejected").Any()))

                                        {
                                            @Html.Raw("&nbsp;")<button type="button" id="Edit" title="Edit" class="btn btn-xs btn-light"> <i class="flaticon-pencil" aria-hidden="true"></i>&nbsp;Edit</button>
                                            <span id="Initiate_2">&nbsp;</span><button type="button" title="Initiate" class="btn btn-light btn-xs" id="Initiate" data-toggle="modal" onclick="initiate();" data-target="#InitiateModal"><i class="flaticon-success" aria-hidden="true"></i>&nbsp; Initiate</button>
                                            <span id="Save_2" style="display:none;">&nbsp;</span><button type="button" title="Save" class="btn btn-xs btn-light" id="Save" onclick="SaveVariableData();" style="display:none; color:green;"><i class="flaticon-success" aria-hidden="true"></i>&nbsp;&nbsp;Save</button>
                                            <span id="Cancel_2" style="display:none;">&nbsp;</span><button type="button" title="Cancel" class="btn btn-light btn-xs" id="Cancel" style="display:none; color:red;"><i class="flaticon-error" aria-hidden="true"></i>&nbsp; Cancel</button>

                                        }

                                        if ((Model.Contract.Where(x => x.ContractID.ToString() == Id).Where(x => x.Status == "In Effect").Any()) || (Model.Contract.Where(x => x.ContractID.ToString() == Id).Where(x => x.Status == "Expired").Any()))
                                        {
                                            @Html.Raw("&nbsp;")<button class="btn btn-xs btn-light" type="button" id="dropdownMenuButton" data-toggle="dropdown">Addendum</button>
                                            <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                                                <a class="dropdown-item" onclick="ContractModificationType('Amendments');" style="cursor:pointer;">Amendments</a>
                                                <a class="dropdown-item" onclick="ContractModificationType('Extension');" style="cursor:pointer;">Extension</a>
                                                <a class="dropdown-item" onclick="ContractModificationType('Termination');" style="cursor:pointer;">Termination</a>
                                            </div>
                                            <span id="ModificationButton" style="font-size:12px;"></span>
                                        }

                                    }
                                    @if (User.IsInRole("approver") || User.IsInRole("legal"))
                                    {
                                        string Id = Request.Url.AbsoluteUri.Split('/').Last();
                                        string emp = CurrentUserLoggedID;
                                        if (Model.Contract.Where(x => x.ContractID.ToString() == Id).Where(x => x.NextApprover.ToString() == emp).Where(x => x.Status == "Pending Approval").Any())
                                        {
                                            @Html.Raw("&nbsp;")<button class="btn btn-light btn-xs" id="Approve" title="Approve" data-toggle="modal" data-target="#ApproveModal"><i class="flaticon-success" aria-hidden="true"></i>&nbsp; Approve</button>
                                            @Html.Raw("&nbsp;")<button class="btn btn-light btn-xs" id="Reject" title="Reject" data-toggle="modal" data-target="#RejectAndAssignModal"><i class="flaticon-error" aria-hidden="true"></i>&nbsp; Reject </button>
                                            if (User.IsInRole("legal"))
                                            {
                                                @Html.Raw("&nbsp;")<button type="button" id="Edit" title="Edit" class="btn btn-xs btn-light"> <i class="flaticon-pencil" aria-hidden="true"></i>&nbsp;Edit</button>

                                                <span id="Save_2" style="display:none;">&nbsp;</span><button type="button" title="Save" class="btn btn-xs btn-light" id="Save" onclick="SaveVariableData();" style="display:none;color:green;"><i class="flaticon-success" aria-hidden="true"></i>&nbsp;&nbsp;Save</button>
                                                <span id="Cancel_2" style="display:none;">&nbsp;</span><button type="button" title="Cancel" class="btn btn-light btn-xs" id="Cancel" style="display:none;color:red;"><i class="flaticon-error" aria-hidden="true"></i>&nbsp; Cancel</button>
                                            }
                                        }

                                    }
                                    &nbsp;<button class="btn btn-xs btn-light" title="History" data-toggle="modal" data-target="#LogModel"><i class="flaticon-clock-1" aria-hidden="true"></i>&nbsp;&nbsp;History</button>

                                </div>
                            </div>

                        </div>

                        <div class="card-body">

                            <div class="row justify-content-center">
                                <div class="col-lg-10">

                                    <div class="table-responsive">
                                        <table class="table table-bordered">
                                            <thead style="background-color:#ebebeb;">
                                                <tr>
                                                    <th><center>Required Attributes</center></th>
                                                    <th><center>Values</center></th>
                                                </tr>
                                            </thead>

                                            <tbody>
                                                <tr>
                                                    <td class="Variable_Name">Duration from</></td>
                                                    <td>
                                                        <div class="input-group date" id="datetimepicker7" data-target-input="nearest">
                                                            <input type="text" maxlength="50" id="Variable_DurationFrom" class="form-control datetimepicker-input Variable_Value" onkeyup="DurationFromTest();" disabled data-target="#datetimepicker7" />
                                                            <div class="input-group-append" data-target="#datetimepicker7" data-toggle="datetimepicker">
                                                                <div class="input-group-text"><i class="fa fa-calendar-alt"></i></div>
                                                            </div>
                                                        </div>
                                                        @*<input type="date" id="Variable_DuratioFrom" class="Variable_Value" style="height:30px;" onkeyup="test('Variable_DurationTo', 'Duration to');" />*@
                                                    </td>

                                                </tr>
                                                <tr>
                                                    <td class="Variable_Name">Duration to</td>
                                                    <td>
                                                        <div class="input-group date" id="datetimepicker8" data-target-input="nearest">
                                                            <input type="text" maxlength="50" id="Variable_DurationTo" class="form-control datetimepicker-input Variable_Value" disabled onkeyup="this.value = this.value.replace(/[^0-9/]/g, '');" data-target="#datetimepicker8" />
                                                            <div class="input-group-append" data-target="#datetimepicker8" data-toggle="datetimepicker">
                                                                <div class="input-group-text"><i class="fa fa-calendar-alt"></i></div>
                                                            </div>
                                                        </div>
                                                        @*<input type="date" id="Variable_DurationTo" class="Variable_Value" style="height:30px;" onkeyup="test('Variable_DurationTo', 'Duration to');" />*@
                                                    </td>

                                                </tr>
                                                <tr>
                                                    <td><label class="Variable_Name">Vendor Name</label></td>
                                                    @*<td><input type="text" id="Variable_VendorName" class="form-control Variable_Value" required /></td>*@
                                                    <td>
                                                        <input type="text" maxlength="180" id="Variable_VendorName" list="Datalist_VendorName" disabled onkeyup=" this.value = this.value.replace(/[^a-zA-Z\s]/g, '');" class="form-control Variable_Value" />

                                                        <datalist id="Datalist_VendorName">
                                                        </datalist>
                                                    </td>
                                                </tr>
                                                <tr>
                                                    <td><label class="Variable_Name">Vendor GSTN</label></td>
                                                    @*<td><input type="text" id="Variable_VendorCIN" class="form-control Variable_Value" required /></td>*@
                                                    <td>
                                                        <input type="text" maxlength="180" id="Variable_VendorGSTN" list="Datalist_VendorGSTN" disabled onkeyup=" this.value = this.value.replace(/[^A-Za-z0-9\s]/g, '');" class="form-control Variable_Value" />
                                                        <datalist id="Datalist_VendorGSTN">
                                                        </datalist>
                                                    </td>
                                                </tr>
                                                <tr>
                                                    <td><label class="Variable_Name">Authorised Signatory</label></td>
                                                    <td><input type="text" maxlength="180" id="Variable_Signatory" onkeyup=" this.value = this.value.replace(/[^a-zA-Z\s]/g, '');" class="form-control Variable_Value" disabled required /></td>
                                                </tr>
                                                <tr>
                                                    <td><label class="Variable_Name">Registered Address</label></td>
                                                    <td><input type="text" maxlength="1800" id="Variable_Address" onkeyup=" this.value = this.value.replace(/[^a-zA-Z0-9\s.,#]/g, '');" class="form-control Variable_Value" disabled required /></td>
                                                </tr>


                                            </tbody>
                                        </table>
                                    </div>
                                </div>
                            </div>

                            @{
                                string id = Request.Url.AbsoluteUri.Split('/').Last();
                                var VariableList = Model.VariableDatas.Where(x => x.TypeID.ToString() == id).Where(x => x.Type == "Contract").Where(x => x.Version == "Contract");
                                foreach (var eachVariabe in VariableList)
                                {
                                    if (eachVariabe.Variable == "Duration from")
                                    {
                                        <script> document.getElementById("Variable_DurationFrom").value = "@eachVariabe.Value"</script>
                                    }
                                    else if (eachVariabe.Variable == "Duration to")
                                    {
                                        <script> document.getElementById("Variable_DurationTo").value = "@eachVariabe.Value"</script>
                                    }
                                    else if (eachVariabe.Variable == "Vendor Name")
                                    {
                                        <script> document.getElementById("Variable_VendorName").value = "@eachVariabe.Value" </script>

                                    }
                                    else if (eachVariabe.Variable == "Vendor GSTN")
                                    {
                                        <script> document.getElementById("Variable_VendorGSTN").value = "@eachVariabe.Value"</script>
                                    }
                                    else if (eachVariabe.Variable == "Authorised Signatory")
                                    {
                                        <script> document.getElementById("Variable_Signatory").value = "@Html.Raw(eachVariabe.Value.Replace(":"," ").Replace("\n", "<br/>"))"</script>
                                    }
                                    else if (eachVariabe.Variable == "Registered Address")
                                    {
                                        <script> document.getElementById("Variable_Address").value = "@Html.Raw(eachVariabe.Value.Replace(":"," ").Replace("\n", "<br/>"))"</script>
                                    }
                                }
                            }


                        </div>
                    </div>
                </div>
            </div>
            <br />
            <br />
            @{
                string TemId = Request.Url.AbsoluteUri.Split('/').Last();
                <div class="row" style="padding-left:2px; padding-right:2px;">
                    <div class="col-sm-12">
                        <div class="card">
                            <div class="card-header">
                                <h3><b>Comments</b></h3>
                            </div>
                            <div class="card-body">
                                <div class="row">

                                    <div class="col-sm-12">
                                        <div class="table-responsive">
                                            <table id="ApproversTable" class="display table table-bordered appoverTabel">
                                                <thead>
                                                    <tr>
                                                        <th width="10%"><center>Role</center></th>
                                                        <th width="15%"><center>Employee ID</center></th>
                                                        <th width="25%"><center>Employee Name</center></th>
                                                        <th width="50%"><center>Comments</center></th>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                    @if (Model.Contract.Where(x => x.ContractID.ToString() == TemId).Where(x => x.InitiatorStatus != null).Any())
                                                    {
                                                        <tr>
                                                            <td>Initiator</td>
                                                            <td>@Model.Contract.Where(x => x.ContractID.ToString() == TemId).First().Initiator</td>
                                                            <td id="Initiator_name"></td>
                                                            <td>@Model.Contract.Where(x => x.ContractID.ToString() == TemId).First().InitiatorComments</td>
                                                        </tr>
                                                    }
                                                    @if (Model.Contract.Where(x => x.ContractID.ToString() == TemId).Where(x => x.Approver1Status != null).Any())
                                                    {
                                                        <tr>
                                                            <td>Approver 1</td>
                                                            <td>@Model.Contract.Where(x => x.ContractID.ToString() == TemId).First().Approver1ID</td>
                                                            <td id="Approver1_name"></td>
                                                            <td>@Model.Contract.Where(x => x.ContractID.ToString() == TemId).First().Approver1Comments</td>
                                                        </tr>
                                                    }
                                                    @if (Model.Contract.Where(x => x.ContractID.ToString() == TemId).Where(x => x.Approver2Status != null).Any())
                                                    {
                                                        <tr>
                                                            <td>Approver 2</td>
                                                            <td>@Model.Contract.Where(x => x.ContractID.ToString() == TemId).First().Approver2ID</td>
                                                            <td id="Approver2_name"></td>
                                                            <td>@Model.Contract.Where(x => x.ContractID.ToString() == TemId).First().Approver2Comments</td>
                                                        </tr>
                                                    }
                                                    @if (Model.Contract.Where(x => x.ContractID.ToString() == TemId).Where(x => x.Approver3Status != null).Any())
                                                    {
                                                        <tr>
                                                            <td>Approver 3</td>
                                                            <td>@Model.Contract.Where(x => x.ContractID.ToString() == TemId).First().Approver3ID</td>
                                                            <td id="Approver3_name"></td>
                                                            <td>@Model.Contract.Where(x => x.ContractID.ToString() == TemId).First().Approver3Comments</td>
                                                        </tr>
                                                    }
                                                    @if (Model.Contract.Where(x => x.ContractID.ToString() == TemId).Where(x => x.Approver4Status != null).Any())
                                                    {
                                                        <tr>
                                                            <td>Approver 4</td>
                                                            <td>@Model.Contract.Where(x => x.ContractID.ToString() == TemId).First().Approver4ID</td>
                                                            <td id="Approver4_name"></td>
                                                            <td>@Model.Contract.Where(x => x.ContractID.ToString() == TemId).First().Approver4Comments</td>
                                                        </tr>
                                                    }
                                                    @if (Model.Contract.Where(x => x.ContractID.ToString() == TemId).Where(x => x.Approver5Status != null).Any())
                                                    {
                                                        <tr>
                                                            <td>Approver 5</td>
                                                            <td>@Model.Contract.Where(x => x.ContractID.ToString() == TemId).First().Approver5ID</td>
                                                            <td id="Approver5_name"></td>
                                                            <td>@Model.Contract.Where(x => x.ContractID.ToString() == TemId).First().Approver5Comments</td>
                                                        </tr>
                                                    }
                                                    @if (Model.Contract.Where(x => x.ContractID.ToString() == TemId).Where(x => x.Approver6Status != null).Any())
                                                    {
                                                        <tr>
                                                            <td>Approver 6</td>
                                                            <td>@Model.Contract.Where(x => x.ContractID.ToString() == TemId).First().Approver6ID</td>
                                                            <td id="Approver6_name"></td>
                                                            <td>@Model.Contract.Where(x => x.ContractID.ToString() == TemId).First().Approver6Comments</td>
                                                        </tr>
                                                    }

                                                    @if (Model.Contract.Where(x => x.ContractID.ToString() == TemId).Where(x => x.Approver7Status != null).Any())
                                                    {
                                                        <tr>
                                                            <td>Approver 7</td>
                                                            <td>@Model.Contract.Where(x => x.ContractID.ToString() == TemId).First().Approver7ID</td>
                                                            <td id="Approver7_name"></td>
                                                            <td>@Model.Contract.Where(x => x.ContractID.ToString() == TemId).First().Approver7Comments</td>
                                                        </tr>
                                                    }
                                                    @if (Model.Contract.Where(x => x.ContractID.ToString() == TemId).Where(x => x.Approver8Status != null).Any())
                                                    {
                                                        <tr>
                                                            <td>Approver 8</td>
                                                            <td>@Model.Contract.Where(x => x.ContractID.ToString() == TemId).First().Approver8ID</td>
                                                            <td id="Approver8_name"></td>
                                                            <td>@Model.Contract.Where(x => x.ContractID.ToString() == TemId).First().Approver8Comments</td>
                                                        </tr>
                                                    }
                                                    @if (Model.Contract.Where(x => x.ContractID.ToString() == TemId).Where(x => x.Approver9Status != null).Any())
                                                    {
                                                        <tr>
                                                            <td>Approver 9</td>
                                                            <td>@Model.Contract.Where(x => x.ContractID.ToString() == TemId).First().Approver9ID</td>
                                                            <td id="Approver9_name"></td>
                                                            <td>@Model.Contract.Where(x => x.ContractID.ToString() == TemId).First().Approver9Comments</td>
                                                        </tr>
                                                    }
                                                    @if (Model.Contract.Where(x => x.ContractID.ToString() == TemId).Where(x => x.Approver10Status != null).Any())
                                                    {
                                                        <tr>
                                                            <td>Approver 10</td>
                                                            <td>@Model.Contract.Where(x => x.ContractID.ToString() == TemId).First().Approver10ID</td>
                                                            <td id="Approver10_name"></td>
                                                            <td>@Model.Contract.Where(x => x.ContractID.ToString() == TemId).First().Approver10Comments</td>
                                                        </tr>
                                                    }
                                                </tbody>
                                            </table>

                                        </div>
                                    </div>

                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
            @*<br />*@

            @*@{
                string ID = Request.Url.AbsoluteUri.Split('/').Last();
                string Emp = CurrentUserID();
                if ((Model.Contract.Where(x => x.ContractID.ToString() == ID).Where(x => x.Status == "In Effect").Any()) || (Model.Contract.Where(x => x.ContractID.ToString() == ID).Where(x => x.Status == "Expired").Any()))
                {
                    <div class="row">
                        <div class="col-sm-12">
                            <div class="card">
                                <div class="card-header">
                                    <div class="row align-items-center form-inline">
                                        <div class="col-sm-5">
                                            <h2><b>Physical Verification</b></h2>
                                        </div>

                                        <div class="col-sm-4">
                                            @{
                                                if (!string.IsNullOrWhiteSpace(Model.Contract.Where(x => x.ContractID.ToString() == ID).First().PhysicalCopyLocation))
                                                {
                                                    <h4><span style="color:green"><i class="flaticon-success" aria-hidden="true"></i></span><span>&nbsp;&nbsp;<b>Verified</b></span></h4>
                                                }
                                                else
                                                {
                                                    <h4><span style="color:red"><i class="flaticon-error" aria-hidden="true"></i></span><span>&nbsp;&nbsp;<b>Not Verified</b></span></h4>
                                                }
                                            }
                                        </div>
                                        <div class="col-sm-3 text-left">
                                            <div class="row">

                                                <div class="col-sm-12 text-left">
                                                    <label>
                                                        <b>Last Verified By :</b>&nbsp;&nbsp;
                                                        @try
                                                        {
                                                            @Model.Contract.Where(x => x.ContractID.ToString() == ID).Where(x => x.Status == "In Effect" || x.Status == "Expired").First().ReviewerID<span id="Reviewer_Name"></span>
                                                        }
                                                        catch { }
                                                    </label>

                                                </div>
                                            </div>
                                            <div class="row">
                                                <div class="col-sm-12 text-left">
                                                    <label>
                                                        <b>Last Verified On :</b> &nbsp;&nbsp; @try
                                                        {
                                                            @Model.Contract.Where(x => x.ContractID.ToString() == ID).Where(x => x.Status == "In Effect" || x.Status == "Expired").First().ReviewedOn
                                                        }
                                                        catch { }
                                                    </label>
                                                </div>

                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <div class="card-body">


                                    @if (User.IsInRole("reviewer"))
                                    {

                                        <div class="row">
                                            <div class="col-sm-12">
                                                <div class="card">
                                                    <div class="card-header">
                                                        <div class="row align-items-center">
                                                            <div class="col-sm-6">
                                                                <h3><b>Add Comments</b></h3>
                                                            </div>
                                                            <div class="col-sm-6 text-right">
                                                                <button type="button" class="btn btn-sm btn-success" onclick="savereview();" style="width:120px;"><b>Save Comments</b></button>
                                                                &nbsp;<button type="button" class="btn btn-sm btn-danger" onclick="window.location.reload();" style="width:120px;"><b>Discard Comments</b></button>

                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="card-body">
                                                        <div class="row">

                                                            <div class="col-sm-12">
                                                                <div class="table-responsive">
                                                                    <table id="ApproversTable" class="display table table-bordered appoverTabel">
                                                                        <thead>
                                                                            <tr>
                                                                                <th><center>Physical Document Location</center></th>
                                                                                <th><center>Reviewer Comments</center></th>
                                                                            </tr>
                                                                        </thead>
                                                                        <tbody>
                                                                            <tr>
                                                                                <td width="40%">
                                                                                    <textarea rows="4" class="text_area form-control Variable_textarea copyverified" id="physicalcopy_Location"></textarea>
                                                                                </td>
                                                                                <td width="60%">
                                                                                    <textarea rows="4" class="text_area form-control Variable_textarea copyverified" id="physicalcopy_Comments"></textarea>

                                                                                </td>
                                                                            </tr>
                                                                        </tbody>
                                                                    </table>

                                                                </div>
                                                            </div>

                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <br />
                                    }

                                    <div class="row">

                                        <div class="col-sm-12">
                                            <div class="table-responsive">
                                                <table id="ApproversTable" class="display table table-bordered appoverTabel">
                                                    <thead>
                                                        <tr>
                                                            <th width="40%"><center>Physical Document Location</center></th>
                                                            <th width="60%"><center>Reviewer Comments</center></th>
                                                        </tr>
                                                    </thead>
                                                    <tbody>
                                                        <tr>

                                                            <td>@try
                                                            {@Html.Raw(Model.Contract.Where(x => x.ContractID.ToString() == ID).Where(x => x.Status == "In Effect" || x.Status == "Expired").First().PhysicalCopyLocation)}
                                                        catch { }</td>
                                                            <td>@try
                                                            {@Html.Raw(Model.Contract.Where(x => x.ContractID.ToString() == ID).Where(x => x.Status == "In Effect" || x.Status == "Expired").First().ReviewedComments)}
                                                        catch { }</td>


                                                        </tr>
                                                    </tbody>
                                                </table>

                                            </div>
                                        </div>

                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            }*@
        </div>
    </div>
</div>

<div class="modal fade" id="AttachmentModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" style="max-width:45%" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <label style="font-size: 20px !important;"><b>Supporting Documents</b></label>
                <button data-dismiss="modal" class="modaldismissarrow text-right btn btn-sm btn-light btn_close"title="Close">Close</button>
            </div>

            <div class="modal-body">
                <div class="row">
                    <div class="col-lg-12">
                        <center><h3><b id="UsererrorCode"></b></h3></center>
                    </div>
                </div>
                <br />
                <div class="row">
                    <div class="col-lg-12">
                        <div class="table-responsive">
                            <table id="Approvers_Table" class="display table table-bordered  appoverTabel">
                                <thead>
                                    <tr>
                                        <th><center>Sl. No</center></th>
                                        <th>
                                            @{string Sid1 = Request.Url.AbsoluteUri.Split('/').Last();
                                                if ((Model.Contract.Where(x => x.ContractID.ToString() == Sid1).Where(x => x.Initiator == CurrentLoggedUserID).ToList().Count > 0) && ((Model.Contract.Where(x => x.ContractID.ToString() == Sid1).Where(x => x.Status == "Draft" || x.Status == "Rejected").ToList().Count > 0)))
                                                {


                                                    <center> Browse </center>
                                                }

                                                else
                                                {
                                                    <center> Files </center>
                                                } }
                                        </th>
                                        @{
                                            string Sid = Request.Url.AbsoluteUri.Split('/').Last();
                                            if (Model.Contract.Where(x => x.ContractID.ToString() == Sid).Where(x => x.Initiator == CurrentLoggedUserID).ToList().Count > 0)
                                            {
                                                if ((Model.Contract.Where(x => x.ContractID.ToString() == Sid).Where(x => x.Status == "Draft" || x.Status == "Rejected").ToList().Count > 0))
                                                {
                                                    <th><center>Upload / Remove</center></th>
                                                }
                                            }
                                        }
                                    </tr>
                                </thead>
                                <tbody id="tblUsersSearchList">
                                    <tr>
                                        <td>1</td>
                                        <td>
                                            @{

                                                // string Sid = Request.Url.AbsoluteUri.Split('/').Last();
                                                if (Model.Contract.Where(x => x.ContractID.ToString() == Sid).Where(x => x.Initiator == CurrentLoggedUserID).ToList().Count > 0)
                                                {
                                                    if ((Model.Contract.Where(x => x.ContractID.ToString() == Sid).Where(x => x.Status == "Draft" || x.Status == "Rejected").ToList().Count > 0))
                                                    {

                                                        <input type="file" id="SupportingDocs1" />
                                                    }
                                                }


                                                using (Html.BeginForm("DownloadSupportingFiles1", "Contract", FormMethod.Post))
                                                {
                                                    <button type="submit" class="btn btn-sm btn-primary btn-link" id="Download1" style="display:none; font-size:14px;"></button>
                                                    <input type="hidden" class="hiddenContractID" name="ContractId" id="hiddenContractID1" />

                                                }

                                            }

                                        </td>
                                        @{
                                            // string Sid = Request.Url.AbsoluteUri.Split('/').Last();
                                            if (Model.Contract.Where(x => x.ContractID.ToString() == Sid).Where(x => x.Initiator == CurrentLoggedUserID).ToList().Count > 0)
                                            {
                                                if ((Model.Contract.Where(x => x.ContractID.ToString() == Sid).Where(x => x.Status == "Draft" || x.Status == "Rejected").ToList().Count > 0))
                                                {
                                                    <td>
                                                        <center>
                                                            <button type="button" class="btn btn-sm btn-primary" id="Upload1" onclick="uploadfile1(1,'SupportingDocs1')" style="display:none;"><i class="flaticon-archive" aria-hidden="true"></i>&nbsp; Upload</button>

                                                            &nbsp;<button type="button" class="btn btn-sm btn-danger" id="Delete1" style="display:none;" onclick="deletefile1(1)"><i class="flaticon-interface-5" aria-hidden="true"></i>&nbsp; Remove</button>
                                                        </center>
                                                    </td>
                                                }
                                            }
                                        }


                                    </tr>
                                    <tr>
                                        <td>2</td>
                                        <td>


                                            @{

                                                // string Sid = Request.Url.AbsoluteUri.Split('/').Last();
                                                if (Model.Contract.Where(x => x.ContractID.ToString() == Sid).Where(x => x.Initiator == CurrentLoggedUserID).ToList().Count > 0)
                                                {
                                                    if ((Model.Contract.Where(x => x.ContractID.ToString() == Sid).Where(x => x.Status == "Draft" || x.Status == "Rejected").ToList().Count > 0))
                                                    {

                                                        <input type="file" id="SupportingDocs2" />
                                                    }
                                                }


                                                using (Html.BeginForm("DownloadSupportingFiles2", "Contract", FormMethod.Post))
                                                {
                                                    <button type="submit" class="btn btn-sm btn-primary btn-link" id="Download2" style="display:none; font-size:14px;"></button>
                                                    <input type="hidden" class="hiddenContractID" name="ContractId" id="hiddenContractID2" />

                                                }

                                            }
                                        </td>
                                        @{
                                            // string Sid = Request.Url.AbsoluteUri.Split('/').Last();
                                            if (Model.Contract.Where(x => x.ContractID.ToString() == Sid).Where(x => x.Initiator == CurrentLoggedUserID).ToList().Count > 0)
                                            {
                                                if ((Model.Contract.Where(x => x.ContractID.ToString() == Sid).Where(x => x.Status == "Draft" || x.Status == "Rejected").ToList().Count > 0))
                                                {

                                                    <td>
                                                        <center>
                                                            <button type="button" class="btn btn-sm btn-primary" id="Upload2" onclick="uploadfile1(2,'SupportingDocs2')" style="display:none;"><i class="flaticon-archive" aria-hidden="true"></i>&nbsp; Upload</button>
                                                            &nbsp;<button type="button" class="btn btn-sm btn-danger" id="Delete2" style="display:none;" onclick="deletefile1(2)"><i class="flaticon-interface-5" aria-hidden="true"></i>&nbsp; Remove</button>
                                                        </center>
                                                    </td>
                                                }
                                            }
                                        }
                                    </tr>


                                    <tr>
                                        <td>3</td>
                                        <td>



                                            @{

                                                // string Sid = Request.Url.AbsoluteUri.Split('/').Last();
                                                if (Model.Contract.Where(x => x.ContractID.ToString() == Sid).Where(x => x.Initiator == CurrentLoggedUserID).ToList().Count > 0)
                                                {
                                                    if ((Model.Contract.Where(x => x.ContractID.ToString() == Sid).Where(x => x.Status == "Draft" || x.Status == "Rejected").ToList().Count > 0))
                                                    {

                                                        <input type="file" id="SupportingDocs3" />
                                                    }
                                                }


                                                using (Html.BeginForm("DownloadSupportingFiles3", "Contract", FormMethod.Post))
                                                {
                                                    <button type="submit" class="btn btn-sm btn-primary btn-link" id="Download3" style="display:none; font-size:14px;"></button>
                                                    <input type="hidden" class="hiddenContractID" name="ContractId" id="hiddenContractID3" />

                                                }

                                            }
                                        </td>

                                        @{
                                            //string Sid = Request.Url.AbsoluteUri.Split('/').Last();
                                            if (Model.Contract.Where(x => x.ContractID.ToString() == Sid).Where(x => x.Initiator == CurrentLoggedUserID).ToList().Count > 0)
                                            {
                                                if ((Model.Contract.Where(x => x.ContractID.ToString() == Sid).Where(x => x.Status == "Draft" || x.Status == "Rejected").ToList().Count > 0))
                                                {
                                                    <td>
                                                        <center>
                                                            <button type="button" class="btn btn-sm btn-primary" id="Upload3" onclick="uploadfile1(3,'SupportingDocs3')" style="display:none;"><i class="flaticon-archive" aria-hidden="true"></i>&nbsp; Upload</button>
                                                            &nbsp;<button type="button" class="btn btn-sm btn-danger" id="Delete3" style="display:none;" onclick="deletefile1(3)"><i class="flaticon-interface-5" aria-hidden="true"></i>&nbsp; Remove</button>
                                                        </center>
                                                    </td>
                                                }
                                            }
                                        }

                                    </tr>


                                    <tr>
                                        <td>4</td>
                                        <td>

                                            @{

                                                //string Sid = Request.Url.AbsoluteUri.Split('/').Last();
                                                if (Model.Contract.Where(x => x.ContractID.ToString() == Sid).Where(x => x.Initiator == CurrentLoggedUserID).ToList().Count > 0)
                                                {
                                                    if ((Model.Contract.Where(x => x.ContractID.ToString() == Sid).Where(x => x.Status == "Draft" || x.Status == "Rejected").ToList().Count > 0))
                                                    {

                                                        <input type="file" id="SupportingDocs4" />
                                                    }
                                                }


                                                using (Html.BeginForm("DownloadSupportingFiles4", "Contract", FormMethod.Post))
                                                {
                                                    <button type="submit" class="btn btn-sm btn-primary btn-link" id="Download4" style="display:none; font-size:14px;"></button>
                                                    <input type="hidden" class="hiddenContractID" name="ContractId" id="hiddenContractID4" />

                                                }

                                            }
                                        </td>

                                        @{
                                            // string Sid = Request.Url.AbsoluteUri.Split('/').Last();
                                            if (Model.Contract.Where(x => x.ContractID.ToString() == Sid).Where(x => x.Initiator == CurrentLoggedUserID).ToList().Count > 0)
                                            {
                                                if ((Model.Contract.Where(x => x.ContractID.ToString() == Sid).Where(x => x.Status == "Draft" || x.Status == "Rejected").ToList().Count > 0))
                                                {
                                                    <td>
                                                        <center>
                                                            <button type="button" class="btn btn-sm btn-primary" id="Upload4" onclick="uploadfile1(4,'SupportingDocs4')" style="display:none;"><i class="flaticon-archive" aria-hidden="true"></i>&nbsp; Upload</button>
                                                            &nbsp;<button type="button" class="btn btn-sm btn-danger" id="Delete4" style="display:none;" onclick="deletefile1(4)"><i class="flaticon-interface-5" aria-hidden="true"></i>&nbsp; Remove</button>
                                                        </center>
                                                    </td>
                                                }
                                            }
                                        }


                                    </tr>

                                    <tr>
                                        <td>5</td>
                                        <td>


                                            @{

                                                //  string Sid = Request.Url.AbsoluteUri.Split('/').Last();
                                                if (Model.Contract.Where(x => x.ContractID.ToString() == Sid).Where(x => x.Initiator == CurrentLoggedUserID).ToList().Count > 0)
                                                {
                                                    if ((Model.Contract.Where(x => x.ContractID.ToString() == Sid).Where(x => x.Status == "Draft" || x.Status == "Rejected").ToList().Count > 0))
                                                    {

                                                        <input type="file" id="SupportingDocs5" />
                                                    }
                                                }


                                                using (Html.BeginForm("DownloadSupportingFiles5", "Contract", FormMethod.Post))
                                                {
                                                    <button type="submit" class="btn btn-sm btn-primary btn-link" id="Download5" style="display:none; font-size:14px;"></button>
                                                    <input type="hidden" class="hiddenContractID" name="ContractId" id="hiddenContractID5" />

                                                }

                                            }
                                        </td>
                                        @{
                                            //string Sid = Request.Url.AbsoluteUri.Split('/').Last();
                                            if (Model.Contract.Where(x => x.ContractID.ToString() == Sid).Where(x => x.Initiator == CurrentLoggedUserID).ToList().Count > 0)
                                            {
                                                if ((Model.Contract.Where(x => x.ContractID.ToString() == Sid).Where(x => x.Status == "Draft" || x.Status == "Rejected").ToList().Count > 0))
                                                {
                                                    <td>
                                                        <center>
                                                            <button type="button" class="btn btn-sm btn-primary" id="Upload5" onclick="uploadfile1(5,'SupportingDocs5')" style="display:none;"><i class="flaticon-archive" aria-hidden="true"></i>&nbsp; Upload</button>
                                                            &nbsp;<button type="button" class="btn btn-sm btn-danger" id="Delete5" style="display:none;" onclick="deletefile1(5)"><i class="flaticon-interface-5" aria-hidden="true"></i>&nbsp; Remove</button>
                                                        </center>
                                                    </td>
                                                }
                                            }
                                        }

                                    </tr>
                                </tbody>
                            </table>

                        </div>
                    </div>
                </div>


            </div>

        </div>
    </div>
</div>


<div class="modal fade" id="LogModel" role="dialog" tabindex="-1">
    @*<div class="text-right model_body_position">
            <a href="" data-dismiss="modal" class="modaldismissarrow"><i class="flaticon-error fa-3x " aria-hidden="true"></i></a>
        </div>*@

    <div class="modal-dialog" style="max-width: 80%;">
        <div class="modal-content">
            <div class="modal-header modalheadercolor websitecolour">
                <label style="font-size: 20px !important;"><b>Contract Modified History</b></label>
                <button data-dismiss="modal" class="modaldismissarrow text-right btn btn-sm btn-light btn_close"title="Close">Close</button>

            </div>
            <div class="modal-body" style="height:450px; overflow: auto;">
                <div class="row">
                    <div class="col-lg-12">
                        <div class="tableFixHead_LogHistory">
                            <table class="table table-bordered">

                                <thead>

                                    <tr>
                                        <th><center>Date and Time</center></th>
                                        <th><center>Modified By</center></th>
                                        <th><center>Activity</center></th>
                                        <th><center>Changed From</center></th>
                                        <th><center>Changed To</center></th>

                                    </tr>

                                </thead>

                                <tbody id="tblContractLogList">
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>

                @*<hr />

                    <div class="card-action text-right card_footer_button">
                        <input type="submit" class="btn btn-success" value="Select" id="CaptureHodList">
                        <input type="button" class="btn btn-danger" data-dismiss="modal" value="Cancel" />

                    </div>*@
            </div>
        </div>

    </div>
</div>
<div class="modal fade" id="ApproveModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <label style="font-size: 20px !important;"><b>Comments<span class="asteriskicon" style="color:red;"> *</span></b></label>
            </div>

            <div class="modal-body">
                <div class="row">
                    <div class="col-sm-12">
                        <div class="form-group">
                            @*<h6><i>Approver</i><span class="asteriskicon" style="color:red;"> *</span></h6>*@
                            <textarea id="ApproveComment" maxlength="1800" placeholder="Enter the Comments here" class="text_area form-control"></textarea>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button class="btn btn-danger" type="button" id="Approve_Cancel"><i class="flaticon-error" aria-hidden="true"></i>&nbsp;&nbsp;Cancel</button>
                <button class="btn btn-success" data-dismiss="modal" id="ApproveButton" onclick="Approve();" disabled><i class="flaticon-success" aria-hidden="true"></i>&nbsp;&nbsp;Approve</button>
            </div>

        </div>
    </div>
</div>

<div class="modal fade" id="InitiateModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <label style="font-size: 20px !important;"><b>Comments<span class="asteriskicon" style="color:red;"> *</span></b></label>
            </div>

            <div class="modal-body">
                <div class="row">
                    <div class="col-sm-12">
                        <div class="form-group">
                            @*<h6><i>Approver</i><span class="asteriskicon" style="color:red;"> *</span></h6>*@
                            <textarea id="InitiateComment" maxlength="1800" placeholder="Enter the Comments here" class="text_area form-control"></textarea>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button class="btn btn-danger" type="button" id="Initiate_Cancel"><i class="flaticon-error" aria-hidden="true"></i>&nbsp;&nbsp;Cancel</button>
                <button class="btn btn-success" data-dismiss="modal" id="InitiateButton" onclick="Initiate();" disabled><i class="flaticon-success" aria-hidden="true"></i>&nbsp;&nbsp;Initiate</button>
            </div>

        </div>
    </div>
</div>

<div class="modal fade" id="RejectAndAssignModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <label style="font-size: 20px !important;"><b>Contract Reject and Assign to Initiator</b></label>
            </div>

            <div class="modal-body">

                <div class="row">
                    <div class="col-sm-12">
                        <div class="form-group">
                            @*<h6><i>Approver</i><span class="asteriskicon" style="color:red;"> *</span></h6>*@
                            <h3><b>Comments<span class="asteriskicon" style="color:red;"> *</span></b></h3>
                            <textarea id="RejectComment" maxlength="1800" placeholder="Enter the Comments here" class="text_area form-control"></textarea>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button class="btn btn-danger" type="button" id="Reject_Cancel"><i class="flaticon-error" aria-hidden="true"></i>&nbsp;&nbsp;Cancel</button>
                <button class="btn btn-success" data-dismiss="modal" id="RejectButton" onclick="Reject();" disabled>
                    <i class="flaticon-success" aria-hidden="true"></i>&nbsp;&nbsp;
                    Reject
                </button>
            </div>

        </div>
    </div>
</div>
<div class="modalload"><!-- Place at bottom of page --></div>
<script src="../../Content/assets/js/core/jquery.3.2.1.min.js"></script>
<script src="../../Content/assets/js/core/popper.min.js"></script>
<script src="../../Content/assets/js/plugin/jquery-ui-1.12.1.custom/jquery-ui.min.js"></script>
<script src="../../Content/assets/js/plugin/jquery-ui-touch-punch/jquery.ui.touch-punch.min.js"></script>


<script>
    $(document).ready(function () {

        var url = window.location.href;
        var page = url.split('/');
        var id = page[page.length - 1];
        NameandID = "";

        //alert(id);
        $.ajax({
            type: "POST",
            url: "/Contract/GetContractNameOnID",
            data: { id: id },


            success: function (response) {
                //  alert(response);
                NameandID = id + " - " + response;
                $("#AppendContractName").html(NameandID);

            },
            failure: function (response) {
                alert(response);
            },
            error: function (response) {
                alert(response.responseText);

            }
        });
    });
</script>

<script>
    function SaveVariableData() {

        var url = window.location.href;
        var page = url.split('/');
        var ID = page[page.length - 1];
        var VariableValue = document.getElementsByClassName("Variable_Value");

        var VariableName = document.getElementsByClassName("Variable_Name");
        var arrVariableNames = [];
        for (i = 0; i < VariableName.length; i++) {
            arrVariableNames.push(VariableName[i].innerHTML);
        }
        var arrVariableValues = [];
        for (i = 0; i < VariableValue.length; i++) {
            //  alert(VariableValue[i].value);
            arrVariableValues.push(VariableValue[i].value);
        }


        $.ajax({
            type: "POST",
            url: "/Contract/SaveVariableList",
            traditional: true,

            data: { ID: ID, arrVariableNames: arrVariableNames, arrVariableValues: arrVariableValues },
            //,VariableValue, VariableName },
            //data: JSON.stringify(my_array),//content, ID ,VariableValue, VariableName },

            success: function (response) {
                if (response == "success") {
                    swal("Contract drafted", {
                        icon: "success",
                    }).then(function (result) {
                        if (result) {
                            window.location = '/Contract/ExistingContractView/' + ID;
                        }
                    });
                }
                else {
                    swal("Cancelled", {
                        icon: "error",
                        text: response,
                        //}).then((error) => {
                        //    if (error) {

                        //    }
                    });
                }
            },

            error: function (response) {
                alert(response.responseText);
            }
        });

    }
</script>

<script type="text/javascript">
    $(function () {
        $('#datetimepicker7').datetimepicker({
            format: 'L',
            format: 'DD/MM/YYYY'
        });
    });

    $(function () {
        $('#datetimepicker8').datetimepicker({
            format: 'L',
            format: 'DD/MM/YYYY'
        });
    });
</script>

<script>

    $(document).on('click', '.browse', function () {
        var file = $(this).parent().parent().parent().find('.file');
        file.trigger('click');
    });
    $(document).on('change', '.file', function () {
        $(this).parent().find('.form-control').val($(this).val().replace(/C:\\fakepath\\/i, ''));
        var data = $(this).parent().find('.form-control').val();
        var extension = data.substr(data.lastIndexOf('.') + 1).toLowerCase();

        var allowedExtensions = ['pdf'];
        if (data.length > 0) {
            if (allowedExtensions.indexOf(extension) === -1) {
                //alert('Invalid file Format. Only ' + allowedExtensions.join(', ') + ' are allowed.');
                swal({
                    title: 'Uploading Files',
                    text: 'Invalid file Format. Only ' + allowedExtensions.join(', ') + ' allowed.',
                    icon: "warning",
                });
                $(this).parent().find('.form-control').val('');
                try {
                    $("#uploadFile").hide();
                } catch (error) { }
            }
        }
        else {
            $(this).parent().find('.form-control').val('');

        }
    });

</script>



<script>
    function uploadFile() {
        var url = window.location.href;
        var page = url.split('/');
        var ID = page[page.length - 1];
        $.ajax({
            url: "/Contract/SaveFilesToDB",
            type: "POST",
            data: function () {
                var data = new FormData();
                data.append("ID", ID);
                data.append("UploadExistingFiles", jQuery("#UploadExistingFiles").get(0).files[0]);
                return data;
            }(),
            contentType: false,
            processData: false,
            success: function (response) {
                if (response == "success") {

                    //$("#DownloadFiles").show();
                    swal("File Uploaded", {
                        icon: "success",
                    }).then(function (result) {
                        if (result) {
                            window.location = '/Contract/ExistingContractView/' + ID;
                        }
                    });
                }
                else {
                    swal("Error in Uploading file", {
                        icon: "warning",
                    });
                }
            },
            error: function (jqXHR, textStatus, errorMessage) {
                console.log(errorMessage);
            }
        });
    }
</script>
<script>
    $(".file").change(function () {
        var file = $(".file").val();
        if (file != "") {
            try {
                $("#uploadFile").show();
                $("#DownloadFiles").hide();
            } catch (error) { }
        }
        else {
            try {
                $("#uploadFile").hide();
                $("#DownloadFiles").show();
            } catch (error) { }
        }
    });
</script>
<script>
    $(function () {
        var url = window.location.href;
        var page = url.split('/');
        var ID = page[page.length - 1];
        $("#hiddenContractID").val(ID);

        $.ajax({
            type: "POST",
            url: "/Contract/GetUploadedExistingFileToDownload",
            data: { ID: ID },

            success: function (response) {
                $("#UploadedFileName").val(response);
            }
        });
    });
</script>

<script>
    $(function () {
        $.ajax({
            type: "POST",
            url: "/Contract/GetVendorName",
            data: '{name: "' + $("#txtName").val() + '" }',
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (response) {

                str = "";
                for (var i = 0; i < response.length; ++i) {
                    //alert(response[i]);
                    str += '<option value="' + response[i] + '" />'; // Storing options in variable
                }

                var my_list = document.getElementById("Datalist_VendorName");
                my_list.innerHTML = str;

            }

        });
        $.ajax({
            type: "POST",
            url: "/Contract/GetVendorCIN",
            data: '{name: "' + $("#txtName").val() + '" }',
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (response) {

                str = "";
                for (var i = 0; i < response.length; ++i) {
                    //alert(response[i]);
                    str += '<option value="' + response[i] + '" />'; // Storing options in variable
                }

                var my_list = document.getElementById("Datalist_VendorGSTN");
                my_list.innerHTML = str;

            }

        });
    });

    $("#Variable_VendorName").change(function () {
        var VendorName = this.value;
        $.ajax({
            type: "POST",
            url: "/Contract/GetVendorDetails",
            data: { VendorName: VendorName },


            success: function (response) {
                if (response[0] == "success") {
                    $("#Variable_VendorGSTN").val(response[2]);
                    $("#Variable_Signatory").val(response[3]);
                    $("#Variable_Address").val(response[4]);

                }
            }
        });
    });

    $("#Variable_VendorGSTN").change(function () {
        var VendorCIN = this.value;
        $.ajax({
            type: "POST",
            url: "/Contract/GetVendorDetailsOnCIN",
            data: { VendorCIN: VendorCIN },


            success: function (response) {
                if (response[0] == "success") {
                    $("#Variable_VendorName").val(response[1]);
                    $("#Variable_Signatory").val(response[3]);
                    $("#Variable_Address").val(response[4]);

                }
            }
        });
    });

</script>
<script>
    //Edit button alert design
    $('#Edit').click(function (e) {
        //alert("helo");
        e.preventDefault();
        swal(" Are you sure you want to Edit !", {
            icon: "warning",
           buttons: {
                cancel: {
                    visible: true,
                    text: 'No, Cancel it !',
                    className: 'btn btn-danger'
                },
                confirm: {
                    text: 'Yes, Edit it !',
                    className: 'btn btn-success'
                    //className: 'btn btn-success'
                }
            }
        }).then(function (value) {
            if (value == true) {
                $(".Variable_Value").removeAttr("disabled");
                try {
                    $('#Save').show();
                    $('#Save_2').show();
                    $('#Cancel').show();
                    $('#Cancel_2').show();
                } catch (error) { }
                try {
                    $('#Edit').hide();
                } catch (error) { }
                try {
                    $("#AttachmentButton").hide();
                } catch (error) { }
                try {
                    //document.getElementById("Initiate").disabled = true;
                    $("#Initiate").hide();
                    $("#Initiate_2").hide();
                } catch (error) { }
                try {
                    document.getElementById("Approve").disabled = true;
                    $("#Approve").hide();
                } catch (error) { }
                try {
                    document.getElementById("Reject").disabled = true;
                    $("#Reject").hide();
                } catch (error) { }
                try {
                    document.getElementById("uploadFile").disabled = true;
                } catch (error) { }
                try {
                    document.getElementById("Browse").disabled = true;
                } catch (error) { }

                $("#backicon").hide();
                //$('button').removeAttr('disabled');



            } else {
                //swal("Cancelled", " ", "error");
            }
        });
    });

    $('#Cancel').click(function () {
        var url = window.location.href;
        var page = url.split('/');
        var ID = page[page.length - 1];
        swal({
            title: 'Are you sure?',
            text: "You won't be able to revert this !",
            type: 'warning',
            buttons: {
                cancel: {
                    visible: true,
                    text: 'No',
                    className: 'btn btn-success'
                },
                confirm: {
                    text: 'Yes',
                    className: 'btn btn-danger'
                }
            }
        }).then(function (value) {
            if (value == true) {
                window.location = '/Contract/ExistingContractView/' + ID;
            } else {

            }
        });
    });
</script>

<script>
    function PreviousPage() {
        var url = window.location.href;
        // alert(url);
        url = url.replace("ExistingContractView", "Details");

        //alert(url);
        window.location.href = url;
    }
</script>

<script>
    $(document).ready(function () {
        var url = window.location.href;
        var page = url.split('/');
        var ContractID = page[page.length - 1];
        $.ajax({
            type: "POST",
            url: "/Contract/GetApproverComments",
            data: { ContractID: ContractID },

            success: function (response) {
                if (response[0] == "success") {
                    //  alert(response[1])
                    $("#Initiator_name").html(response[1]);
                    $("#Approver1_name").html(response[2]);
                    $("#Approver2_name").html(response[3]);
                    $("#Approver3_name").html(response[4]);
                    $("#Approver4_name").html(response[5]);
                    $("#Approver5_name").html(response[6]);
                    $("#Approver6_name").html(response[7]);
                    $("#Approver7_name").html(response[8]);
                    $("#Approver8_name").html(response[9]);
                    $("#Approver9_name").html(response[10]);
                    $("#Approver10_name").html(response[11]);
                }
            },

        });
    });
</script>

<script>


   function ContractModificationType(selectedText) {
         //var url = window.location.href;
            //var page = url.split('/');
            //var ContractID = page[page.length - 1];
            //var selectedText = $(this).find("option:selected").text();
            // var TemplateType = $(this).val();
            //alert(selectedText);
            if (selectedText == "Amendments") {
               // var x = '<a href="@Url.Action("ContractDraftExtension", "Contract")" class="btn btn-sm btn-primary">Amendments</a>';
                var x = '&nbsp;<button type="button" class="btn btn-xs btn-light" onclick="SaveModificationContract(this.value);" value="Amendments">Amendments</button>';

                $('#ModificationButton').html(x);
            }

            else if (selectedText == "Extension") {
               // var x = '<a href="@Url.Action("ContractDraftExtension", "Contract")" class="btn btn-sm btn-primary">Extension</a>';
                var x = '&nbsp;<button type="button" class="btn btn-xs btn-light" onclick="SaveModificationContract(this.value);" value="Extension">Extension</button>';

                $('#ModificationButton').html(x);
            }

            else if (selectedText == "Modification") {
               // var x = '<a href="@Url.Action("ContractDraftExtension", "Contract")" class="btn btn-sm btn-primary">Modification</a>';
                var x = '&nbsp;<button type="button" class="btn btn-xs btn-light" onclick="SaveModificationContract(this.value);" value="Modification">Modification</button>';

                $('#ModificationButton').html(x);
            }

            else if (selectedText == "Termination") {
               // var x = '<a href="@Url.Action("ContractDraftExtension", "Contract")" class="btn btn-sm btn-primary">Termination</a>';
                var x = '&nbsp;<button type="button" class="btn btn-xs btn-light" onclick="SaveModificationContract(this.value);" value="Termination">Termination</button>';

                $('#ModificationButton').html(x);
            }

    }
</script>


<script>
    function SaveModificationContract(ModificationType) {
       // var ModificationType = $("#ContractModificationType").val();
        var url = window.location.href;
        var page = url.split('/');
        var ContractID = page[page.length - 1];
        var CurrentUser = @CurrentUserID();
        var VariableValue = document.getElementsByClassName("Variable_Value");
        var VariableName = document.getElementsByClassName("Variable_Name");
        var arrVariableNames = [];
        for (i = 0; i < VariableName.length; i++) {
            arrVariableNames.push(VariableName[i].innerHTML);
        }
        var arrVariableValues = [];
        for (i = 0; i < VariableValue.length; i++) {
            //  alert(VariableValue[i].value);
            arrVariableValues.push(VariableValue[i].value);
        }
        $.ajax({
            type: "POST",
            url: "/Contract/ModificationContract",
            data: { ModificationType: ModificationType, ContractID: ContractID, CurrentUser: CurrentUser, arrVariableNames: arrVariableNames, arrVariableValues: arrVariableValues },

            success: function (response) {
                if (response[0] == "sucess") {
                    window.location = '/Contract/ContractDraftExtension/' + response[1];
                }
                else
                    swal("Error", {
                        icon: "error",
                });
            }
        });

    }
</script>


<script>
    function Initiate() {
        //CKEDITOR.instances.IDofEditor.execCommand('lite-acceptall');
        var content = "";
        var url = window.location.href;
        var page = url.split('/');
        var ID = page[page.length - 1];
        var CurrentUserID = @CurrentUserID();
        var VariableValue = document.getElementsByClassName("Variable_Value");
        var VariableName = document.getElementsByClassName("Variable_Name");
        var arrVariableNames = [];
        for (i = 0; i < VariableName.length; i++) {
            arrVariableNames.push(VariableName[i].innerHTML);
        }
        var arrVariableValues = [];
        for (i = 0; i < VariableValue.length; i++) {
            arrVariableValues.push(VariableValue[i].value);
        }

        var Comments = document.getElementById("InitiateComment").value;
        swal({
            text: "Sure you want to initiate?",
            type: 'warning',
            buttons: {
                cancel: {
                    visible: true,
                    text: 'No, Cancel',
                    className: 'btn btn-danger'
                },
                confirm: {
                    text: 'Yes, Initiate',
                    className: 'btn btn-success'
                }
            }
        }).then(function (value) {
            if (value == true) {
        $.ajax({
            type: "POST",
            url: "/Contract/InitiateContract",
            traditional: true,

            data: { content: content, ID: ID, arrVariableNames: arrVariableNames, arrVariableValues: arrVariableValues, CurrentUserID: CurrentUserID, Comments: Comments },


            success: function (response) {
                if (response == "success") {
                    swal("Initiated", {
                        icon: "success",
                    }).then(function (result) {
                        if (result) {
                            window.location = '/Contract/ExistingContractView/' + ID;
                        }
                    });
                }
                else {
                    swal("Cancelled", {
                        icon: "error",
                        text: response,
                        //}).then((error) => {
                        //    if (error) {

                        //    }
                    });
                }
            }
        });
                } else {

            }
        });
    }

    $("#RejectComment").keyup(function () {
        if ($(this).val() == '') {

        $('#RejectButton').prop('disabled', true);
        }
        else {
                $('#RejectButton').prop('disabled', false);
            }

    });

    $("#ApproveComment").keyup(function () {
        if ($(this).val() == '') {

        $('#ApproveButton').prop('disabled', true);
        }
        else {
                $('#ApproveButton').prop('disabled', false);
            }

    });

    $("#InitiateComment").keyup(function () {
        if ($(this).val() == '') {

        $('#InitiateButton').prop('disabled', true);
        }
        else {
                $('#InitiateButton').prop('disabled', false);
            }

    });

    function Approve() {

        //CKEDITOR.instances.IDofEditor.execCommand('lite-acceptall');
        var content = "";
        var url = window.location.href;
        var page = url.split('/');
        var ID = page[page.length - 1];
        var VariableValue = document.getElementsByClassName("Variable_Value");
        var VariableName = document.getElementsByClassName("Variable_Name");
        var arrVariableNames = [];
        for (i = 0; i < VariableName.length; i++) {
            arrVariableNames.push(VariableName[i].innerHTML);
        }
        var arrVariableValues = [];
        for (i = 0; i < VariableValue.length; i++) {
            arrVariableValues.push(VariableValue[i].value);
        }

        var Comments = document.getElementById("ApproveComment").value;
        swal({
            text: "Sure you want to Approve?",
            type: 'warning',
            buttons: {
                cancel: {
                    visible: true,
                    text: 'No, Cancel',
                    className: 'btn btn-danger'
                },
                confirm: {
                    text: 'Yes, Approve',
                    className: 'btn btn-success'
                }
            }
        }).then(function (value) {
            if (value == true) {
        $.ajax({
            type: "POST",
            url: "/Contract/ApproveContract",
            traditional: true,

            data: { content: content, ID: ID, arrVariableNames: arrVariableNames, arrVariableValues: arrVariableValues, Comments: Comments },


            success: function (response) {
                if (response[0] == "success") {
                    //if (response[1] == "Approved") {
                    //    CKEDITOR.instances.IDofEditor.execCommand('lite-acceptall');
                    //    var finalcontent = CKEDITOR.instances.IDofEditor.getData();
                    //    $.ajax({
                    //        type: "POST",
                    //        url: "/Contract/AcceptChangesLastAprrover",
                    //        data: { ID: ID, finalcontent: finalcontent },

                    //        success: function (response) {

                    //        }
                    //    });
                    //}
                    swal("Approved", {
                        icon: "success",
                    }).then(function (result) {
                        if (result) {
                            window.location = '/Contract/ExistingContractView/' + ID;
                        }
                    });
                }
                else {
                    swal("Cancelled", {
                        icon: "error",
                        text: response,
                    });
                }
            }
        });
                 } else {

            }
        });
    }
</script>

<script>
    //$(document).ready(function () {
    //    var url = window.location.href;
    //    var page = url.split('/');
    //    var id = page[page.length - 1];
    //    $.ajax({
    //        type: "POST",
    //        url: "/Contract/GetPreviousUsers",
    //        data: { id: id },


    //        success: function (response) {
    //            // alert(response);
    //            //alert("Hello: " + response);
    //            var x = document.getElementById("GetPreviousUsersList");
    //            x.innerHTML = "";

    //            $.each(response, function (index, value) {
    //                var option = document.createElement("option");
    //                option.text = value;
    //                x.add(option);
    //            });

    //        }
    //    });
    //});

    function Reject() {
        var url = window.location.href;
        var page = url.split('/');
        var ContractID = page[page.length - 1];
        var Comments = document.getElementById("RejectComment").value;

        //var selectvalue = $("#GetPreviousUsersList").val();
        swal({
            text: "Sure you want to Reject?",
            type: 'warning',
            buttons: {
                cancel: {
                    visible: true,
                    text: 'No, Cancel',
                    className: 'btn btn-success'
                },
                confirm: {
                    text: 'Yes, Reject',
                    className: 'btn btn-danger'
                }
            }
        }).then(function (value) {
            if (value == true) {
                $.ajax({
                    type: "POST",
                    url: "/Contract/AssignToPreviousUser",
                    data: { ContractID: ContractID, Comments: Comments },

                    success: function (response) {
                        if (response == "success") {
                            swal("Rejected", {
                                icon: "success",
                            }).then(function (result) {
                                if (result) {
                                    window.location = '/Contract/ExistingContractView/' + ContractID;
                                }
                            });
                        }
                        else {
                            swal("Cancelled", {
                                icon: "error",
                                text: response,
                                //}).then((error) => {
                                //    if (error) {

                                //    }
                            });
                        }
                    }
                });
            } else {

            }
        });
    }
</script>

<script>
    $(function () {
        // alert("hello");

        var tblLog = "";
        // var ID = $("#hiddenID").val();
        var url = window.location.href;
        var page = url.split('/');
        var ID = page[page.length - 1];
        $.ajax({
            type: "POST",
            url: "/Contract/getLogDetail",
            data: { ID: ID },


            success: function (response) {

                //alert(response.LogUserID);
                $.each($(response), function (index, value) {
                    tblLog = tblLog + '<tr><td><center>' + value.DateandTime + '</center></td><td><center>' + value.ModifiedBy + '</center></td><td style="text-align: left;">' + value.LogActivity + '</td><td style="text-align: left;">' + value.ChangedFrom + '</td><td style="text-align: left;">' + value.ChangedTo + '</td></tr>';
                });
                $("#tblContractLogList").html(tblLog);
            },

        });
    });
</script>
<script>
    function ExtensionPage() {
        var url = window.location.href;
        var page = url.split('/');
        var ID = page[page.length - 1];
        $.ajax({
            type: "POST",
            url: "/Contract/getModificationID",
            data: { ID: ID },

            success: function (response) {
                window.location = "/Contract/ContractDraftExtension/" + response;

            },

        });
    }
</script>

<script>
    function initiate() {

         var DurationFrom = $('#Variable_DurationFrom').val();
        var DurationTo = $('#Variable_DurationTo').val();
        var VendorName = $('#Variable_VendorName').val();
        var VendorCin = $('#Variable_VendorGSTN').val();
        var VendorSign = $('#Variable_Signatory').val();
        var Registered = $("#Variable_Address").val();
        //var supportingdoc1 = $('#Download1').val();
        // var supportingdoc2 = $('#Download2').val();
        // var supportingdoc3 = $('#Download3').val();
        // var supportingdoc4 = $('#Download4').val();
        // var supportingdoc5 = $('#Download5').val();
        //var Allowed = [, 'First Party', 'Duration From', 'Duration To', 'Vendor Name', 'Vendor CIN', 'Atleast One Supporting Document has to be added'];
        var Allowed = [];
         var DownloadFile = "@Model.Contract.Where(x => x.ContractID.ToString() == contractid).First().UploadExistingContractFileName";


        if (DurationFrom.length < 1) {
            Allowed.push('Duration From');
        }
        if (DurationTo.length < 1) {
            Allowed.push('Duration To');
        }
        if (VendorName.length < 1) {
            Allowed.push('Vendor Name');
        }
        if (VendorCin.length < 1) {
            Allowed.push('Vendor GSTN');
        }
        if (VendorSign.length < 1) {
            Allowed.push('Authorised Signatory');
        }
        if (Registered.length < 1) {
            Allowed.push('Registered Address');
        }
       if (DownloadFile.length < 1) {
            // if ((download == "") || (download == "null")) {
            Allowed.push('Upload Existing Contract file');
        }

        if ((($("#Download1").text() == "") || ($("#Download1").text() == "null")) && (($("#Download2").text() == "") || ($("#Download2").text() == "null")) && (($("#Download3").text() == "") || ($("#Download3").text() == "null")) && (($("#Download4").text() == "") || ($("#Download4").text() == "null")) && (($("#Download5").text() == "") || ($("#Download5").text() == "null"))) {
            // if ((download == "") || (download == "null")) {
            Allowed.push('Minimum one Supporting file');
        }

        if (Allowed.length < 1) {
            $("InitiateModal").show();
        }
        else {
            //alert(" The word is Empty Cant be Initiated");
            document.getElementById("Initiate").disabled = true;
            swal({
                title: 'Contract Initiation',
                text: "The " + Allowed.join(', ') + " are required !",
                icon: "warning",
            }).then(function (value) {
                if (value == true) {
                    document.getElementById("Initiate").disabled = false;
                }
            })
        }
    }
</script>


<script>
    $("#Variable_DurationFrom").keyup(function () {
        this.value = this.value.replace(/[^0-9/]/g, '');
    });
</script>

<script>
    //$(".file").change(function () {
    //    var file = $(this).val();
    //    if (file != "") {

    //        $("#uploadFile").show();
    //        try {
    //            $("#DownloadFiles").hide();
    //        } catch (error) { }
    //    }
    //    else {

    //        $("#uploadFile").hide();
    //         try {
    //            $("#DownloadFiles").show();
    //        } catch (error) { }
    //    }
    //});
    $("#SupportingDocs1").change(function () {
        var file = $(this).val();
        if (file != "") {
            $("#Upload1").show();
            $("#Delete1").hide();
            $("#Download1").hide();
        }
    });

    function uploadfile1(Sequence, SupportingDocs) {
        $("#UsererrorCode").css({ "color": "green" });
        $("#UsererrorCode").html("File is uploading. Please wait....");

        var url = window.location.href;
        var page = url.split('/');
        var ID = page[page.length - 1];

        $.ajax({
            url: "/Contract/SaveSupportingFilesToDB",
            type: "POST",
            data: function () {
                var data = new FormData();
                data.append("Sequence", Sequence);
                data.append("ID", ID);
                data.append("SupportingDocs1", jQuery("#" + SupportingDocs).get(0).files[0]);
                return data;
            }(),
            contentType: false,
            processData: false,
            success: function (response) {
                if (response[0] == "success") {
                    //$("#DownloadFiles").show();

                    swal("File Uploaded", {
                        icon: "success",
                    }).then(function (result) {
                        if (result) {
                            $("#UsererrorCode").html("");
                            //window.location = '/Contract/DraftView/' + ID;
                            if (Sequence == 1) {
                                $("#Upload1").hide();
                                $("#Download1").show();
                                $("#Download1").html(response[1]);
                                $("#Delete1").show();
                                $("#SupportingDocs1").val("");
                            }
                            if (Sequence == 2) {
                                $("#Upload2").hide();
                                $("#Download2").show();
                                $("#Download2").html(response[2]);
                                $("#Delete2").show();
                                $("#SupportingDocs2").val("");
                            }
                            if (Sequence == 3) {
                                $("#Upload3").hide();
                                $("#Download3").show();
                                $("#Download3").html(response[3]);
                                $("#Delete3").show();
                                $("#SupportingDocs3").val("");
                            }
                            if (Sequence == 4) {
                                $("#Upload4").hide();
                                $("#Download4").show();
                                $("#Download4").html(response[4]);
                                $("#Delete4").show();
                                $("#SupportingDocs4").val("");
                            }
                            if (Sequence == 5) {
                                $("#Upload5").hide();
                                $("#Download5").show();
                                $("#Download5").html(response[5]);
                                $("#Delete5").show();
                                $("#SupportingDocs5").val("");
                            }
                        }
                    });
                }
                else {
                    $("#UsererrorCode").html("");
                    swal("Error in Uploading file", {
                        icon: "warning",
                    });
                }
            },
            error: function (jqXHR, textStatus, errorMessage) {
                console.log(errorMessage);
            }
        });

    }
    function deletefile1(SupportingDocSequence) {
        swal({
            title: 'Are you sure?',
            text: "You won't be able to revert this !",
            type: 'warning',
            buttons: {
                cancel: {
                    visible: true,
                    text: 'No, Cancel !',
                    className: 'btn btn-success'
                },
                confirm: {
                    text: 'Yes, Remove it!',
                    className: 'btn btn-danger'
                }
            }
        }).then(function (value) {
            if (value == true) {
                $("#UsererrorCode").css({ "color": "red" });
                $("#UsererrorCode").html("File is deleting. Please wait....");
                var url = window.location.href;
                var page = url.split('/');
                var ID = page[page.length - 1];
                $.ajax({
                    url: "/Contract/SupportingDeleteFromDB",
                    type: "POST",
                    data: { SupportingDocSequence: SupportingDocSequence, ID: ID },
                    success: function (response) {
                        if (response == "success") {
                            //$("#DownloadFiles").show();
                            swal("File Deleted", {
                                icon: "success",
                            }).then(function (result) {
                                if (result) {
                                    $("#UsererrorCode").html(" ");
                                    //window.location = '/Contract/DraftView/' + ID;
                                    $("#Download" + SupportingDocSequence).hide();
                                    $("#Download" + SupportingDocSequence).text("");
                                    $("#Upload" + SupportingDocSequence).hide();
                                    $("#SupportingDocs" + SupportingDocSequence).val("");
                                    $("#Delete" + SupportingDocSequence).hide();
                                }
                            });
                        }
                        else {
                            $("#UsererrorCode").html("");
                            swal("Error in deleting file", {
                                icon: "warning",
                            });
                        }
                    },
                    error: function (jqXHR, textStatus, errorMessage) {
                        console.log(errorMessage);
                    }
                });
            } else {
                swal("Your Data is safe", {
                    buttons: {
                        confirm: {
                            className: 'btn btn-success'
                        }
                    }
                });
            }
        });
    }

    $("#SupportingDocs2").change(function () {
        var file = $(this).val();
        if (file != "") {
            $("#Upload2").show();
            $("#Delete2").hide();
            $("#Download2").hide();
        }
    });
    $("#SupportingDocs3").change(function () {
        var file = $(this).val();
        if (file != "") {
            $("#Upload3").show();
            $("#Delete3").hide();
            $("#Download3").hide();
        }
    });
    $("#SupportingDocs4").change(function () {
        var file = $(this).val();
        if (file != "") {
            $("#Upload4").show();
            $("#Delete4").hide();
            $("#Download4").hide();
        }
    });
    $("#SupportingDocs5").change(function () {
        var file = $(this).val();
        if (file != "") {
            $("#Upload5").show();
            $("#Delete5").hide();
            $("#Download5").hide();
        }
    });
</script>

<script>
    $(function () {
        var url = window.location.href;
        var page = url.split('/');
        var ID = page[page.length - 1];
        $(".hiddenContractID").val(ID);
        var File1 = "";
        var File2 = "";
        var File3 = "";
        var File4 = "";
        var File5 = "";
        $.ajax({
            type: "POST",
            url: "/Contract/GetUploadedFileToDownload",
            data: { ID: ID },

            success: function (response) {
                File1 = File1 + response[0];
                File2 = File2 + response[1];
                File3 = File3 + response[2];
                File4 = File4 + response[3];
                File5 = File5 + response[4];
                $("#Download1").html(File1);
                $("#Download2").html(File2);
                $("#Download3").html(File3);
                $("#Download4").html(File4);
                $("#Download5").html(File5);

                if (File1.length > 0) {
                    if (File1 != "null") {
                        try {
                            $("#Download1").show();
                            $("#Delete1").show();
                            $("#Upload1").hide();

                        } catch (error) { }
                    }
                }
                else {
                    try {
                        $("#Download1").hide();
                        $("#Delete1").hide();
                    } catch (error) { }
                }
                if (File2.length > 0) {
                    if (File2 != "null") {
                        try {
                            $("#Download2").show();
                            $("#Delete2").show();
                            $("#Upload2").hide();
                        } catch (error) { }
                    }
                }
                else {
                    try {
                        $("#Download2").hide();
                        $("#Delete2").hide();
                    } catch (error) { }

                }
                if (File3.length > 0) {
                    if (File3 != "null") {
                        try {
                            $("#Download3").show();
                            $("#Delete3").show();
                            $("#Upload3").hide();
                        } catch (error) { }
                    }
                }
                else {
                    try {
                        $("#Download3").hide();
                        $("#Delete3").hide();
                    } catch (error) { }

                }
                if (File4.length > 0) {
                    if (File4 != "null") {
                        try {
                            $("#Download4").show();
                            $("#Delete4").show();
                            $("#Upload4").hide();
                        } catch (error) { }
                    }
                }
                else {
                    try {
                        $("#Download4").hide();
                        $("#Delete4").hide();
                    } catch (error) { };
                }
                if (File5.length > 0) {
                    if (File5 != "null") {
                        try {
                            $("#Download5").show();
                            $("#Delete5").show();
                            $("#Upload5").hide();
                        } catch (error) { }
                    }
                }
                else {
                    try {
                        $("#Download").hide();
                        $("#Delete5").hide();
                    } catch (error) { }

                }
            }
        });
    });
</script>


<script>
    function savereview() {



        var url = window.location.href;
        var page = url.split('/');
        var id = page[page.length - 1];
         var currentid = "@CurrentUserID()";
        var Physicalcopycomments = $("#physicalcopy_Comments").val()
        //alert(Physicalcopyverified)
        var physicalcopylocation = $("#physicalcopy_Location").val();
        if ((Physicalcopycomments.length > 0) && (physicalcopylocation.length > 0)) {
                 swal({
                text: "Sure you want to Save ?",
                type: 'warning',
                buttons: {
                    cancel: {
                        visible: true,
                        text: 'No, Cancel !',
                        className: 'btn btn-danger'
                    },
                    confirm: {
                        text: 'Yes, Save',
                        className: 'btn btn-success'
                    }
                }
             }).then(function (value) {
                 if (value == true) {
                         $.ajax({
                    type: "POST",
                    url: "/Contract/SaveReviewforDB",
                    data: { id: id, Physicalcopycomments: Physicalcopycomments, physicalcopylocation: physicalcopylocation, currentid: currentid },
                    success: function (response) {
                        if (response == "success") {
                            //$("#DownloadFiles").show();
                            swal("Saved", {
                                icon: "success",
                            }).then(function (result) {
                                if (result) {
                                    window.location = '/Contract/ExistingContractView/' + id;

                                }
                            });
                        }
                        // alert(response)
                    }
                         });
                     }
            });
        }
        else {
            swal({
                text: "Fields are required",
                icon: 'warning',
            });
        }
    }
</script>
@*<script>

        $("#physicalcopy_Location").focus(function () {
            $(this).data('desval', $(this).val());
        });
        $("#physicalcopy_Location").change(function () {
            var initialvalue = "Physical Copy Location  : " + $(this).data('desval');
            var details = "Physical Copy Location  : " + $(this).val();
              var url = window.location.href;
            var page = url.split('/');
            var ID = page[page.length - 1];

                var USerID = "@CurrentLoggedUserID - @CurrentLoggedUserName";

            $.ajax({
                type: "POST",
                url: "/Contract/SaveLog",
               data: { initialvalue: initialvalue, details: details, ID: ID, USerID: USerID },


                success: function (response) {

                    //alert(response.LogUserID);
                    // alert(called);
                },
                failure: function (response) {
                    alert(response);
                },
                error: function (response) {
                    alert(response.responseText);
                }
            });
        });
    </script>


    <script>

        $("#physicalcopy_Comments").focus(function () {
            $(this).data('signedval', $(this).val());
        });
        $("#physicalcopy_Comments").change(function () {
            var initialvalue = "Reviewer Comments : " + $(this).data('signedval');
            var details = "Reviewer Comments : " + $(this).val();
             var url = window.location.href;
            var page = url.split('/');
            var ID = page[page.length - 1];

             var USerID = "@CurrentLoggedUserID - @CurrentLoggedUserName";

            $.ajax({
                type: "POST",
                url: "/Contract/SaveLog",
               data: { initialvalue: initialvalue, details: details, ID: ID, USerID: USerID },


                success: function (response) {

                    //alert(response.LogUserID);
                    // alert(called);
                },

            });
        });
    </script>*@

<script>
    $(function () {
        var url = window.location.href;
        var page = url.split('/');
        var ID = page[page.length - 1];
        var Name = "";
        $.ajax({
            type: "POST",
            url: "/Contract/GetReviewerNameOnID",
            data: { ID: ID },


            success: function (response) {
                if (response == "error") {
                    $("#Reviewer_Name").html("");

                }
                else {
                    Name = Name + ' - ' + response;
                    $("#Reviewer_Name").html(Name);
                }
            },

        });
    });
</script>

<script>
    $("#Initiate_Cancel").click(function () {
        $("#InitiateComment").val("");
        $('#InitiateButton').prop('disabled', true);
        $("#InitiateModal").modal('hide');
    });

    $("#Approve_Cancel").click(function () {
        $("#ApproveComment").val("");
        $('#ApproveButton').prop('disabled', true);
        $("#ApproveModal").modal('hide');
    });

    $("#Reject_Cancel").click(function () {
        $("#RejectComment").val("");
        $('#RejectButton').prop('disabled', true);
        $("#RejectAndAssignModal").modal('hide');
    });
</script>
